{"version":3,"sources":["../../src/index.ts","../../../src/signature/index.ts","../../../src/signature/types.ts","../../../src/signature/utils.ts","../../../src/utils/chain.ts","../../../src/wallet/index.ts","../../../../src/wallet/walletProvider/evm.ts","../../src/constants.ts","../../../src/utils/serializeOpenSeaOrder.ts","components/AssetToken.jsx","web3/reducer.js","web3/index.js","components/NftPreview.jsx","components/Marketplace.jsx","App.jsx","index.js","../../src/addresses.ts","../../../src/utils/HttpRequest.ts","../../../src/utils/emitter.ts","../../../src/utils/chains.ts","../../../src/utils/isValidERC20.ts","../../../src/utils/currencies.ts","../../../src/api/index.ts","../../../src/api/orders.ts","../../../src/api/tokens.ts","../../../src/api/trades.ts","../../../src/api/externalOrders.ts","../../src/config.ts","../../../src/transaction/index.ts","../../../src/transaction/contracts.ts","../../../src/utils/transactionConfirmation.ts","../../../../src/transaction/abis/ERC721ABI.ts","../../../../src/transaction/abis/ERC1155ABI.ts","../../../../src/transaction/abis/ERC20ABI.ts","../../../../src/transaction/abis/DevUtilsABI.ts","../../../../src/transaction/abis/ExchangeABI.ts","../../../../src/transaction/abis/ForwarderABI.ts","../../../../src/transaction/abis/CollectionsABI.ts","../../../../src/transaction/abis/RoyaltiesManagerABI.ts","../../../src/utils/send.ts","../../../src/transaction/order.ts"],"names":["field","r","this","prototype","raw","nifty","Web3Reducer","state","action","type","wallet","payload","provider","web3","initialState","loading","web3Modal","Web3Modal","providerOptions","cacheProvider","Web3Context","createContext","Web3Provider","children","useReducer","dispatch","setWallet","setProvider","setWeb3","logout","close","currentProvider","initWeb3","Web3","eth","extend","methods","name","call","outputFormatter","utils","hexToNumber","subscribeProvider","data","on","accounts","address","toLowerCase","getBalance","balance","chainId","newChainId","connectWeb3","useCallback","connect","getAccounts","console","error","useEffect","cachedProvider","Provider","value","Token","contract","thumb","price","tokenID","chain","Nifty","findChainById","className","style","border","padding","margin","alignItems","to","color","width","height","display","justifyContent","src","alt","maxWidth","maxHeight","textOverflow","whiteSpace","overflow","chains","sortOptions","label","Marketplace","queryParams","URLSearchParams","window","location","search","useState","nfts","setNfts","isChainIdRequired","setIsChainIdRequired","useContext","options","sort","get","contractAddress","connectedChainId","limit","skip","key","env","envs","TESTNET","getNFTs","then","res","catch","e","log","substring","length","onClick","gap","id","form","defaultValue","marginRight","map","option","placeholder","onChange","target","required","flexWrap","nft","NftPreview","AssetToken","useParams","nftId","setNft","nftData","setNftData","userAvailableMethods","setUserAvailableMethods","paymentMethods","setPaymentMethods","getNFT","getNFTData","nftRes","initWallet","networkTypes","EVM","getUserAvailableMethods","listings","canSell","availableMethodsRes","getAvailablePaymentMethods","buy","nftToBuy","isExternalOrder","setStatusListener","status","addListener","tnxHash","orderId","externalOrderId","getListing","listingRes","list","nftToSell","preventDefault","paymentMethod","offer","cancelOrder","nftToCancel","preview","contractName","externalOrderPrice","description","onSubmit","canOffer","canBuy","canCancel","attributes","attribute","trait_type","App","path","ReactDOM","createRoot","document","getElementById","render","StrictMode","exports","SOLANA","_c","default","web3_1","__importDefault"],"mappings":"yiEAAA,aACI,EAAJ,UACA,YACA,UAEA,aACA,YACA,SAEA,YACA,SACA,UACI,EAAJ,QAMA,YAIA,aAOE,WAAY,GAAZ,WAwYA,6BAA0B,SAAC,EAAS,GAAoB,YAApB,eAAoB,IAAI,SAAQ,SAAC,EAAS,IAC5C,SAA1B,IAAgC,SAAK,OAAO,SAAS,IAAI,sBAAsB,GAClF,MAAK,SAAC,GAAY,OAAC,GAAW,EAAQ,YACnC,EAAQ,GACR,YAAW,WACX,MAHe,MAKrB,OA9YA,KAAK,IAAM,EAAQ,IACnB,KAAK,IAAM,EAAQ,IACnB,KAAK,KAAM,aAAI,KAAK,KA8ZxB,OA3ZE,gCAAW,EAAc,GACvB,KAAK,QAAS,aAAO,EAAM,IAG7B,uCAAkB,GAChB,KAAK,SAAW,GAGlB,iCAAY,EAAoB,EAAkB,sBAC5C,EACF,UAAQ,KAAK,EAAO,GAGpB,UAAQ,GAAG,EAAO,IAKtB,0CACE,IAAK,KAAK,IACR,MAAM,IAAI,MAAM,sBAIpB,oCACE,IAAK,KAAK,OACR,MAAM,IAAI,MAAM,sBAUd,gBAAN,SAAU,G,gHAIQ,OAFhB,KAAK,eAEW,GAAM,KAAK,OAAO,kB,OAClB,OADV,EAAU,SACA,GAAM,KAAK,OAAO,W,OAElC,GAFM,EAAU,SAEZ,EAAM,QAAU,gBAAc,MAChC,MAAM,IAAI,MAAM,sB,GAGZ,EAAkB,SAAC,GACvB,QAAS,EAAM,SAGb,EAAgB,GAAhB,YACI,EAAgB,E,8CAEZ,EAAc,SACf,gB,aAOI,OAND,EAAc,KAAK,MAAQ,OAAO,UAAQ,KAAO,UAAQ,QACzD,EAAa,IAAI,aAAW,KAAK,OAAO,SAAS,gBAAiB,CACtE,YAAW,IAGP,GAAiB,2BAAsB,GACtC,GAAM,EAAW,aAAa,CAAE,MAAO,EAAgB,eAAgB,K,OAA9E,SAAO,U,OAGP,Y,0BAGJ,M,WAAM,IAAI,MAAM,G,OAcR,OAVN,EAAc,IAAI,UAAY,CAClC,OAAQ,KAAK,OACb,QAAO,EACP,QAAO,IAGL,KAAK,UACP,EAAY,kBAAkB,KAAK,UAGzB,GAAM,EAAY,IAAI,I,QAClC,SADY,kBAYR,iBAAN,SAAW,EAAY,EAAwB,EAAwB,G,kHAMrD,OAJhB,KAAK,eAEG,EAAiE,EAAlD,gBAAE,EAAgD,EAAzC,QAAE,EAAuC,EAA3B,aAAW,EAAgB,EAAL,QAEpD,GAAM,KAAK,OAAO,kB,OAClB,OADV,EAAU,SACA,GAAM,KAAK,OAAO,W,OAGlC,GAHM,EAAU,SACV,EAAkB,UAAU,GAAS,WAEtC,kBAAa,EAAc,GAC9B,MAAM,IAAI,MAAM,yBAGZ,EAAc,IAAI,UAAY,CAClC,OAAQ,KAAK,OACb,QAAO,EACP,QAAO,IAGL,KAAK,UACP,EAAY,kBAAkB,KAAK,U,iBAIjB,O,sBAAA,GAAM,EAAY,KAAK,CAAE,gBAAe,EAAE,QAAO,EAAE,aAAY,EAAE,MAAK,EAAE,gBAAe,EAAE,YAAW,EAAE,eAAc,EAAE,aAAY,K,OACxI,OADN,EAAY,SACN,GAAM,KAAK,IAAI,OAAO,OAAO,I,OACzC,SADY,SACD,M,OAEX,M,WAAM,IAAI,MAAM,G,yBAKd,kBAAN,SAAY,EAAY,EAAe,G,4GAGrB,OAFhB,KAAK,eAEW,GAAM,KAAK,OAAO,kB,OAClB,OADV,EAAU,SACA,GAAM,KAAK,OAAO,W,OAcpB,OAdR,EAAU,SACV,EAAkB,UAAU,GAAS,SAErC,EAAc,IAAI,UAAY,CAClC,OAAQ,KAAK,OACb,QAAO,EACP,QAAO,IAGL,KAAK,UACP,EAAY,kBAAkB,KAAK,UAG/B,EAAgB,KAAK,MAAM,KAAK,UAAU,IAClC,GAAM,KAAK,YAAY,EAAK,gBAAiB,EAAK,QAAS,EAAK,QAAS,EAAK,e,OAEzE,OAFb,EAAQ,SAEK,GAAM,EAAY,MAAM,CACzC,KAAM,EACN,MAAO,EACP,kBAAkB,EAClB,gBAAe,EACf,eAAc,K,OAQhB,OAbM,EAAa,SAQf,EAAM,KACR,EAAW,iBAAmB,EAAM,IAGtC,EAAW,KAAO,QAClB,GAAO,KAAK,IAAI,OAAO,OAAO,YAG1B,wBAAN,SAAkB,G,oGAGhB,GAFA,KAAK,eAED,EAAM,QAAU,gBAAc,MAChC,MAAM,IAAI,MAAM,sBAGF,SAAM,KAAK,OAAO,kB,OAClB,OADV,EAAU,SACA,GAAM,KAAK,OAAO,W,OAYlC,OAZM,EAAU,SAEV,EAAc,IAAI,UAAY,CAClC,OAAQ,KAAK,OACb,QAAO,EACP,QAAO,IAGL,KAAK,UACP,EAAY,kBAAkB,KAAK,UAGrC,GAAM,EAAY,YAAY,I,OAC9B,OADA,SACA,GAAO,KAAK,IAAI,OAAO,OAAO,EAAM,aAIhC,wBAAN,SAAkB,G,oGAGhB,GAFA,KAAK,eAED,EAAM,QAAU,gBAAc,MAChC,MAAM,IAAI,MAAM,sBAGF,SAAM,KAAK,OAAO,kB,OAClB,OADV,EAAU,SACA,GAAM,KAAK,OAAO,W,OAYtB,OAZN,EAAU,SAEV,EAAc,IAAI,UAAY,CAClC,OAAQ,KAAK,OACb,QAAO,EACP,QAAO,IAGL,KAAK,UACP,EAAY,kBAAkB,KAAK,UAGzB,GAAM,EAAY,YAAY,I,OAC1C,SADY,kBAIR,wBAAN,SAAkB,G,mEAEhB,OADA,KAAK,eACL,GAAO,KAAK,IAAI,OAAO,OAAO,WAoB1B,oBAAN,SAAc,G,gGAEZ,KAAK,qB,iBAGS,O,sBAAA,GAAM,KAAK,IAAI,OAAO,OAAM,OAAM,GAAO,CAAE,IAAK,KAAK,Q,OACjE,SADY,SACD,M,OAEX,M,WAAM,IAAI,MAAM,G,yBAWd,mBAAN,SAAa,EAAyB,EAAiB,G,gGAErD,KAAK,qB,iBAGS,O,sBAAA,GAAM,KAAK,IAAI,OAAO,IAAI,EAAiB,EAAS,CAAE,QAAO,K,OACzE,SADY,SACD,M,OAEX,M,WAAM,IAAI,MAAM,G,yBAYd,uBAAN,SAAiB,G,0GAEf,KAAK,qBAEG,EAAiE,EAAlD,gBAAE,EAAgD,EAAzC,QAAE,EAAuC,EAA3B,aAAE,EAAyB,EAAlB,QAAM,EAAY,EAAL,G,iBAGtD,O,sBAAA,GAAM,KAAK,IAAI,OAAO,SAAS,CACzC,gBAAe,EACf,QAAO,EACP,QAAO,EACP,aAAY,EACZ,QAAO,K,OAET,SAPY,SAOD,M,OAEX,M,WAAM,IAAI,MAAM,G,yBAWd,oCAAN,SAA8B,EAAoB,G,oHAKhC,OAHhB,KAAK,qBACL,KAAK,eAEW,GAAM,KAAK,OAAO,kB,OAClB,OADV,EAAU,SACA,GAAM,KAAK,OAAO,W,OAGlC,GAHM,EAAU,SACR,EAAiE,EAAlD,gBAAE,EAAgD,EAAzC,QAAE,EAAuC,EAA3B,aAAW,EAAgB,EAAL,QAEhE,OAAO,KAAiB,OAAO,GACjC,MAAM,IAAI,MAAM,4BAAqB,IAIvB,SADI,IAAI,UAAY,CAAE,OAAQ,KAAK,OAAQ,QAAO,EAAE,QAAO,IACzC,QAAQ,EAAiB,EAAS,I,OAWpE,OAXM,EAAU,SAEV,EAAiB,EAAS,QAAO,SAAC,GAAS,kBAAK,SAChD,EAA0B,EAAe,MAAK,SAAC,GAAS,SAAK,eAAL,KACxD,EAAqB,EAAe,MAAK,SAAC,GAAS,SAAK,eAAL,KAGrD,EAAK,UACP,EAAQ,EAAS,MAAK,SAAC,GAAM,SAAE,KAAO,EAAT,YAG/B,GAAQ,CACN,SAAU,GAAW,MAA8B,EAAK,MACxD,QAAS,IAAY,EACrB,YAAa,GAAS,EAAM,eAAiB,EAC7C,UAAW,YAUT,uBAAN,SAAiB,EAAiB,G,YAAA,c,yFAChC,KAAK,qB,8CAGC,EACU,GAAM,KAAK,IAAI,eAAe,IAAI,IAD5C,M,OAEF,SADY,SACD,M,OAGD,SAAM,KAAK,IAAI,OAAO,IAAI,I,OACtC,SADY,SACD,M,OAGX,M,WAAM,IAAI,MAAM,G,yBAId,wBAAN,SAAkB,EAAyB,EAA0B,EAAiB,EAAsB,G,0FAC9F,SAAM,KAAK,IAAI,OAAO,SAAS,CACzC,gBAAiB,EACjB,QAAO,EACP,QAAO,EACP,QAAO,EACP,aAAc,K,OAEhB,SAPY,SAOD,cAQb,gDAA2B,EAA2B,GAGpD,YAHoD,cACpD,KAAK,qBAED,EACE,EACK,UAAW,QAAO,SAAU,GAAL,SAAE,UAAY,OAAO,IAAY,EAAjC,wBAGzB,UAAW,QAAO,YAAK,SAAE,UAAY,OAAd,MAEzB,WAaF,QAAQ,CACb,cAAa,iBAGR,eAAe,CACpB,IAAG,MACH,WAAU,aACV,OAAM,UAGD,OAAO,CACZ,KAAI,OACJ,QAAO,WAGX,EAxaA,GA0aA,UAAe,G,mkFChcf,YACI,EAAJ,QACA,YACA,SACA,UAKM,EAAgB,SAAO,EAAU,EAAS,GAAO,0C,0EAC/C,EAAe,CAAC,uBAAwB,uBAAwB,qB,0CAI3C,O,4EAAV,EAAM,QACf,EAAY,CAChB,GAAQ,EAAa,QAAQ,GAC7B,OAAQ,CACN,EACW,sBAAX,EAAiC,EAAU,KAAK,UAAU,IAE5D,QAAS,MACT,OAAM,G,iBAIW,O,sBAAA,IAAM,UAAK,EAAU,I,OACtC,SADiB,U,OAMjB,G,WAHA,EAAU,GAGL,6CAA6C,KAAK,EAAI,SACzD,MAAM,E,qSAKZ,MAAM,UAGF,EAAU,SAAO,EAAU,EAAS,GAAO,0C,iCAE/C,OADM,EAAY,qBAAmB,sBAAsB,GAC3D,IAAO,UAAK,EAAU,CACpB,OAAQ,WACR,OAAQ,CAAC,EAAS,aAOtB,UAAe,SAAO,EAAU,EAAO,EAAM,GAAiB,0C,kEACvD,IACH,EAAoB,UAAU,OAAO,EAAM,UAAU,UAEjD,EAAS,OACV,kBAAc,CACjB,OAAQ,CACN,KAAmB,mBACnB,QAAmB,oBACnB,QAAmB,EAAM,QACzB,kBAAiB,GAEnB,QAAa,EACb,YAAa,U,iBASD,O,sBAAA,GAAM,EAAc,EAAU,EAAM,I,cAAhD,EAAY,S,aAOZ,I,YAAQ,QAAQ,SAAS,iCACvB,MAAM,EAEI,SAAM,EAAQ,EAAU,EAAM,I,cAA1C,EAAY,S,aAEd,IAAK,EACH,MAAM,IAAI,MAAM,gBAYlB,OATM,EAAiB,qBAAmB,uBAAuB,GAC3D,EAAkB,EAAO,OAAO,EACpC,cAAS,EAAe,IACxB,cAAS,EAAe,IACxB,cAAS,EAAe,IACxB,cAAS,KAEL,EAAe,YAAK,EAAgB,SAAS,QAEnD,UAAY,GAAK,CAAE,UAAW,e,mICnGnB,iBAAiB,CAC5B,MAAO,CACL,aAAc,CACZ,CACE,KAAM,OACN,KAAM,UAER,CACE,KAAM,UACN,KAAM,UAER,CACE,KAAM,UACN,KAAM,WAER,CACE,KAAM,oBACN,KAAM,YAGV,MAAO,CACL,CACE,KAAM,eACN,KAAM,WAER,CACE,KAAM,eACN,KAAM,WAER,CACE,KAAM,sBACN,KAAM,WAER,CACE,KAAM,gBACN,KAAM,WAER,CACE,KAAM,mBACN,KAAM,WAER,CACE,KAAM,mBACN,KAAM,WAER,CACE,KAAM,WACN,KAAM,WAER,CACE,KAAM,WACN,KAAM,WAER,CACE,KAAM,wBACN,KAAM,WAER,CACE,KAAM,OACN,KAAM,WAER,CACE,KAAM,iBACN,KAAM,SAER,CACE,KAAM,iBACN,KAAM,SAER,CACE,KAAM,oBACN,KAAM,SAER,CACE,KAAM,oBACN,KAAM,a,21BC3Ed,gBAEA,WACA,WAEa,qBAAqB,CAM9B,+BAAsB,GAClB,OAAO,EAAQ,UACX,EAAO,OAAO,CACV,EAAO,KAAK,OAAQ,OACpB,qBAAmB,YAAY,eAAgB,EAAU,OAAQ,EAAU,OAC3E,qBAAmB,YAAY,EAAU,YAAa,EAAU,QAAS,EAAU,WAU/F,4CAAmC,GAC/B,OAAO,qBAAmB,YAAY,EAAU,YAAa,EAAU,QAAS,EAAU,QAQ9F,4BAAmB,GACf,OAAO,qBAAmB,YACtB,eACA,EAGA,CACI,aAAc,CACV,CAAE,KAAM,OAAQ,KAAM,UACtB,CAAE,KAAM,UAAW,KAAM,UACzB,CAAE,KAAM,UAAW,KAAM,WACzB,CAAE,KAAM,oBAAqB,KAAM,eAKnD,2BAAkB,EAAqB,EAAoB,GACvD,QADuD,cACnD,EAAM,SAAS,SAAuC,IAAvB,EAAM,GACrC,OAAO,EAEX,EAAM,KAAK,GACX,IAAoB,YAAM,GAAN,eAChB,IADC,IAAM,EAAK,KACM,2BAAmB,kBAAkB,EAAM,KAAM,EAAO,GAAxD,eAAgE,CAA7E,IAAM,EAAG,KACL,EAAM,SAAS,IAChB,EAAM,KAAK,GAIvB,OAAO,GAEX,qBAAY,EAAqB,GAC7B,IAAI,EAAO,qBAAmB,kBAAkB,EAAa,GAC7D,EAAO,EAAK,QAAO,YAAK,gBAGxB,IADA,IAAI,EAAS,GACK,MAFlB,EAAO,CAAC,GAAa,OAAO,EAAK,QAEf,eAAM,CAAnB,IAAM,EAAG,KACV,GAAU,UAAG,EAAG,YAAI,EAAM,GAAK,KAAI,SAAC,G,IAAE,EAAI,OAAE,EAAI,OAAO,gBAAG,EAAI,YAAI,MAAQ,KAAK,KAAI,KAEvF,OAAO,GAEX,qBAAY,EAAqB,EAAoB,GAGjD,IAFA,IAAM,EAAe,CAAC,WAChB,EAAmD,CAAC,qBAAmB,UAAU,EAAa,IAChF,QAAM,GAAN,eAAoB,CAAnC,IAAM,EAAK,KACN,EAAQ,EAAK,EAAM,MACzB,GAAmB,WAAfA,EAAM,KAAmB,CACzB,IAAM,EAAY,EAAQ,UAAU,EAAO,KAAK,IAChD,EAAa,KAAK,WAClB,EAAc,KAAK,QAChB,GAAmB,UAAf,EAAM,KAAkB,CACzB,EAAY,EAAQ,UAAU,EAAQ,SAAS,IACrD,EAAa,KAAK,WAClB,EAAc,KAAK,QAChB,QAA0B,IAAtB,EAAM,EAAM,MAAqB,CACxC,EAAa,KAAK,WACZ,EAAY,EAAQ,UAEtB,EAAQ,SAAS,qBAAmB,YAAY,EAAM,KAAM,EAAuB,KAEvF,EAAc,KAAK,OAChB,IAAI,EAAM,KAAK,YAAY,OAAS,EAAM,KAAK,OAAS,EAC3D,MAAM,IAAI,MAAM,gDAEhB,EAAa,KAAK,EAAM,MACxB,IAAM,EAAkB,qBAAmB,gBAAgB,EAAM,KAAM,GACvE,EAAc,KAAK,IAG3B,OAAO,EAAO,MAAM,gBAAgB,OAAO,EAAc,IAE7D,yBAAgB,EAAc,GAE1B,MAAa,YAAT,EACI,UAAU,YAAY,GACf,EAAM,SAHD,IAKT,IAAI,UAAU,GAAO,SALZ,IAOb,GAEX,mBAAU,EAAqB,GAC3B,OAAO,EAAQ,UAAU,EAAO,KAAK,qBAAmB,YAAY,EAAa,MAErF,qBAAY,EAAqB,EAAoB,GACjD,OAAO,EAAQ,UAAU,EAAQ,SAAS,qBAAmB,YAAY,EAAa,EAAM,MAEhG,gCAAuB,GACf,MAAc,EAAQ,WAAW,GAA/B,EAAC,IAAE,EAAC,EAAAC,EAAE,EAAC,IAMf,MALiC,CAC7B,EAAC,EACD,EAAG,EAAQ,YAAY,GACvB,EAAG,EAAQ,YAAY,MASpB,OAAO,SAAC,EAAU,GAAS,WAAI,SAAQ,SAAC,EAAS,GAAW,SAAS,UAAU,GAAM,SAAC,EAAK,GAIpG,OAHI,EAAO,QACP,EAAM,EAAO,OAEb,EACO,EAAO,GAEX,EAAQ,EAAO,iB,0wBC9I1B,gBAEa,gBAAgB,SAAC,GAAO,iBAAiB,MAAK,SAAC,GAAM,SAAE,SAAF,MAAoB,CACpF,UAAW,MAAK,eAAgB,CAAE,KAAM,IAAM,KAAM,0BAA2B,UAAW,M,yKCH5F,aAEA,aAIM,IAAQ,MACX,OAAM,UAGR,GAED,mBAAyB,EAAc,GACrC,IAAM,EAAU,EAAS,GACzB,IAAK,EACH,MAAM,IAAI,MAAM,yBAElB,OAAO,IAAI,EAAQ,K,m9CCfrB,iBAGE,WAAY,GACV,KAAK,SAAW,EAuDpB,OApDQ,2BAAN,W,0FACmB,SAAMC,KAAK,SAAS,IAAI,e,OACzC,SADiB,SACD,GAAG,uBAGf,oBAAN,W,mEACE,SAAO,KAAK,SAAS,IAAI,qBAGrB,uBAAN,SAAiB,G,mEACf,SAAO,KAAK,SAAS,IAAI,WAAW,WAGtC,sCAAiB,GACf,OAAO,KAAK,SAAS,MAAM,QAAQ,OAAO,KAG5C,2CAAsB,GACpB,OAAO,KAAK,SAAS,MAAM,MAAM,OAAO,KAG1C,+BAAU,GACR,OAAO,KAAK,SAAS,MAAM,UAAU,IAGvC,2BAAM,GACJ,OAAO,KAAK,SAAS,MAAM,MAAM,IAGnC,4BAAO,GACL,OAAO,KAAK,SAAS,MAAM,UAAU,IAGjC,EAAAC,UAAA,aAAN,SAAmB,EAAM,EAAS,G,mEAChC,SAAO,KAAK,SAAS,IAAI,SAAS,KAAK,EAAM,EAAS,WAGlD,iBAAN,SAAW,EAAM,G,mEACf,SAAO,KAAK,SAAS,IAAI,KAAK,EAAM,WAGtC,8BAAS,EAAK,GACZ,OAAO,IAAI,KAAK,SAAS,IAAI,SAAS,EAAK,IAGvC,kCAAN,SAA4B,G,mEAC1B,SAAO,KAAK,SAAS,IAAI,sBAAsB,WAG3C,wBAAN,W,mEACE,SAAO,KAAK,SAAS,IAAI,sBAE7B,EA3DA,GA6DA,UAAe,G,4tBC/Df,gBAEa,OAAO,OACP,UAAU,UAEV,mBAAmB,UACnB,oBAAoB,QAEpB,WAAW,WACX,mBAAmB,mBACnB,YAAY,YACZ,WAAW,WACX,OAAO,OACP,iBAAiB,iBACjB,mBAAmB,mBACnB,UAAU,UACV,MAAM,MACN,OAAO,OACP,UAAU,UACV,QAAQ,QACR,WAAW,WACX,WAAW,WACX,aAAa,aACb,QAAQ,QAER,eAAe,6CACf,aAAa,KACb,OAAO,IAAI,UAAU,GAAG,WAExB,oBAAoB,IAAI,UAAU,KAAK,MAAO,KAAK,MAAQ,IAAQ,YAAY,WAC/E,iCAAiC,GAEjC,UAAU,UACV,YAAY,YACZ,UAAU,UAEV,SAAS,SACT,UAAU,UAEV,gBAAgB,CAC3B,MAAW,QACX,OAAW,SACX,UAAW,YACX,QAAW,UACX,QAAW,Y,4JC/BA,wBAAwB,SAAC,G,IAAE,EAAG,MACzC,GAdF,SAAsB,EAAK,GACzB,IAA2B,iBAAO,QAAQ,GAAf,eAAqB,CAArC,WAAC,EAAG,KACb,GAAc,OADM,KACA,CAClB,GAAI,GAAU,EAAO,SAAS,GAC5B,SAGF,OADA,QAAQ,MAAM,UAAG,EAAG,cACb,GAGX,OAAO,EAIH,CAAa,EAAK,CAAC,UACrB,MAAM,IAAI,MAAM,sBAGlB,MAAO,CACL,UAAW,EAAI,UACf,gBAAiB,EAAI,iBACrB,YAAa,EAAI,aACjB,YAAa,EAAI,aACjB,aAAc,EAAI,cAClB,eAAgB,EAAI,gBACpB,UAAW,EAAI,UACf,YAAa,EAAI,aACjB,MAAO,EAAI,MACX,iBAAkB,EAAI,mBACtB,UAAW,EAAI,WACf,cAAe,EAAI,WACnB,UAAW,EAAI,WACf,UAAW,EAAI,WACf,gBAAiB,EAAI,iBACrB,aAAc,EAAI,cAClB,KAAM,EAAI,KACV,MAAO,EAAI,MACX,iBAAkBC,EAAI,mBACtB,UAAW,EAAI,c,ySCjCfC,E,mJCLSC,EAAc,SAACC,EAAOC,GAC/B,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BACFF,GADL,IAEEG,OAAQF,EAAOG,UAEnB,IAAK,eACH,OAAO,2BACFJ,GADL,IAEEK,SAAUJ,EAAOG,UAErB,IAAK,WACH,OAAO,2BACFJ,GADL,IAEEM,KAAML,EAAOG,UAEjB,QACE,OAAOJ,I,QCVTO,EAAe,CACnBC,SAAU,EACVL,OAAU,KACVE,SAAU,KACVC,KAAU,MAONG,EAAY,IAAIC,IAAU,CAC9BC,gBALsB,CACtBC,eAAe,KAOJC,EAAcC,wBAAcP,GAE5BQ,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,EAA0BC,qBAAWlB,EAAaQ,GAAlD,mBAAOP,EAAP,KAAckB,EAAd,KAEMC,EAAY,SAAChB,GACjBe,EAAS,CACPhB,KAAS,aACTE,QAASD,KAIPiB,EAAc,SAACf,GACnBa,EAAS,CACPhB,KAAS,eACTE,QAASC,KAIPgB,EAAU,SAACf,GACfY,EAAS,CACPhB,KAAS,WACTE,QAASE,KAIPgB,EAAS,WACb,IAAQhB,EAAmBN,EAAnBM,KAAMD,EAAaL,EAAbK,SACVA,EAASkB,OACXlB,EAASkB,QAEPjB,GAAQA,EAAKkB,iBAAmBlB,EAAKkB,gBAAgBD,OACvDjB,EAAKkB,gBAAgBD,QAEvBJ,EAAU,MACVC,EAAY,MACZC,EAAQ,OAGJI,EAAW,SAACpB,GAChB,IAAMC,EAAO,IAAIoB,IAAKrB,GAYtB,OAVAC,EAAKqB,IAAIC,OAAO,CACdC,QAAS,CACP,CACEC,KAAiB,UACjBC,KAAiB,cACjBC,gBAAiB1B,EAAK2B,MAAMC,gBAK3B5B,GAGH6B,EAAiB,iDAAG,WAAOC,EAAM3B,EAAWH,EAAMD,GAA9B,8EACnBA,EAASgC,GADU,iDAIxBhC,EAASgC,GAAG,QAAZ,gCAAqB,wFACnBf,IADmB,4CAGrBjB,EAASgC,GAAG,kBAAZ,iDAA+B,WAAOC,GAAP,wFACrBnC,EAAWH,EAAXG,OACHmC,EAAS,GAFe,gBAG3BhB,IAH2B,8BAKrBiB,EAAUD,EAAS,GAAGE,cALD,SAMLlC,EAAKqB,IAAIc,WAAWF,GANf,OAMrBG,EANqB,OAQ3BvB,EAAU,2BAAKhB,GAAN,IAAcoC,UAASG,aARL,4CAA/B,uDAWArC,EAASgC,GAAG,eAAZ,iDAA4B,WAAOM,GAAP,4FAClBxC,EAAWH,EAAXG,OADkB,SAEDG,EAAKqB,IAAIgB,UAFR,cAEpBC,EAFoB,gBAGJtC,EAAKqB,IAAIc,WAAWtC,EAAOiC,KAAKG,SAH5B,OAGpBG,EAHoB,OAI1BvB,EAAU,2BACLhB,GADI,IACIwC,QAASC,EAAYF,aALR,2CAA5B,uDAlBwB,2CAAH,4DA4BjBG,EAAcC,sBAAW,gCAAC,wGACxBC,IADwB,2CAE7B,IAEGA,EAAO,iDAAG,mIAEWtC,EAAUsC,UAFrB,cAEN1C,EAFM,OAGZe,EAAYf,GAENC,EAAOmB,EAASpB,GAEtBgB,EAAQf,GAPI,SASWA,EAAKqB,IAAIqB,cATpB,cASNV,EATM,OAWNC,EAAUD,EAAS,GAAGE,cAXhB,UAaUlC,EAAKqB,IAAIgB,UAbnB,eAaNA,EAbM,iBAeUrC,EAAKqB,IAAIc,WAAWF,GAf9B,QAeNG,EAfM,OAmBZvB,EAFMiB,EAAO,CAAEG,UAASI,UAASD,YAIjCP,EAAkBC,EAAM3B,EAAWH,EAAMD,GArB7B,kDAuBZ4C,QAAQC,MAAR,MAvBY,0DAAH,qDAiCb,OANAC,qBAAU,WACJ1C,EAAU2C,gBACZL,MAED,IAGD,cAAClC,EAAYwC,SAAb,CACEC,MAAK,2BACAtD,GADA,IAEH6C,cACAvB,WAJJ,SAOGN,KC5GQuC,EAxCD,SAAC,GAER,IADLC,EACI,EADJA,SAAU1B,EACN,EADMA,KAAM2B,EACZ,EADYA,MAAOC,EACnB,EADmBA,MAAOf,EAC1B,EAD0BA,QAASgB,EACnC,EADmCA,QAEjCC,EAAQC,IAAM5B,MAAM6B,cAAcnB,GACxC,OACE,qBACEoB,UAAU,OACVC,MAAO,CACLC,OAAQ,YAAaC,QAAS,OAAQC,OAAQ,OAAQC,WAAY,UAHtE,SAME,eAAC,IAAD,CAAMC,GAAE,iBAAY1B,EAAZ,YAAuBa,EAASjB,QAAhC,YAA2CoB,GAAWK,MAAO,CAAEM,MAAO,SAA9E,UACE,qBAAKN,MAAO,CACVO,MAAgB,QAChBC,OAAgB,QAChBC,QAAgB,OAChBC,eAAgB,SAChBN,WAAgB,UALlB,SAQE,qBAAKO,IAAKlB,EAAOmB,IAAI,GAAGZ,MAAO,CAAEa,SAAU,QAASC,UAAW,aAEjE,oBAAId,MAAO,CACTe,aAAc,WAAYC,WAAY,SAAUC,SAAU,SAAUJ,SAAU,SADhF,SAIGrB,EAAS1B,OAEZ,oBAAIkC,MAAO,CACTe,aAAc,WAAYC,WAAY,SAAUC,SAAU,SAAUJ,SAAU,SADhF,SAIG/C,IAEH,4BAAI4B,IACJ,4BAAIE,EAAM9B,aC9BZoD,EAAS,CACb,CAAEvC,QAAS,GAAIb,KAAM,OACrB,CAAEa,QAAS,IAAKb,KAAM,YACtB,CAAEa,QAAS,MAAOb,KAAM,WACxB,CAAEa,QAAS,KAAMb,KAAM,OACvB,CAAEa,QAAS,QAASb,KAAM,aAC1B,CAAEa,QAAS,OAAQb,KAAM,aACzB,CAAEa,QAAS,IAAKb,KAAM,YAGlBqD,EAAc,CAClB,CAAE7B,MAAO,cAAe8B,MAAO,mBAC/B,CAAE9B,MAAO,eAAgB8B,MAAO,mBAChC,CAAE9B,MAAO,YAAa8B,MAAO,iBAC7B,CAAE9B,MAAO,YAAa8B,MAAO,6BAC7B,CAAE9B,MAAO,aAAc8B,MAAO,6BAC9B,CAAE9B,MAAO,iBAAkB8B,MAAO,sBAoKrBC,EAjKK,WAClB,IAvBsB9C,EAuBhB+C,EAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QACxD,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkDF,oBAAS,GAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KAEA,EAMIC,qBAAWnF,GAFbV,GAJF,EACEE,SADF,EAEEiB,OAFF,EAGEhB,KAHF,EAIEH,QACA0C,EALF,EAKEA,YAqCF,OAlCAM,qBAAU,WACR,IAAM8C,EAAU,CACdC,KAAiBZ,EAAYa,IAAI,SAAW,cAC5CC,gBAAiBd,EAAYa,IAAI,oBAG/Bb,EAAYa,IAAI,iBAClBF,EAAQ1D,QAAU+C,EAAYa,IAAI,eAAe3D,eAE/C8C,EAAYa,IAAI,aAClBF,EAAQI,iBAAmBf,EAAYa,IAAI,YAEzCb,EAAYa,IAAI,WAClBF,EAAQf,OAAS,CAACI,EAAYa,IAAI,WAEhCb,EAAYa,IAAI,YAClBF,EAAQP,OAASJ,EAAYa,IAAI,WAE/Bb,EAAYa,IAAI,WAClBF,EAAQK,MAAQhB,EAAYa,IAAI,UAE9Bb,EAAYa,IAAI,UAClBF,EAAQM,KAAOjB,EAAYa,IAAI,SAGzB,IAAItC,IAAM,CAAE2C,IAAK,OAAQC,IAAK5C,IAAM6C,KAAKC,UAE3CC,QAAQX,GACXY,MAAK,SAACC,GAAD,OAASjB,EAAQiB,MACtBC,OAAM,SAACC,GACN/D,QAAQgE,IAAI,IAAKD,QAEpB,IAGD,gCACE,iCACG7G,GAxEeoC,EAwESpC,EAAOoC,QAxEJA,GAAO,UAAOA,EAAQ2E,UAAU,EAAG,GAA5B,cAAoC3E,EAAQ2E,UAAU3E,EAAQ4E,OAAS,EAAG5E,EAAQ4E,UA0EjH,wBAAQjH,KAAK,SAASkH,QAASvE,EAA/B,mCAMN,gCACE,qBAAKmB,MAAO,CAAES,QAAS,OAAQ4C,IAAK,MAAOjD,WAAY,UAAvD,SACE,uBAAMtC,KAAK,cAAcwF,GAAG,cAA5B,UACE,wBACEA,GAAG,SACHxF,KAAK,QACLyF,KAAK,cACLC,aAAclC,EAAYa,IAAI,UAAY,MAC1CnC,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAASkD,YAAa,QALxD,SAOGvC,EAAOwC,KAAI,SAAC9D,GAAD,OACV,wBAA4BN,MAAOM,EAAMjB,QAAzC,SAAmDiB,EAAM9B,MAA5C8B,EAAMjB,cAIvB,wBACE2E,GAAG,OACHxF,KAAK,OACLyF,KAAK,cACLC,aAAclC,EAAYa,IAAI,SAAW,cACzCnC,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAASkD,YAAa,QALxD,SAOGtC,EAAYuC,KAAI,SAACC,GAAD,OACf,wBAA2BrE,MAAOqE,EAAOrE,MAAzC,SAAiDqE,EAAOvC,OAA3CuC,EAAOrE,YAIxB,uBACEgE,GAAG,SACHxF,KAAK,SACL8F,YAAY,SACZJ,aAAclC,EAAYa,IAAI,UAC9BoB,KAAK,cACLvD,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAASkD,YAAa,UAGxD,uBACEH,GAAG,cACHxF,KAAK,cACL8F,YAAY,eACZJ,aAAclC,EAAYa,IAAI,eAC9BoB,KAAK,cACLM,SAAU,SAACb,GAAD,OAAOjB,IAAuBiB,EAAEc,OAAOxE,QACjDU,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAASkD,YAAa,UAGxD,uBACEH,GAAG,kBACHxF,KAAK,kBACL8F,YAAY,mBACZJ,aAAclC,EAAYa,IAAI,mBAC9BoB,KAAK,cACLM,SAAU,SAACb,GAAD,OAAOjB,IAAuBiB,EAAEc,OAAOxE,QACjDU,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAASkD,YAAa,UAExD,uBACEH,GAAG,QACHxF,KAAK,QACL8F,YAAY,yBACZJ,aAAclC,EAAYa,IAAI,SAC9BoB,KAAK,cACLvD,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAASkD,YAAa,UAExD,uBACEH,GAAG,OACHxF,KAAK,OACL8F,YAAY,OACZJ,aAAclC,EAAYa,IAAI,QAC9BoB,KAAK,cACLvD,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAASkD,YAAa,WAIvD3B,GAAqBR,EAAYa,IAAI,aACtC,uBACEmB,GAAG,UACHxF,KAAK,UACLiG,SAAUjC,EACV0B,aAAclC,EAAYa,IAAI,WAC9ByB,YAAY,UACZL,KAAK,cACLvD,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAASkD,YAAa,UAIxD,wBAAQvH,KAAK,SAAb,yBAIJ,qBAAK8D,MAAO,CAAES,QAAS,OAAQuD,SAAU,QAAzC,SACGpC,EAAK8B,KAAI,SAACO,GAAD,OACR,cAACC,EAAD,eAEMD,GADCA,EAAIX,gBJsCRa,EAhNI,WAAO,IAAD,EACvB,EAA4CC,cAApChC,EAAR,EAAQA,gBAAiBzD,EAAzB,EAAyBA,QAAS0F,EAAlC,EAAkCA,MAC1B/H,EAAS0F,qBAAWnF,GAApBP,KAER,EAAsBqF,mBAAS,IAA/B,mBAAOsC,EAAP,KAAYK,EAAZ,KACA,EAA8B3C,mBAAS,IAAvC,mBAAO4C,EAAP,KAAgBC,EAAhB,KACA,EAAwD7C,mBAAS,MAAjE,mBAAO8C,EAAP,KAA6BC,EAA7B,KACA,EAA4C/C,mBAAS,MAArD,mBAAOgD,EAAP,KAAuBC,EAAvB,KAEAzF,qBAAU,YACRrD,EAAQ,IAAI+D,IAAM,CAAE2C,IAAK,OAAQC,IAAK5C,IAAM6C,KAAKC,WAE3CkC,OAAOzC,EAAiBiC,EAAO1F,GAClCkE,MAAK,SAACC,GACLwB,EAAOxB,GACPhH,EAAMgJ,WAAWhC,GACdD,MAAK,SAACkC,GACLP,EAAWO,WAGlB,IAEH5F,qBAAU,WACHsF,GACCnI,GAAQiI,IACVzI,EAAMkJ,WAAWnF,IAAMoF,aAAaC,IAAK5I,GACzCR,EAAMqJ,wBAAwBZ,EAAQa,SAAUnB,GAAKpB,MAAK,SAACC,GAIzD,GAHA4B,EAAwB5B,GAGpBA,EAAIuC,QAAS,CACf,IAAMC,EAAsBxJ,EAAMyJ,2BAA2B5G,GAC7DiG,EAAkBU,OAGnBvC,OAAM,SAACC,GACN/D,QAAQgE,IAAI,IAAKD,SAIxB,CAAC1G,EAAMiI,EAAQa,WAElB,IAAMI,EAAG,iDAAG,WAAOC,EAAUC,GAAjB,4FACV5J,EAAMkJ,WAAWnF,IAAMoF,aAAaC,IAAK5I,GACzCR,EAAM6J,mBAAkB,SAACC,GAAD,OAAY3G,QAAQgE,IAAI2C,MAChD9J,EAAM+J,aAAY,SAACC,GAAD,OAAa7G,QAAQgE,IAAI,UAAW6C,KAAU,WAChEhK,EAAM+J,aAAY,kBAAM5G,QAAQgE,IAAI,0BAAyB,wBAGvD8C,EAAUL,EAAkBD,EAASO,gBAAkBP,EAASM,QAP5D,SAQejK,EAAMmK,WAAWF,EAASL,GARzC,cAQJQ,EARI,0BAWUpK,EAAM0J,IAAIU,EAAYR,GAXhC,QAWF5C,EAXE,OAYR7D,QAAQgE,IAAI,MAAOH,GAZX,kDAcR7D,QAAQC,MAAM,IAAd,MAdQ,0DAAH,wDAkBHiH,EAAI,iDAAG,WAAOnD,EAAGoD,GAAV,wFACXpD,EAAEqD,iBAEFvK,EAAMkJ,WAAWnF,IAAMoF,aAAaC,IAAK5I,GACzCR,EAAM6J,mBAAkB,SAACC,GAAD,OAAY3G,QAAQgE,IAAI2C,MAChD9J,EAAM+J,aAAY,kBAAM5G,QAAQgE,IAAI,eAAc,aAE3B,MAPZ,kBAUSnH,EAAMqK,KACtBC,EACApD,EAAEc,OAAOpE,MAAMJ,MALI,MAOnB0D,EAAEc,OAAOwC,cAAchH,OAdhB,OAUHwD,EAVG,OAiBT7D,QAAQgE,IAAI,MAAOH,GAjBV,kDAmBT7D,QAAQC,MAAM,IAAd,MAnBS,0DAAH,wDAuBJqH,EAAK,iDAAG,WAAOvD,EAAGoD,GAAV,2EACZpD,EAAEqD,iBAEFvK,EAAMkJ,WAAWnF,IAAMoF,aAAaC,IAAK5I,GACzCR,EAAM6J,mBAAkB,SAACC,GAAD,OAAY3G,QAAQgE,IAAI2C,MAEzB,MAEvB,IACE9J,EAAMyK,MAAMH,EAAWpD,EAAEc,OAAOpE,MAAMJ,MAHjB,OAIrB,MAAOJ,GACPD,QAAQC,MAAMA,GAXJ,2CAAH,wDAeLsH,EAAW,iDAAG,WAAOC,GAAP,0FAClB3K,EAAMkJ,WAAWnF,IAAMoF,aAAaC,IAAK5I,GACzCR,EAAM6J,mBAAkB,SAACC,GAAD,OAAY3G,QAAQgE,IAAI2C,MAF9B,SAIO9J,EAAMmK,WAAWQ,EAAYV,SAJpC,cAIZG,EAJY,yBAOEpK,EAAM0K,YAAYN,GAPpB,OAOVpD,EAPU,OAQhB7D,QAAQgE,IAAI,MAAOH,GARH,kDAUhB7D,QAAQC,MAAM,IAAd,MAVgB,0DAAH,sDAcjB,OAAK+E,EAGH,gCACE,qBAAKtD,IAAKsD,EAAIyC,QAAS9F,IAAKqD,EAAInG,KAAMkC,MAAO,CAAEa,SAAU,QAASC,UAAW,WAC7E,6BAAKmD,EAAI0C,eACT,6BAAK1C,EAAInG,OAGPmG,EAAIvE,OACF,wCAEGuE,EAAIvE,SAMTuE,EAAI2C,oBACF,uDAEG3C,EAAI2C,sBAKX,8CAEG3C,EAAI4C,eAGP,iCACuB,OAApBpC,QAAoB,IAApBA,OAAA,EAAAA,EAAsBY,UAEnB,uBAAMyB,SAAU,SAAC9D,GAAQmD,EAAKnD,EAAGiB,IAAjC,UACE,uBACEnG,KAAK,QACL8F,YAAY,QACZ5D,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAASkD,YAAa,UAItDkB,GACE,wBACEnB,aAAcmB,EAAe,GAAGrF,MAChCxB,KAAK,gBACLkC,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAASkD,YAAa,QAHxD,SAKGkB,EAAejB,KAAI,SAACC,GAAD,OAClB,wBAA6BrE,MAAOqE,EAAOpF,QAA3C,SAAqDoF,EAAOrE,OAA/CqE,EAAOpF,cAK5B,wBAAQrC,KAAK,SAAb,sBAIgB,OAApBuI,QAAoB,IAApBA,OAAA,EAAAA,EAAsBsC,WAEpB,uBAAMD,SAAU,SAAC9D,GAAQuD,EAAMvD,EAAGiB,IAAlC,UACE,uBACEnG,KAAK,QACL8F,YAAY,QACZ5D,MAAO,CAAEQ,OAAQ,OAAQD,MAAO,QAASkD,YAAa,UAExD,wBAAQvH,KAAK,SAAb,uBAKe,OAApBuI,QAAoB,IAApBA,OAAA,EAAAA,EAAsBuC,SAAU,wBAAQ5D,QAAS,kBAAMoC,EAAIvB,GAAK,IAAQ/H,KAAK,SAA7C,kBACZ,OAApBuI,QAAoB,IAApBA,OAAA,EAAAA,EAAsBwC,YAAa,wBAAQ7D,QAAS,kBAAMoD,EAAYvC,IAAM/H,KAAK,SAA9C,4BACjC+H,EAAI2C,oBAAsB,wBAAQxD,QAAS,kBAAMoC,EAAIvB,GAAK,IAAO/H,KAAK,SAA5C,6BAG/B,gCACI,UAAC+H,EAAIiD,kBAAL,QAAC,EAAgB/D,SACjB,qCACE,6CAEEc,EAAIiD,WAAWxD,KAAI,SAACyD,GAAD,OACjB,gCACGA,EAAUC,WADb,IAGGD,EAAU7H,QAHb,UAAa6H,EAAUC,WAAvB,YAAqCD,EAAU7H,mBAlF5C,8BK1FJ+H,EAnBH,kBACV,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,8BAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,0CAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,wCAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,YClBKC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,U,kFCoHN,UA/G6D,CAC3D,EAAG,CACD,YAAa,6CACb,WAAY,6CACZ,YAAa,6CACb,aAAc,6CACd,UAAW,6CACX,SAAU,6CACV,SAAU,6CACV,WAAY,6CACZ,YAAa,6CACb,iBAAkB,8CAEpB,GAAI,CACF,YAAa,6CACb,WAAY,6CACZ,YAAa,6CACb,aAAc,6CACd,UAAW,6CACX,SAAU,6CACV,SAAU,6CACV,WAAY,6CACZ,YAAa,6CACb,iBAAkB,6CAClB,SAAU,8CAEZ,MAAO,CACL,YAAa,6CACb,WAAY,6CACZ,YAAa,6CACb,aAAc,6CACd,UAAW,6CACX,SAAU,6CACV,SAAU,6CACV,WAAY,6CACZ,YAAa,6CACb,iBAAkB,8CAGpB,IAAK,CACH,YAAa,6CACb,WAAY,6CACZ,YAAa,6CACb,aAAc,6CACd,UAAW,6CACX,SAAU,6CACV,SAAU,6CACV,WAAY,6CACZ,YAAa,6CACb,iBAAkB,8CAEpB,KAAM,CACJ,YAAa,6CACb,WAAY,6CACZ,YAAa,6CACb,aAAc,6CACd,UAAW,6CACX,SAAU,6CACV,SAAU,6CACV,YAAa,6CACb,iBAAkB,8CAEpB,KAAM,CACJ,YAAa,6CACb,WAAY,6CACZ,YAAa,6CACb,aAAc,6CACd,UAAW,6CACX,SAAU,6CACV,SAAU,6CACV,YAAa,6CACb,iBAAkB,8CAEpB,WAAY,CACV,YAAa,6CACb,WAAY,6CACZ,YAAa,6CACb,aAAc,6CACd,WAAW,EACX,SAAU,6CACV,SAAU,6CACV,YAAa,6CACb,iBAAkB,8CAIpB,EAAG,CACD,YAAa,6CACb,WAAY,6CACZ,YAAa,6CACb,aAAc,6CACd,UAAW,6CACX,SAAU,6CACV,SAAU,6CACV,WAAY,6CACZ,YAAa,6CACb,iBAAkB,8CAEpB,MAAO,CACL,YAAa,6CACb,WAAY,6CACZ,YAAa,6CACb,aAAc,6CACd,UAAW,6CACX,SAAU,6CACV,SAAU,6CACV,YAAa,6CACb,iBAAkB,gD,sKCzHtB,gBAIA,UAFoB,SAAC,GAAiB,YAAjB,eAAiB,aAAM,K,sKCF5C,IAEM,EAAe,IAFrB,UAEyB,SAEnB,EAAU,CACd,GAAI,SAAC,EAAO,GAAO,SAAa,GAAG,EAAhB,IACnB,KAAM,SAAC,EAAO,GAAO,SAAa,KAAK,EAAlB,IACrB,IAAK,SAAC,EAAO,GAAO,SAAa,IAAI,EAAjB,IACpB,KAAM,SAAC,EAAO,GAAY,SAAa,KAAK,EAAlB,KAI5B,OAAO,OAAO,GACd,UAAe,G,0OCXF,MAAM,MACN,aAAa,aACb,SAAS,SAET,sCAAsC,CAAC,MAAK,UAC5C,sCAAsC,CAAC,MAAK,UAC5C,yCAAyC,CAAC,EAAA1C,IAAK2C,EAAQC,QAkBpE,IAAM,EAA+B,CACnC,CACE,KAAkB,WAClB,QAAkB,EAClB,UAAkB,MAClB,MAAkB,MAClB,UAAkB,4BAClB,iBAAkB,mCAClB,QAAkB,UAClB,UAAkB,EAClB,UAAkB,MAClB,eAAkB,CAChB,KAAqB,QACrB,OAAqB,MACrB,QAAqB,OACrB,oBAAqB,MACrB,SAAqB,GACrB,KAAqB,+BAEvB,SAAU,wBAEZ,CACE,KAAkB,MAClB,QAAkB,GAClB,UAAkB,MAClB,MAAkB,MAClB,UAAkB,4BAClB,iBAAkB,mCAClB,QAAkB,UAClB,UAAkB,GAClB,YAAkB,KAClB,UAAkB,MAClB,eAAkB,CAChB,KAAqB,mBACrB,OAAqB,MACrB,QAAqB,OACrB,oBAAqB,UACrB,SAAqB,GACrB,KAAqB,+BAEvB,SAAU,uBAEZ,CACE,KAAkB,UAClB,QAAkB,IAClB,UAAkB,UAClB,MAAkB,QAClB,UAAkB,8BAClB,iBAAkB,qCAClB,QAAkB,UAClB,UAAkB,IAClB,YAAkB,EAClB,UAAkB,MAClB,eAAkB,CAChB,KAAqB,QACrB,OAAqB,QACrB,QAAqB,SACrB,oBAAqB,gBACrB,SAAqB,GACrB,KAAqB,mCAEvB,SAAU,2BAEZ,CACE,KAAkB,YAClB,QAAkB,MAClB,UAAkB,YAClB,MAAkB,OAClB,UAAkB,6BAClB,iBAAkB,oCAClB,QAAkB,UAClB,UAAkB,EAClB,UAAkB,MAClB,eAAkB,CAChB,KAAqB,YACrB,OAAqB,OACrB,QAAqB,QACrB,oBAAqB,cACrB,SAAqB,GACrB,KAAqB,gCAEvB,SAAU,wBAEZ,CACE,KAAkB,YAClB,QAAkB,KAClB,UAAkB,YAClB,MAAkB,OAClB,UAAkB,4BAClB,iBAAkB,4BAClB,QAAkB,UAClB,UAAkB,KAClB,UAAkB,MAClB,eAAkB,CAChB,KAAU,YACV,OAAU,OACV,QAAU,QACV,SAAU,GACV,KAAU,gCAEZ,SAAU,iCA2DZ,CACE,KAAkB,WAClB,QAAkB,KAClB,UAAkB,WAClB,MAAkB,OAClB,UAAkB,6BAClB,iBAAkB,6BAClB,QAAkB,UAClB,UAAkB,KAClB,UAAkB,MAClB,eAAkB,CAChB,KAAU,WACV,OAAU,OACV,QAAU,QACV,SAAU,GACV,KAAU,gCAEZ,SAAU,uCAEZ,CACE,KAAkB,UAClB,QAAkB,EAClB,UAAkB,MAClB,MAAkB,MAClB,UAAkB,4BAClB,iBAAkB,mCAClB,QAAkB,UAClB,UAAkB,EAClB,UAAkB,MAClB,eAAkB,CAChB,KAAqB,gBACrB,OAAqB,MACrB,QAAqB,OACrB,oBAAqB,UACrB,SAAqB,GACrB,KAAqB,+BAEvB,SAAU,gCAEZ,CACE,KAAkB,iBAClB,QAAkB,MAClB,UAAkB,OAClB,MAAkB,OAClB,UAAkB,6BAClB,iBAAkB,oCAClB,QAAkB,UAClB,UAAkB,MAClB,UAAkB,MAClB,eAAkB,CAChB,KAAqB,iBACrB,OAAqB,OACrB,QAAqB,QACrB,oBAAqB,mBACrB,SAAqB,GACrB,KAAqB,gCAEvB,SAAU,iCASd,UAAe,G,4LC3Pf,gBAEa,eAAe,SAAC,EAAuB,GAA6B,OAAC,UAAW,MAAK,YAAY,SAAS,QAAQ,gBAAkB,EAAc,eAAiB,EAAS,UAA3E,O,kFCF9G,UAAe,CACb,CACE,QAAS,EACT,QAAS,6CACT,IAAK,OACL,MAAO,gBACP,sBAAqB,GAEvB,CACE,QAAS,GACT,QAAS,6CACT,IAAK,OACL,MAAO,cACP,sBAAqB,GAEvB,CACE,QAAS,MACT,QAAS,6CACT,IAAK,QACL,MAAO,eACP,sBAAqB,GAEvB,CACE,QAAS,IACT,QAAS,6CACT,IAAK,SACL,MAAO,gBACP,sBAAqB,GAEvB,CACE,QAAS,KACT,QAAS,6CACT,IAAK,QACL,MAAO,eACP,sBAAqB,GAEvB,CACE,QAAS,KACT,QAAS,6CACT,IAAK,QACL,MAAO,eACP,sBAAqB,GAIvB,CACE,QAAS,EACT,QAAS,6CACT,IAAK,OACL,MAAO,kBACP,sBAAqB,GAEvB,CACE,QAAS,MACT,QAAS,6CACT,IAAK,QACL,MAAO,eACP,sBAAqB,K,4LCzDzB,gBACI,EAAJ,UACA,YACA,YACA,YAEA,mBAAwB,GACtB,IAAM,EAAO,UAAO,IAAI,GACxB,IAAK,EACH,MAAM,IAAI,MAAM,eAElB,MAAO,CACL,gBAAgB,aAAe,GAC/B,QAAQ,aAAO,GACf,QAAQ,aAAO,GACf,QAAQ,aAAO,M,sKCfnB,gBAIA,mBAAwB,GACtB,IAAM,EAAM,EAHG,SAIf,MAAO,CACL,OAAQ,SAAC,GAAS,oBAAY,CAAE,IAAK,EAAK,OAAQ,OAAQ,KAAxC,KAClB,IAAK,SAAC,GAAO,oBAAY,CAAE,IAAK,UAAG,EAAG,YAAzB,MACb,OAAQ,SAAC,GAAO,oBAAY,CAAE,IAAK,UAAG,EAAG,YAAI,EAAE,WAAW,OAA1C,Y,sKCTpB,gBAIA,mBAAwB,GACtB,IAAM,EAAM,EAHG,SAIf,MAAO,CACL,IAAK,SAAC,EAAiB,EAAS,GAAgB,YAAhB,eAAgB,aAAY,CAAE,IAAK,UAAG,EAAG,YAAI,EAAe,YAAI,GAAW,OAAM,KACjH,QAAS,SAAC,EAAI,GAAgB,YAAhB,eAAgB,aAAY,CAAE,IAAK,UAAG,EAAG,YAAI,EAAE,YAAY,OAAM,KAC/E,SAAU,SAAC,GAAgB,YAAhB,eAAgB,aAAY,CAAE,IAAK,UAAG,EAAG,UAAU,OAAM,KACpE,SAAU,SAAC,GAAgB,YAAhB,eAAgB,aAAY,CAAE,IAAK,UAAG,EAAG,UAAU,OAAM,KACpE,OAAQ,SAAC,EAAI,GAAgB,YAAhB,eAAgB,aAAY,CAAE,IAAK,UAAG,EAAG,YAAI,EAAE,WAAW,OAAM,KAC7E,OAAQ,SAAC,GAAgB,YAAhB,eAAgB,aAAY,CAAE,IAAK,UAAG,GAAO,OAAM,KAC5D,OAAQ,SAAC,GAAS,oBAAY,CAC5B,IAAQ,UAAG,EAAG,YACd,KAAI,EACJ,OAAQ,a,sKChBd,gBAIA,mBAAwB,GACtB,IAAM,EAAM,EAHG,SAIf,MAAO,CACL,OAAQ,WAAM,oBAAY,CAAC,IAAb,KACd,SAAU,SAAC,GAAgB,YAAhB,eAAgB,aAAY,CAAE,IAAK,UAAG,EAAG,UAAU,OAAM,KACpE,SAAU,SAAC,GAAgB,YAAhB,eAAgB,aAAY,CACrC,IAAK,UAAG,EAAG,UACX,OAAM,Q,sKCXZ,gBAIA,mBAAwB,GACtB,IAAM,EAAM,EAHG,kBAIf,MAAO,CACL,IAAK,SAAC,GAAO,oBAAY,CAAE,IAAK,UAAG,EAAG,YAAzB,S,wFCPjB,aAEA,UAAe,CACX,KAAG,KACC,EAAC,QAAO,kCACR,EAAC,WAAU,2CACd,K,uwDCLL,IAAI,EAAJ,UACA,YACA,SACA,SAaA,aACA,YACA,SAEI,EAAJ,UAEA,aAQE,WAAY,GACV,KAAK,OAAS,EAAK,OACnB,KAAK,QAAU,EAAK,QACpB,KAAK,QAAU,EAAK,QACpB,KAAK,UAAY,IAAI,UAAU,KAAK,OAAQ,KAAK,QAAS,KAAK,SAiUnE,OA7TE,uCAAkB,GAChB,KAAK,SAAW,GAGlB,+BAAU,GAAV,WACM,KAAK,UACP,YAAW,WAAM,SAAK,SAAL,KAAuB,IAO5C,kCAAa,EAAmB,EAAS,GACvC,IACM,EADO,IAAI,UAAU,IAAI,IAAI,IACZ,MAAM,IAAI,UAAU,IAC3C,OAAO,KAAK,UAAU,aAAa,EAAmB,EAAS,EAAU,aAIrE,gBAAN,SAAU,G,gHAGR,GAFA,KAAK,UAAU,YAEX,OAAO,EAAM,WAAa,OAAO,KAAK,SACxC,MAAM,IAAI,MAAM,4BAAqB,EAAM,UASpB,OANnB,GAAc,mBAAc,GAElC,KAAK,UAAU,aAET,EAAe,EAAM,OAAO,GAAG,SAAS,KAErB,GAAM,KAAK,UAAU,gBAAgB,EAAM,iB,OAEpE,GAFQ,EAAiB,SAAL,eAEf,kBAAa,EAAc,KAAK,SACnC,MAAM,IAAI,MAAM,sBAKS,OAFvB,EAAS,GAEc,GAAM,KAAK,UAAU,eAAe,KAAK,QAAS,I,OAC9C,OADzB,EAAqB,SACI,GAAM,KAAK,UAAU,eAAe,I,cAA7D,EAAyB,SAEzB,EAAe,IAAI,UAAU,GAC7B,EAAY,IAAI,UAAU,GAC1B,EAAY,IAAI,UAAU,EAAM,kBAAkB,KAAK,IAAI,UAAU,EAAM,WAG7E,EAAa,uBAAuB,GAClC,EAAU,WAAW,IACvB,KAAK,UAAU,aACf,GAAM,KAAK,UAAU,aAAa,KAFhC,MADF,M,OAGA,S,iBAEO,SAAM,KAAK,UAAU,UAAU,I,cAAxC,EAAS,S,qBAGF,IAAiB,UAAU,UAAU,KAAK,SAAS,cAAgB,EAAnE,MACE,GAAM,KAAK,UAAU,uBAAuB,I,cAArD,EAAS,S,qBAGF,IAAiB,WAAW,UAAU,KAAK,SAAS,cAAgB,EAApE,QACP,KAAK,UAAU,WACf,GAAM,KAAK,UAAU,qBACnB,EAAM,iBAAmB,K,eAD3B,SAGA,KAAK,UAAU,aACX,OAAO,GAA0B,OAAO,EAAM,iBAAmB,EAAM,UACzE,GAAM,KAAK,UAAU,aAAa,IADhC,O,QACF,S,mBAEO,SAAM,KAAK,UAAU,UAAU,I,QAAxC,EAAS,S,mBAKX,OAFA,KAAK,UAAU,YAEf,UAAY,GAAK,CAAE,OAAM,aAGrB,iBAAN,SAAW,G,IAAE,EAAe,kBAAE,EAAO,UAAE,EAAY,eAAE,EAAK,QAAE,EAAe,kBAAE,EAAW,cAAE,EAAc,iBAAE,EAAY,e,0HAEpH,GAAI,OAAO,KAAiB,OAAO,KAAK,SACtC,MAAM,IAAI,MAAM,4BAAqB,I,OAGvC,KAAK,UAAU,aAEX,IAAiB,SAAjB,MACF,GAAM,KAAK,UAAU,oBAAoB,I,cAAzC,S,oBACS,IAAiB,UAAjB,MACT,GAAM,KAAK,UAAU,qBAAqB,I,OAA1C,S,wBAGF,KAAK,UAAU,QACf,UAAQ,KAAK,aAAa,eAEtB,EAAiB,GACjB,IAAiB,SAAjB,MACe,GAAM,KAAK,UAAU,sBAAsB,EAAiB,I,cAA7E,EAAiB,S,oBACR,IAAiB,UAAjB,MACQ,GAAM,KAAK,UAAU,uBAAuB,EAAiB,EAAS,I,OAAvF,EAAiB,S,iBAGI,SAAM,KAAK,UAAU,gBAAgB,I,OAAtD,EAAiB,SAGjB,EAAmB,IAAI,UAAU,GAEjC,EAAO,IAAI,UAAU,IAAI,IAAI,IAC7B,EAAiB,EAAK,MAAM,IAAI,UAAU,IAC5C,EAAmB,EAEnB,EAAW,eACX,EAAgB,EAEhB,EAAwB,IAAI,UAAU,KAAK,MAAM,KAAK,MAAQ,IAAO,IAAiB,W,mBAGzD,O,yBAAA,GAAM,KAAK,aAAa,EAAiB,EAAS,I,eAAhF,EAA8B,SAA5B,EAAQ,WAAE,EAAa,gB,iCAE1B,QAAQ,MAAM,G,eAiBI,OAdpB,EAAmB,EAAiB,MAAM,GAEpC,GAAQ,iBAAY,CACxB,QAAS,KAAK,QACd,aAAc,KAAK,QACnB,SAAU,OAAO,GACjB,oBAAqB,EACrB,sBAAqB,EACrB,iBAAgB,EAChB,iBAAgB,EAChB,eAAc,EACd,eAAc,IAGI,IAAM,aACxB,KAAK,OAAO,SAAS,gBACrB,EACA,KAAK,QACL,I,QAGoB,OAPhB,EAAcC,EAAG,OAOD,GAAM,KAAK,UAAU,aAAa,I,QAExD,OAFQ,EAAc,SAAL,UAEjB,UAAY,GAAW,CAAE,UAAS,aAG9B,kBAAN,SAAY,G,IACV,EAAI,OAAE,EAAK,QAAE,EAAgB,mBAAE,EAAc,iBAAE,EAAe,kB,oJAM9D,GAJA,KAAK,UAAU,YACP,EAA2C,EAA5B,gBAAE,EAA0B,EAAnB,QAAE,EAAiB,EAAL,aAG1C,OAAO,EAAK,WAAa,OAAO,EAAK,SACvC,MAAM,IAAI,MAAM,4BAAqB,EAAK,UAKxB,OAFpB,KAAK,UAAU,oBAEK,GAAM,KAAK,OAAO,WAAW,KAAK,U,OAC3B,OADrB,EAAc,SACO,GAAM,KAAK,UAAU,wB,cAA1C,EAAqB,SACrB,EAAa,KAAK,OAAO,sBAAsB,GAG/C,EAAgB,IAAI,UAAU,GAAY,MAAM,GAChD,EAAgB,IAAI,UAAU,GAC9B,EAAoB,IAAI,UAAU,GACpC,EAAa,IAAI,UAAU,GAG3B,GACF,EAAa,GACE,cAAc,GACV,GAAM,KAAK,OAAO,SAAS,IAAI,eAD9C,MAFF,M,OAIY,OADN,EAAW,SACL,GAAM,KAAK,UAAU,UAAU,YAAY,CAAE,SAAQ,K,OAA3D,EAAM,SACZ,EAAa,EAAkB,MAAM,EAAM,EAAW,G,oCAGxD,EAAa,E,wBAGX,EAAa,IAAI,UAAU,IAC7B,KAAK,UAAU,WACC,GAAM,KAAK,UAAU,qBAAqB,KAFxD,M,OAEc,S,iBAGa,SAAM,KAAK,UAAU,wB,eAA9C,EAAyB,SAE3B,OAAO,GAA0B,OAAO,IAC1C,KAAK,UAAU,aACO,GAAM,KAAK,UAAU,uBAFzC,O,QAEoB,S,0BAGxB,KAAK,UAAU,QACf,UAAQ,KAAK,aAAa,eAEtB,EAAiB,GACjB,IAAiB,SAAV,CAAP,MACe,GAAM,KAAK,UAAU,sBAAsB,EAAiB,I,eAA7E,EAAiB,S,sBACR,IAAiB,UAAjB,OACQ,GAAM,KAAK,UAAU,uBAAuB,EAAiB,EAAS,I,QAAvF,EAAiB,S,mBAGI,SAAM,KAAK,UAAU,wB,QAAtC,EAAiB,SAGjB,EAAmB,IAAI,UAAU,GAEjC,EAAO,IAAI,UAAU,IAAI,IAAI,IAC7B,EAAiB,EAAK,MAAM,IAAI,UAAU,IAC5C,EAAmB,EAEnB,EAAW,eACX,EAAgB,EAChB,EAAwB,IAAI,UAAU,KAAK,MAAM,KAAK,MAAQ,IAAO,IAAiB,W,mBAGzD,O,yBAAA,GAAM,KAAK,aAAa,EAAiB,EAAS,I,eAAhF,EAA8B,SAA5B,EAAQ,WAAE,EAAa,gB,iCAE1B,QAAQ,MAAM,G,eAqBI,OAlBpB,EAAmB,EAAiB,MAAM,IAEpC,GAAQ,iBAAY,CACxB,QAAS,KAAK,QACd,aAAc,KAAK,QACnB,SAAU,OAAO,GACjB,oBAAqB,EACrB,sBAAqB,EACrB,iBAAgB,EAChB,iBAAgB,EAChB,eAAc,EACd,eAAc,KAGV,QAAU,OAAO,EAAM,SAIT,IAAM,aACxB,KAAK,OAAO,SAAS,gBACrB,EACA,KAAK,QACL,I,QAGoB,OAPhB,EAAc,SAOE,GAAM,KAAK,UAAU,aAAa,I,QAIxD,OAJQ,EAAc,SAAL,UAEjB,KAAK,UAAU,YAEf,UAAY,GAAW,CAAE,UAAS,aAG9B,wBAAN,SAAkB,G,6GACW,SAAM,KAAK,UAAU,qBAAqB,EAAM,e,OAE3E,GAFM,EAAqB,SAEvB,IAAI,UAAU,EAAM,kBAAkB,cAAc,GACtD,MAAM,IAAI,MAAM,sBAUlB,OAPA,KAAK,UAAU,YACT,GAAc,mBAAc,GAE1B,EAAW,EAAL,OAEd,KAAK,UAAU,aAEf,GAAM,QAAQ,IACZ,EAAO,KACL,SAAO,GAAK,qC,mEACF,EAAa,EAAL,SACR,EAAkB,EAAd,KAAE,EAAY,EAAL,QACjB,IAAS,SAAT,MACF,GAAM,KAAK,UAAU,oBAAoB,I,cAAzC,S,oBACS,IAAS,UAAT,MACT,GAAM,KAAK,UAAU,qBAAqB,I,OAA1C,S,8CAQO,OAhBf,SAcA,KAAK,UAAU,kBAEA,GAAM,KAAK,UAAU,UAAU,I,OAI9C,OAJM,EAAS,SAEf,KAAK,UAAU,YAEf,UAAY,GAAK,CAAE,OAAM,aAGrB,wBAAN,SAAkB,G,gGAGhB,OAFM,GAAc,mBAAc,GAClC,KAAK,UAAU,cACf,GAAM,KAAK,UAAU,YAAY,I,cAAjC,S,YAII,oBAAN,SAAc,EAAyB,EAA0B,G,6GAK3D,GAAgB,UAAhB,MACwB,GAAM,KAAK,UAAU,iBAAiB,EAAiB,I,cAAjF,EAA0B,S,oBAEnB,GAAgB,SAAhB,MACM,GAAM,KAAK,UAAU,SAAS,EAAiB,I,OAA5D,EAAa,S,iBAMf,OAHM,EAAmB,EAA0B,EAC7C,EAAc,EAAW,gBAAkB,KAAK,QAAQ,cAE9D,GAAO,GAAoB,WAE/B,EA7UA,G,+iDCvBA,gBACI,EAAJ,UACA,YACA,SACA,YACA,YACA,YACA,YACA,YACA,YACI,EAAJ,UACA,YACA,YAGA,aAKE,WAAY,EAAQ,EAAS,GAC3B,KAAK,OAAS,EACd,KAAK,QAAU,EACf,KAAK,UAAY,UAAU,GAgS/B,OAzRE,8BAAS,EAAiB,GAExB,OADoB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAW,GAClD,QAAQ,QAAQ,GAAS,QAOxC,gCAAN,SAA0B,G,oGAEC,UADnB,EAAc,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAW,IAC1B,QACxC,iBAAiB,KAAK,QAAS,KAAK,UAAU,aAC9C,KAAK,CAAE,KAAM,KAAK,W,cAFI,SAIrB,MACqB,GAAM,EAAY,QACtC,kBAAkB,KAAK,UAAU,aAAa,I,OACpB,OAFvB,EAAiB,SAEM,IAAM,aAAK,EAAgB,CAAE,KAAM,KAAK,W,OAErE,OAFQ,EAAqB,SAAN,gBAEvB,IAAM,aAAwB,KAAK,OAAO,SAAU,I,OAApD,S,mCAQE,iCAAN,SAA2B,G,oGAEA,UADnB,EAAe,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAY,IAC3B,QACzC,iBAAiB,KAAK,QAAS,KAAK,UAAU,cAC9C,KAAK,CAAE,KAAM,KAAK,W,cAFI,SAIrB,MACsB,GAAM,EAAa,QACxC,kBAAkB,KAAK,UAAU,cAAc,I,OAErB,OAHvB,EAAkB,SAGK,IAAM,aAAK,EAAiB,CAAE,KAAM,KAAK,W,OAEtE,OAFQ,EAAqB,SAAN,gBAEvB,IAAM,aAAwB,KAAK,OAAO,SAAU,I,OAApD,S,mCAIJ,0CAAqB,GAEnB,YAFmB,UAAU,KAAK,SACN,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAU,KAAK,UAAU,aAChE,QAAQ,UAAU,GAAS,KAAK,CAAE,KAAM,KAAK,WAG1E,oCAAe,EAAwB,GAErC,YAFa,UAAU,KAAK,SACA,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAU,GACjD,QAAQ,UAAU,GAAS,KAAK,CAAE,KAAM,KAAK,WAG1E,sCAAiB,EAAiB,GAEhC,OADwB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAY,GACnD,QAAQ,UAAU,KAAK,QAAS,GAAS,KAAK,CAAE,KAAM,KAAK,WAGpF,+BAEE,OAD4B,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAU,KAAK,UAAU,aAChE,QAAQ,WAGrC,0CAAqB,GACnB,IAAM,EAAS,KAAK,UACpB,OAAO,aAAK,EAAQ,CAClB,KAAM,KAAK,QACX,MAAK,KAIT,oCAAe,GAGb,OAF4B,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAU,GAEjD,QAAQ,UACjC,KAAK,QACL,KAAK,UAAU,YACf,KAAK,CAAE,KAAM,KAAK,WAGtB,4CAEE,OAD4B,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAU,KAAK,UAAU,aAChE,QAAQ,UACjC,KAAK,QACL,KAAK,UAAU,YACf,KAAK,CAAE,KAAM,KAAK,WAGtB,0CACE,IACM,EADsB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAU,KAAK,UAAU,aACxD,QAChC,QAAQ,KAAK,UAAU,WAAY,IAAI,UAAU,GAAG,IAAI,KAAK,MAAM,GAAG,YACzE,OAAO,aAAK,EAAQ,CAAE,KAAM,KAAK,WAEnC,kCAAa,GAEX,IACM,EADsB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAU,GACzC,QAChC,QAAQ,KAAK,UAAU,WAAY,IAAI,UAAU,GAAG,IAAI,KAAK,MAAM,IACtE,OAAO,aAAK,EAAQ,CAAE,KAAM,KAAK,WAGnC,2CAAsB,EAAiB,GAErC,OADyB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAa,KAAK,UAAU,UACnE,QAAQ,sBAC9B,EACA,GACA,KAAK,CAAE,KAAM,KAAK,WAGtB,4CAAuB,EAAiB,EAAS,GAE/C,OADyB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAa,KAAK,UAAU,UACnE,QAAQ,uBAC9B,EACA,CAAC,GACD,CAAC,GACD,OACA,KAAK,CAAE,KAAM,KAAK,WAGtB,4CAEE,OADyB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAa,KAAK,UAAU,UACnE,QAAQ,qBAAqB,KAAK,UAAU,aACjE,KAAK,CAAE,KAAM,KAAK,WAEvB,qCAAgB,GAEd,OADyB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAa,KAAK,UAAU,UACnE,QAAQ,qBAAqB,GAClD,KAAK,CAAE,KAAM,KAAK,WAGvB,qCAAiB,GAEf,OADyB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAa,KAAK,UAAU,UACnE,QAAQ,qBAC9B,GACA,KAAK,CAAE,KAAM,KAAK,WAEtB,0CAAqB,EAAuB,GAE1C,OADyB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAa,KAAK,UAAU,UACnE,QAAQ,qBAC9B,EACA,GACA,KAAK,CAAE,KAAM,KAAK,WAGtB,0CAAqB,GAEnB,OADyB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,EAAAC,QAAa,KAAK,UAAU,UACnE,QAAQ,qBAC9B,GACA,KAAK,CAAE,KAAM,KAAK,WAGtB,2CAAsB,GAEpB,OADyB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAa,KAAK,UAAU,UACnE,QAAQ,sBAC9B,GACA,KAAK,CAAE,KAAM,KAAK,WAGtB,kCAAa,GAEX,OADyB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAa,KAAK,UAAU,UACnE,QAAQ,aAAa,GAAa,QAGtD,sBAAN,SAAgB,EAAa,G,YAAA,a,yFAEV,SADQ,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAa,KAAK,UAAU,UACnD,QAAQ,UAC9C,EAAa,EAAY,iBAAkB,EAAY,Y,OAE5B,OAHvB,EAAW,SAGY,IAAM,aAAK,EAAU,CAChD,KAAM,KAAK,QACX,MAAK,K,OAEP,SAJ6B,SAAN,yBAOnB,mCAAN,SAA6B,G,wGAOV,OANX,EAAwB,eACxB,EAAe,OAEf,EAAmB,IAAI,UAAU,EAAY,kBAC7C,EAAW,IAAI,UAAU,EAAY,UAE1B,GADS,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAc,KAAK,UAAU,WACpD,QAAQ,uBAC/C,CAAC,GACD,EAAY,iBACZ,CAAC,EAAY,WACb,CAAC,OAAO,IACR,CAAC,K,OAE0B,OAPvB,EAAW,SAOY,IAAM,aAAK,EAAU,CAChD,KAAM,KAAK,QACX,MAAO,EAAiB,KAAK,GAAU,KAAK,M,OAE9C,SAJ6B,SAAN,yBAOzB,iCAAY,GACV,IACM,EADmB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAa,KAAK,UAAU,UAC3D,QAAQ,YACtC,GAEF,OAAO,aAAK,EAAQ,CAClB,KAAM,KAAK,WAQf,iCAAY,EAAU,GACpB,IACM,EADc,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAW,GAC1C,QAAQ,KAAK,KAAK,QAAS,GACtD,OAAO,aAAK,EAAQ,CAClB,KAAM,KAAK,WAIf,mCAEE,OADoB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAW,KAAK,UAAU,YACjE,QAAQ,SAAS,KAAK,SAAS,QAGpD,kCAAa,GAEX,OADoB,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAW,KAAK,UAAU,YACjE,QAAQ,UAAU,GAAU,aAG3C,8BAAN,SAAwB,EAAiB,EAAS,G,2EAGhD,OAFM,EAAc,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAW,GAC/D,EAAS,EAAY,QAAQ,iBAAiB,KAAK,QAAS,EAAS,GAC3E,IAAO,aAAK,EAAQ,CAClB,KAAM,KAAK,kBAIT,+BAAN,SAAyB,EAAiB,EAAS,G,2EAGjD,OAFM,EAAc,IAAI,KAAK,OAAO,SAAS,IAAI,SAAS,UAAY,GAChE,EAAS,EAAY,QAAQ,iBAAiB,KAAK,QAAS,EAAS,EAAS,EAAG,IACvF,IAAO,aAAK,EAAQ,CAClB,KAAM,KAAK,kBAuBT,2BAAN,W,mEAIE,SAH4B,IAAI,KAAK,OAAO,SAAS,IAAI,SACvD,UAAgB,KAAK,UAAU,aAEN,QAAQ,iBAAiB,KAAK,CACvD,KAAM,KAAK,kBAIf,kCAAa,EAAmB,EAAS,GAIvC,OAH0B,IAAI,KAAK,OAAO,SAAS,IAAI,SACrD,UAAqB,KAAK,UAAU,kBAEb,QAAQ,aAAa,EAAmB,EAAS,GACvE,KAAK,CAAE,KAAM,KAAK,WAEzB,EAxSA,G,+FCCA,UAVgC,SAAC,EAAM,GAAY,WAAI,SAAQ,SAAC,EAAS,IACvC,SAA1B,IAAgC,SAAK,IAAI,sBAAsB,GAClE,MAAK,SAAC,GAAY,OAAC,GAAW,EAAQ,YACnC,EAAQ,GACR,YAAW,WACX,MAXS,QAaf,Q,kFCyWF,UAtXkB,CAChB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,KAAM,cAAe,KAAM,WAC/C,KAAiB,oBACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,SACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,kBACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,SACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,OACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,WACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,KAAM,UAAW,KAAM,YAC3C,KAAiB,cACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,YACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,KAAM,KAAM,WACpB,CAAE,KAAM,UAAW,KAAM,YAE3B,KAAiB,UACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,cACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,YACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,OAAQ,KAAM,WACtB,CAAE,KAAM,KAAM,KAAM,WACpB,CAAE,KAAM,UAAW,KAAM,YAE3B,KAAiB,eACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,QAAS,KAAM,WACvB,CAAE,KAAM,QAAS,KAAM,YAEzB,KAAiB,sBACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,YACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,OAAQ,KAAM,WACtB,CAAE,KAAM,KAAM,KAAM,WACpB,CAAE,KAAM,UAAW,KAAM,YAE3B,KAAiB,mBACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,gBAAiB,KAAM,WAC/B,CAAE,KAAM,MAAO,KAAM,YAEvB,KAAiB,cACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,KAAM,UAAW,KAAM,YAC3C,KAAiB,SACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,SACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,KAAM,QAAS,KAAM,YACzC,KAAiB,eACjB,QAAiB,CAAC,CAAE,KAAM,GAAI9L,KAAM,YACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,gBAAiB,KAAM,WAC/B,CAAE,KAAM,UAAW,KAAM,cAE3B,KAAiB,cACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,KAAM,UAAW,KAAM,YAC3C,KAAiB,UACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,YACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,KAAM,QAAS,KAAM,YACzC,KAAiB,YACjB,QAAiB,CAAC,CAAE,KAAM,GAAIA,KAAM,YACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,gBACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,KAAM,cAAe,KAAM,WAC/C,KAAiB,aACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,SACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,WACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,UACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,WACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,KAAM,KAAM,WACpB,CAAE,KAAM,WAAY,KAAM,SAE5B,KAAiB,oBACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,OAAQ,KAAM,WACtB,CAAE,KAAM,KAAM,KAAM,WACpB,CAAE,KAAM,UAAW,KAAM,WACzB,CAAE,KAAM,QAAS,KAAM,UAEzB,KAAiB,mBACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,KAAM,WAAY,KAAM,YAC5C,KAAiB,WACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,WACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,yBACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,YACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,gBACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,YACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,QAAS,KAAM,WACvB,CAAE,KAAM,WAAY,KAAM,YAE5B,KAAiB,mBACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,SACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,WACd,KAAc,WAEhB,CACE,aAAc,SACd,KAAc,WACd,KAAc,WAGlB,KAAS,OACT,QAAS,CACP,CACE,aAAc,UACd,KAAc,GACd,KAAc,YAGlB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,WAAY,KAAM,WAC1B,CAAE,KAAM,SAAU,KAAM,YAE1B,KAAiB,SACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CAAE,KAAM,iBAAkB,KAAM,WAChC,CAAE,KAAM,0BAA2B,KAAM,YAE3C,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,eAEnB,CAAE,SAAS,EAAM,gBAAiB,UAAW,KAAM,YACnD,CACE,WAAW,EACX,OAAW,CACT,CAAE,SAAS,EAAM,KAAM,OAAQ,KAAM,WACrC,CAAE,SAAS,EAAM,KAAM,KAAM,KAAM,WACnC,CAAE,SAAS,EAAM,KAAM,UAAW,KAAM,YAE1C,KAAM,WACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CAAE,SAAS,EAAM,KAAM,QAAS,KAAM,WACtC,CAAE,SAAS,EAAM,KAAM,WAAY,KAAM,WACzC,CAAE,SAAS,EAAM,KAAM,UAAW,KAAM,YAE1C,KAAM,WACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CAAE,SAAS,EAAM,KAAM,QAAS,KAAM,WACtC,CAAE,SAAS,EAAM,KAAM,WAAY,KAAM,WACzC,CAAE,SAAS,EAAO,KAAM,WAAY,KAAM,SAE5C,KAAM,iBACN,KAAM,SAER,CACE,OAAQ,CACN,CACE,aAAc,SACd,KAAc,WACd,KAAc,WAGlB,KAAS,YACT,QAAS,CACP,CACE,aAAc,UACd,KAAc,GACd,KAAc,YAGlB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,OACd,KAAc,YAGlB,KAAS,WACT,QAAS,CACP,CACE,aAAc,UACd,KAAc,QACd,KAAc,YAGlB,gBAAiB,OACjB,KAAiB,WACjB,UAAiB,K,kFCvDrB,UA3TmB,CACjB,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,UACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,WACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,OACd,KAAc,WACd,KAAc,SAGlB,KAAM,iBACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,WACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,OACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,KACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,YACd,KAAc,MACd,KAAc,aAEhB,CACE,SAAc,EACd,aAAc,YACd,KAAc,SACd,KAAc,cAGlB,KAAM,gBACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,WACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,OACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,KACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,KACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,QACd,KAAc,YAGlB,KAAM,iBACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,SACd,KAAc,QACd,KAAc,UAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,KACd,KAAc,YAGlB,KAAM,MACN,KAAM,SAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,UACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,KACd,KAAc,YAGlB,KAAS,YACT,QAAS,CACP,CACE,aAAc,UACd,KAAc,GACd,KAAc,YAGlB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,YACd,KAAc,WACd,KAAc,aAEhB,CACE,aAAc,YACd,KAAc,MACd,KAAc,cAGlB,KAAS,iBACT,QAAS,CACP,CACE,aAAc,YACd,KAAc,GACd,KAAc,cAGlB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,UACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,WACd,KAAc,YAGlB,KAAS,mBACT,QAAS,CACP,CACE,aAAc,OACd,KAAc,GACd,KAAc,SAGlB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,OACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,KACd,KAAc,WAEhB,CACE,aAAc,YACd,KAAc,MACd,KAAc,aAEhB,CACE,aAAc,YACd,KAAc,UACd,KAAc,aAEhB,CACE,aAAc,QACd,KAAc,OACd,KAAc,UAGlB,KAAiB,wBACjB,QAAiB,GACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,OACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,KACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,KACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,SACd,KAAc,WAEhB,CACE,aAAc,QACd,KAAc,OACd,KAAc,UAGlB,KAAiB,mBACjB,QAAiB,GACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,WACd,KAAc,WAEhB,CACE,aAAc,OACd,KAAc,WACd,KAAc,SAGlB,KAAiB,oBACjB,QAAiB,GACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,SACd,KAAc,cACd,KAAc,WAGlB,KAAS,oBACT,QAAS,CACP,CACE,aAAc,OACd,KAAc,GACd,KAAc,SAGlB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,KACd,KAAc,YAGlB,KAAS,MACT,QAAS,CACP,CACE,aAAc,SACd,KAAc,GACd,KAAc,WAGlB,gBAAiB,OACjB,KAAiB,c,kFC7JrB,UA1JiB,CACf,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,OACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,WACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,MAAO,KAAM,WACrB,CAAE,KAAM,MAAO,KAAM,YAEvB,KAAiB,UACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,SACpC,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,cACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,YACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,MAAO,KAAM,WACrB,CAAE,KAAM,MAAO,KAAM,WACrB,CAAE,KAAM,MAAO,KAAM,YAEvB,KAAiB,eACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,SACpC,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,KAAM,MAAO,KAAM,YACvC,KAAiB,WACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,WACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,UACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,YACpC,KAAiB,YACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,YACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,SACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,WACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,MAAO,KAAM,WACrB,CAAE,KAAM,MAAO,KAAM,YAEvB,KAAiB,WACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,SACpC,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,UACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,GAAI,KAAM,WAClB,CAAE,KAAM,GAAI,KAAM,YAEpB,KAAiB,YACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,YACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CAAE,SAAS,EAAM,gBAAiB,UAAW,KAAM,YACnD,CACE,WAAW,EACX,OAAW,CACT,CAAE,SAAS,EAAM,KAAM,MAAO,KAAM,WACpC,CAAE,SAAS,EAAM,KAAM,MAAO,KAAM,WACpC,CAAE,SAAS,EAAO,KAAM,MAAO,KAAM,YAEvC,KAAM,WACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CAAE,SAAS,EAAM,KAAM,MAAO,KAAM,WACpC,CAAE,SAAS,EAAM,KAAM,MAAO,KAAM,WACpC,CAAE,SAAS,EAAO,KAAM,MAAO,KAAM,YAEvC,KAAM,WACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CAAE,SAAS,EAAM,KAAM,MAAO,KAAM,WACpC,CAAE,SAAS,EAAO,KAAM,MAAO,KAAM,YAEvC,KAAM,UACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CAAE,SAAS,EAAM,KAAM,MAAO,KAAM,WACpC,CAAE,SAAS,EAAO,KAAM,MAAO,KAAM,YAEvC,KAAM,aACN,KAAM,W,kFCuOV,UA7XoB,CAClB,CACE,UAAU,EACV,OAAU,CAAC,CAAE,KAAM,YAAa,KAAM,UACtC,KAAU,wBACV,QAAU,CACR,CAAE4B,KAAM,eAAgB,KAAM,UAC9B,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,UAAW,KAAM,YAE3B,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,YAAa,KAAM,UAE7B,KAAS,mCACT,QAAS,CACP,CAAEA,KAAM,UAAW,KAAM,WACzB,CAAE,KAAM,YAAa,KAAM,YAE7B,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,mBACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,WACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,YAAa,KAAM,UAE7B,KAAiB,6BACjB,QAAiB,CAAC,CAAE,KAAM,0BAA2B,KAAM,YAC3D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,YAAa,KAAM,YAE7B,KAAiB,+BACjB,QAAiB,CAAC,CAAE,KAAM,aAAc,KAAM,cAC9C,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,KAAM,eAAgB,KAAM,YAChD,KAAiB,uBACjB,QAAiB,CAAC,CAAE,KAAM,YAAa,KAAM,UAC7C,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CAAC,CAAE,KAAM,kBAAmB,KAAM,UAC5C,KAAU,8BACV,QAAU,CACR,CAAEA,KAAM,eAAgB,KAAM,UAC9B,CACE,WAAY,CACV,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,sBAAuB,KAAM,WACrC,CAAE,KAAM,gBAAiB,KAAM,WAC/B,CAAE,KAAM,mBAAoB,KAAM,WAClC,CAAE,KAAM,mBAAoB,KAAM,WAClC,CAAE,KAAM,WAAY,KAAM,WAC1B,CAAE,KAAM,WAAY,KAAM,WAC1B,CAAE,KAAM,wBAAyB,KAAM,WACvC,CAAE,KAAM,OAAQ,KAAM,WACtB,CAAE,KAAM,iBAAkB,KAAM,SAChC,CAAE,KAAM,iBAAkB5B,KAAM,UAElC,KAAM,SACN,KAAM,WAER,CAAE,KAAM,wBAAyB,KAAM,aACvC,CAAE,KAAM,aAAc,KAAM,YAE9B,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,YAAa,KAAM,UAE7B,KAAiB,aACjB,QAAiB,CAAC,CAAE,KAAM,UAAW,KAAM,YAC3C,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,sBAAuB,KAAM,WACrC,CAAE,KAAM,gBAAiB,KAAM,WAC/B,CAAE,KAAM,mBAAoB,KAAM,WAClC,CAAE,KAAM,mBAAoB,KAAM,WAClC,CAAE,KAAM,WAAY,KAAM,WAC1B,CAAE,KAAM,WAAY,KAAM,WAC1B,CAAE,KAAM,wBAAyB,KAAM,WACvC,CAAE,KAAM,OAAQ,KAAM,WACtB,CAAE,KAAM,iBAAkB,KAAM,SAChC,CAAE,KAAM,iBAAkBA,KAAM,UAElC,KAAM,SACN,KAAM,WAER,CAAE,KAAM,aAAc,KAAM,YAE9B,KAAS,yBACT,QAAS,CACP,CACE,WAAY,CACV,CAAE,KAAM,cAAe,KAAM,SAC7B,CAAE,KAAM,YAAa,KAAM,WAC3B,CAAE,KAAM,8BAA+B,KAAM,YAE/C,KAAM,aACN,KAAM,WAER,CAAE,KAAM,4BAA6B,KAAM,aAC3C,CAAE,KAAM,mBAAoB,KAAM,WAEpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,iBACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,WACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CAAC,CAAE,KAAM,YAAa,KAAM,UACtC,KAAU,uBACV,QAAU,CACR,CAAE4B,KAAM,eAAgB,KAAM,UAC9B,CAAE,KAAM,eAAgB,KAAM,YAEhC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,sBAAuB,KAAM,WACrC,CAAE,KAAM,gBAAiB,KAAM,WAC/B,CAAE,KAAM,mBAAoB,KAAM,WAClC,CAAE,KAAM,mBAAoB,KAAM,WAClC,CAAE,KAAM,WAAY,KAAM,WAC1B,CAAE,KAAM,WAAY,KAAM,WAC1B,CAAE,KAAM,wBAAyB,KAAM,WACvC,CAAE,KAAM,OAAQ,KAAM,WACtB,CAAE,KAAM,iBAAkB,KAAM,SAChC,CAAE,KAAM,iBAAkB5B,KAAM,UAElC,KAAM,QACN,KAAM,SAER,CAAE,KAAM,YAAa,KAAM,UAE7B,KAAS,wBACT,QAAS,CACP,CACE,WAAY,CACV,CAAE,KAAM,cAAe,KAAM,SAC7B,CAAE,KAAM,YAAa,KAAM,WAC3B,CAAE,KAAM,8BAA+B,KAAM,YAE/C,KAAM,YACN,KAAM,SAER,CAAE,KAAM,2BAA4B,KAAM,WAC1C,CAAE,KAAM,mBAAoB,KAAM,SAEpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CAAC,CAAE,KAAM,YAAa,KAAM,UACtC,KAAU,yBACV,QAAU,CACR,CAAE4B,KAAM,eAAgB,KAAM,UAC9B,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,WAAY,KAAM,aAC1B,CAAE,KAAM,cAAe,KAAM,aAC7B,CAAE,KAAM,eAAgB,KAAM,UAEhC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,KAAM,YAAa,KAAM,cAC7C,KAAiB,iBACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,cACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,kBACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,WACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,UAAW,KAAM,YAE3B,KAAiB,wBACjB,QAAiB,CAAC,CAAE,KAAM,YAAa,KAAM,UAC7C,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,uBACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,WACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,WAAY,KAAM,aAC1B,CAAE,KAAM,cAAe,KAAM,aAC7B,CAAE,KAAM,eAAgB,KAAM,UAEhC,KAAiB,yBACjB,QAAiB,CAAC,CAAE,KAAM,YAAa,KAAM,UAC7C,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,UAAW,KAAM,YAE3B,KAAiB,sBACjB,QAAiB,CAAC,CAAE,KAAM,eAAgB,KAAM,YAChD,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CAAC,CAAE,KAAM,YAAa,KAAM,UACtC,KAAU,uBACV,QAAU,CACR,CAAEA,KAAM,eAAgB,KAAM,UAC9B,CAAE,KAAM,UAAW,KAAM,aACzB,CAAE,KAAM,kBAAmB,KAAM,YAEnC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,YAAa,KAAM,YAE7B,KAAiB,mBACjB,QAAiB,CAAC,CAAE,KAAM,WAAY,KAAM,cAC5C,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,YAAa,KAAM,UAE7B,KAAiB,yBACjB,QAAiB,CAAC,CAAE,KAAM,YAAa,KAAM,YAC7C,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,UAAW,KAAM,aACzB,CAAE,KAAM,kBAAmB,KAAM,YAEnC,KAAiB,uBACjB,QAAiB,CAAC,CAAE,KAAM,YAAa,KAAM,UAC7C,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,uBACjB,QAAiB,CAAC,CAAE,KAAM,GAAI,KAAM,WACpC,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,KAAM,eAAgB,KAAM,WAC9B,CAAE,KAAM,YAAa,KAAM,YAE7B,KAAS,0CACT,QAAS,CACP,CAAEA,KAAM,WAAY,KAAM,aAC1B,CAAE,KAAM,aAAc,KAAM,cAE9B,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CAAE,KAAM,YAAa,KAAM,WAC3B,CAAE,KAAM,gBAAiB,KAAM,UAEjC,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,iB,kFC8uDrB,UAvmEoB,CAClB,CACE,OAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,UAAW,KAAM,YACpE,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,eAEnB,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,SACd,KAAc,KACd,KAAc,UAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,aACd,KAAc,YAGlB,KAAM,uBACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,QACd,KAAc,iBACd,KAAc,SAEhB,CACE,SAAc,EACd,aAAc,QACd,KAAc,iBACd,KAAc,SAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,gBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,YACd,KAAc,YAGlB,KAAM,SACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,qBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,aACd,KAAc,YAGlB,KAAM,aACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,QACd,KAAc,iBACd,KAAc,SAEhB,CACE,SAAc,EACd,aAAc,QACd,KAAc,iBACd,KAAc,SAEhB,CACE,SAAc,EACd,aAAc,QACd,KAAc,oBACd,KAAc,SAEhB,CACE,SAAc,EACd,aAAc,QACd,KAAc,oBACd,KAAc,SAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,YACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,gBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,kBACd,KAAc,YAGlB,KAAM,OACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,gBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,WACd,KAAc,YAGlB,KAAM,uBACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,0BACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,8BACd,KAAc,YAGlB,KAAM,8BACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,2BACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,+BACd,KAAc,YAGlB,KAAM,wBACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,gBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,OACd,KAAc,aACd,KAAc,SAGlB,KAAM,6BACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,kBACd,KAAc,YAGlB,KAAM,uBACN,KAAM,SAER,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,sBACjB,QAAiB,CAAC,CAAE,aAAc,SAAU,KAAM,GAAI,KAAM,WAC5D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,8BACjB,QAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAC7D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,WAC3C,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAE7C,KAAiB,oBACjB,QAAiB,CAAC,CAAE,aAAc,OAAQ,KAAM,GAAI,KAAM,SAC1D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,SACd,KAAc,YAGlB,KAAiB,oBACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CAAE,aAAc,QAAS,KAAM,OAAQ,KAAM,UAE/C,aAAc,kDACd,KAAc,eACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,YAEvD,KAAiB,2BACjB,QAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,YACvE,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,SACd,KAAc,WAEhB,CACE,aAAc,YACd,KAAc,wBACd,KAAc,aAEhB,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,YAEvD,KAAS,wBACT,QAAS,CACP,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,YAE5D,aAAc,sCACd,KAAc,cACd,KAAc,YAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,SACd,KAAc,WAEhB,CACE,aAAc,YACd,KAAc,wBACd,KAAc,aAEhB,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,YAEvD,KAAS,kBACT,QAAS,CACP,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,YAE5D,aAAc,sCACd,KAAc,cACd,KAAc,YAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,SACd,KAAc,WAEhB,CACE,aAAc,YACd,KAAc,wBACd,KAAc,aAEhB,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,YAEvD,KAAS,yBACT,QAAS,CACP,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,YAE5D,aAAc,sCACd,KAAc,cACd,KAAc,YAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,aACd,KAAc,WAEhB,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,cACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,iBAAkB,KAAM,WACzD,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,YAE5D,KAAS,mBACT,QAAS,CACP,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,kBACd,KAAc,YAGlB,aAAc,sCACd,KAAc,OACd,KAAc,WAEhB,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,kBACd,KAAc,YAGlB,aAAc,sCACd,KAAc,QACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,0BACd,KAAc,YAGlB,aAAc,gDACd,KAAc,0BACd,KAAc,UAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,aACd,KAAc,WAEhB,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,cACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,iBAAkB,KAAM,WACzD,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,YAE5D,KAAS,kCACT,QAAS,CACP,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,kBACd,KAAc,YAGlB,aAAc,sCACd,KAAc,OACd,KAAc,WAEhB,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,kBACd,KAAc,YAGlB,aAAc,sCACd,KAAc,QACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,0BACd,KAAc,YAGlB,aAAc,gDACd,KAAc,0BACd,KAAc,UAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,wBACd,KAAc,QACd,KAAc,UAGlB,KAAiB,cACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,aAAc,UAAW,KAAM,mBAAoB,KAAM,YAE7D,KAAiB,mBACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAC7D,KAAiB,YACjB,QAAiB,CAAC,CAAE,aAAc,OAAQ,KAAM,GAAI,KAAM,SAC1D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,wBACjB,QAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAC7D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,6BACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CAAE,aAAc,QAAS,KAAM,OAAQ,KAAM,UAE/C,aAAc,gDACd,KAAc,cACd,KAAc,SAEhB,CAAE,aAAc,QAAS,KAAM,YAAa,KAAM,UAEpD,KAAiB,qBACjB,QAAiB,CAAC,CAAE,aAAc,QAAS,KAAM,GAAI,KAAM,UAC3D,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,wBACd,KAAc,QACd,KAAc,SAEhB,CACE,aAAc,UACd,KAAc,uBACd,KAAc,WAEhB,CAAE,aAAc,QAAS,KAAM,YAAa,KAAM,UAEpD,KAAS,kBACT,QAAS,CACP,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,YAE5D,aAAc,oCACd,KAAc,cACd,KAAc,UAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,wBACd,KAAc,QACd,KAAc,SAEhB,CACE,aAAc,UACd,KAAc,uBACd,KAAc,WAEhB,CAAE,aAAc,QAAS,KAAM,YAAa,KAAM,UAEpD,KAAS,YACT,QAAS,CACP,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,YAE5D,aAAc,oCACd,KAAc,cACd,KAAc,UAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAC7D,KAAiB,SACjB,QAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAC7D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,aAAc,SAAU,KAAM,eAAgB,KAAM,WACxE,KAAiB,gBACjB,QAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,YACvE,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,wBACd,KAAc,QACd,KAAc,UAGlB,KAAS,eACT,QAAS,CACP,CACE,WAAY,CACV,CACE,aAAc,4BACd,KAAc,cACd,KAAc,SAEhB,CAAE,aAAc,UAAW,KAAM,YAAa,KAAM,WACpD,CACE,aAAc,UACd,KAAc,8BACd,KAAc,YAGlB,aAAc,4BACd,KAAc,YACd,KAAc,UAGlB,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CAAE,aAAc,QAAS,KAAM,YAAa,KAAM,UAEpD,KAAiB,uBACjB,QAAiB,CAAC,CAAE,aAAc,OAAQ,KAAM,UAAW,KAAM,SACjE,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,wBACd,KAAc,QACd,KAAc,SAEhB,CAAE,aAAc,QAAS,KAAM,YAAa,KAAM,UAEpD,KAAiB,wBACjB,QAAiB,CAAC,CAAE,aAAc,OAAQ,KAAM,UAAW,KAAM,SACjE,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CAAE,aAAc,QAAS,KAAM,OAAQ,KAAM,UAE/C,aAAc,gDACd,KAAc,cACd,KAAc,SAEhB,CAAE,aAAc,QAAS,KAAM,YAAa,KAAM,UAEpD,KAAiB,8BACjB,QAAiB,CAAC,CAAE,aAAc,OAAQ,KAAM,UAAW,KAAM,SACjE,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,SACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,uBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,YAEvD,KAAS,4BACT,QAAS,CACP,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,YAE5D,aAAc,oCACd,KAAc,cACd,KAAc,UAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,SACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,uBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,YAEvD,KAAS,yBACT,QAAS,CACP,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,YAE5D,aAAc,oCACd,KAAc,cACd,KAAc,UAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,SACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,uBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,YAEvD,KAAS,6BACT,QAAS,CACP,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,YAE5D,aAAc,oCACd,KAAc,cACd,KAAc,UAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,SACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,uBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,YAEvD,KAAS,0BACT,QAAS,CACP,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,YAE5D,aAAc,oCACd,KAAc,cACd,KAAc,UAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,wBACd,KAAc,YACd,KAAc,SAEhB,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,wBACd,KAAc,aACd,KAAc,SAEhB,CAAE,aAAc,QAAS,KAAM,gBAAiB,KAAM,SACtD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,UAEzD,KAAS,cACT,QAAS,CACP,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,kBACd,KAAc,YAGlB,aAAc,oCACd,KAAc,OACd,KAAc,SAEhB,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,kBACd,KAAc,YAGlB,aAAc,oCACd,KAAc,QACd,KAAc,SAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,0BACd,KAAc,YAGlB,aAAc,2CACd,KAAc,qBACd,KAAc,UAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,wBACd,KAAc,YACd,KAAc,SAEhB,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,wBACd,KAAc,aACd,KAAc,SAEhB,CAAE,aAAc,QAAS,KAAM,gBAAiB,KAAM,SACtD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,UAEzD,KAAS,6BACT,QAAS,CACP,CACE,WAAY,CACV,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,kBACd,KAAc,YAGlB,aAAc,oCACd,KAAc,OACd,KAAc,SAEhB,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,eACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,kBACd,KAAc,YAGlB,aAAc,oCACd,KAAc,QACd,KAAc,SAEhB,CACE,aAAc,UACd,KAAc,yBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,0BACd,KAAc,YAGlB,aAAc,2CACd,KAAc,qBACd,KAAc,UAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,WAC3C,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAE7C,KAAiB,aACjB,QAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAC7D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,QACjB,QAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAC7D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,YACjE,KAAiB,UACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,WAC3C,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAE7C,KAAiB,YACjB,QAAiB,CAAC,CAAE,aAAc,OAAQ,KAAM,GAAI,KAAM,SAC1D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,uBACjB,QAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAC7D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,wBACjB,QAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAC7D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,YACvE,KAAiB,qBACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,aAAc,UACd,KAAc,8BACd,KAAc,YAGlB,KAAiB,iCACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,aAAc,UACd,KAAc,+BACd,KAAc,YAGlB,KAAiB,2BACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,aAAc,UAAW,KAAM,mBAAoB,KAAM,WAC3D,CAAE,aAAc,OAAQ,KAAM,WAAY,KAAM,SAElD,KAAiB,gCACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,aAAc,UAAW,KAAM,YAAa,KAAM,WACpD,CAAE,aAAc,YAAa,KAAM,gBAAiB,KAAM,aAC1D,CAAE,aAAc,YAAa,KAAM,cAAe,KAAM,aACxD,CAAE,aAAc,YAAa,KAAM,UAAW,KAAM,cAEtD,KAAiB,oCACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAC7D,KAAiB,uBACjB,QAAiB,CAAC,CAAE,aAAc,OAAQ,KAAM,GAAI,KAAM,SAC1D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,YACrE,KAAiB,oBACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,c,kFCzyDrB,UA1TqB,CACnB,CACE,OAAQ,CACN,CAAE,aAAc,UAAW,KAAM,YAAa,KAAM,WACpD,CAAE,aAAc,UAAW,KAAM,cAAe,KAAM,WACtD,CAAE,aAAc,UAAW,KAAM,QAAS,KAAM,YAElD,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,eAEnB,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,gBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,WACd,KAAc,YAGlB,KAAM,uBACN,KAAM,SAER,CAAE,SAAS,EAAM,gBAAiB,UAAW,KAAM,YACnD,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,yBACjB,QAAiB,CAAC,CAAE,aAAc,SAAU,KAAM,GAAI,KAAM,WAC5D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,mBACjB,QAAiB,CAAC,CAAE,aAAc,SAAU,KAAM,GAAI,KAAM,WAC5D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,uBACjB,QAAiB,CAAC,CAAE,aAAc,SAAU,KAAM,GAAI,KAAM,WAC5D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,aAAc,QAAS,KAAM,YAAa,KAAM,UACpE,KAAiB,yBACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,SACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,sBAAuB,KAAM,WAC9D,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,WACrD,CAAE,aAAc,YAAa,KAAM,gBAAiB,KAAM,aAC1D,CACE,aAAc,oBACd,KAAc,gBACd,KAAc,cAGlB,KAAS,yBACT,QAAS,CACP,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,WAC1D,CACE,aAAc,UACd,KAAc,2BACd,KAAc,YAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,SACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,WACrD,CAAE,aAAc,YAAa,KAAM,gBAAiB,KAAM,aAC1D,CACE,aAAc,oBACd,KAAc,gBACd,KAAc,cAGlB,KAAS,0BACT,QAAS,CACP,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,WAC1D,CACE,aAAc,UACd,KAAc,2BACd,KAAc,YAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CACE,WAAY,CACV,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CAAE,aAAc,UAAW,KAAM,eAAgB,KAAM,WACvD,CACE,aAAc,UACd,KAAc,sBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,gBAAiB,KAAM,WACxD,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,mBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CACE,aAAc,UACd,KAAc,wBACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,iBAAkB,KAAM,SACvD,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,SAC1D,CAAE,aAAc,QAAS,KAAM,oBAAqB,KAAM,UAE5D,aAAc,0BACd,KAAc,SACd,KAAc,WAEhB,CAAE,aAAc,UAAW,KAAM,aAAc,KAAM,WACrD,CAAE,aAAc,YAAa,KAAM,gBAAiB,KAAM,aAC1D,CACE,aAAc,oBACd,KAAc,gBACd,KAAc,cAGlB,KAAS,0BACT,QAAS,CACP,CAAE,aAAc,UAAW,KAAM,kBAAmB,KAAM,WAC1D,CACE,aAAc,UACd,KAAc,2BACd,KAAc,YAGlB,SAAiB,EACjB,gBAAiB,UACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,YAAa,KAAM,MAAO,KAAM,aAChD,CAAE,aAAc,YAAa,KAAM,SAAU,KAAM,aACnD,CAAE,aAAc,QAAS,KAAM,OAAQ,KAAM,UAE/C,KAAiB,yBACjB,QAAiB,CAAC,CAAE,aAAc,SAAU,KAAM,GAAI,KAAM,WAC5D,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,WACnD,CAAE,aAAc,UAAW,KAAM,OAAQ,KAAM,WAC/C,CAAE,aAAc,UAAW,KAAM,KAAM,KAAM,WAC7C,CAAE,aAAc,UAAW,KAAM,QAAS,KAAM,WAChD,CAAE,aAAc,QAAS,KAAM,OAAQ,KAAM,UAE/C,KAAiB,oBACjB,QAAiB,CAAC,CAAE,aAAc,SAAU,KAAM,GAAI,KAAM,WAC5D,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,GACjB,KAAiB,QACjB,QAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,GAAI,KAAM,YAC7D,SAAiB,EACjB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,UAAiB,EACjB,OAAiB,CAAC,CAAE,aAAc,UAAW,KAAM,WAAY,KAAM,YACrE,KAAiB,oBACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,UAAU,EACV,OAAU,CACR,CAAE,aAAc,QAAS,KAAM,YAAa,KAAM,SAClD,CAAE,aAAc,UAAW,KAAM,SAAU,KAAM,YAEnD,KAAiB,gBACjB,QAAiB,GACjB,SAAiB,EACjB,gBAAiB,aACjB,KAAiB,c,kFCuBrB,UA7UuB,CACrB,CACE,OAAiB,GACjB,gBAAiB,aACjB,KAAiB,eAEnB,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,kBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,OACd,KAAc,YAGlB,KAAM,oBACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,OACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,oBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,eACd,KAAc,YAGlB,KAAM,mBACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,OACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,UACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,SACd,KAAc,YAGlB,KAAM,cACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,OACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,UACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,SACd,KAAc,YAGlB,KAAM,cACN,KAAM,SAER,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,GACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,GACd,KAAc,YAGlB,KAAS,iBACT,QAAS,CACP,CACE,aAAc,UACd,KAAc,kBACd,KAAc,WAEhB,CACE,aAAc,SACd,KAAc,OACd,KAAc,UAEhB,CACE,aAAc,SACd,KAAc,SACd,KAAc,UAEhB,CACE,aAAc,UACd,KAAc,SACd,KAAc,YAGlB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,OAAS,GACT,KAAS,qBACT,QAAS,CACP,CACE,aAAc,UACd,KAAc,GACd,KAAc,YAGlB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,OACd,KAAc,YAGlB,KAAS,eACT,QAAS,CACP,CACE,aAAc,UACd,KAAc,GACd,KAAc,YAGlB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,OACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,UACd,KAAc,YAGlB,KAAiB,YACjB,QAAiB,GACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,OACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,UACd,KAAc,YAGlB,KAAS,UACT,QAAS,CACP,CACE,aAAc,OACd,KAAc,GACd,KAAc,SAGlB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,OACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,UACd,KAAc,YAGlB,KAAiB,eACjB,QAAiB,GACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,OACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,UACd,KAAc,YAGlB,KAAiB,aACjB,QAAiB,GACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,SACd,KAAc,cACd,KAAc,WAGlB,KAAS,oBACT,QAAS,CACP,CACE,aAAc,OACd,KAAc,GACd,KAAc,SAGlB,gBAAiB,OACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,kBACd,KAAc,WAEhB,CACE,aAAc,SACd,KAAc,OACd,KAAc,UAEhB,CACE,aAAc,SACd,KAAc,SACd,KAAc,UAEhB,CACE,aAAc,UACd,KAAc,QACd,KAAc,YAGlB,KAAiB,gBACjB,QAAiB,GACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAS,GACT,KAAS,iBACT,QAAS,CACP,CACE,WAAY,CACV,CACE,aAAc,UACd,KAAc,kBACd,KAAc,WAEhB,CACE,aAAc,SACd,KAAc,OACd,KAAc,UAEhB,CACE,aAAc,SACd,KAAc,SACd,KAAc,UAEhB,CACE,aAAc,UACd,KAAc,SACd,KAAc,YAGlB,aAAc,kCACd,KAAc,GACd,KAAc,YAGlB,gBAAiB,OACjB,KAAiB,c,kFCzKrB,UAhK4B,CAC1B,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,gBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,WACd,KAAc,YAGlB,KAAM,uBACN,KAAM,SAER,CACE,WAAW,EACX,OAAW,CACT,CACE,SAAc,EACd,aAAc,UACd,KAAc,oBACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,WACd,KAAc,WAEhB,CACE,SAAc,EACd,aAAc,UACd,KAAc,iBACd,KAAc,YAGlB,KAAM,sBACN,KAAM,SAER,CACE,OAAS,GACT,KAAS,iBACT,QAAS,CACP,CACE,aAAc,OACd,KAAc,GACd,KAAc,SAGlB,gBAAiB,OACjB,KAAiB,WACjB,UAAiB,GAEnB,CACE,OAAS,GACT,KAAS,QACT,QAAS,CACP,CACE,aAAc,UACd,KAAc,GACd,KAAc,YAGlB,gBAAiB,OACjB,KAAiB,WACjB,UAAiB,GAEnB,CACE,OAAiB,GACjB,KAAiB,oBACjB,QAAiB,GACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,WACd,KAAc,YAGlB,KAAiB,oBACjB,QAAiB,GACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAiB,GACjB,KAAiB,uBACjB,QAAiB,GACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,oBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,WACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,iBACd,KAAc,YAGlB,KAAiB,sBACjB,QAAiB,GACjB,gBAAiB,aACjB,KAAiB,YAEnB,CACE,OAAQ,CACN,CACE,aAAc,UACd,KAAc,oBACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,UACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,YACd,KAAc,YAGlB,KAAS,eACT,QAAS,CACP,CACE,aAAc,UACd,KAAc,WACd,KAAc,WAEhB,CACE,aAAc,UACd,KAAc,gBACd,KAAc,YAGlB,gBAAiB,OACjB,KAAiB,WACjB,UAAiB,K,uwDC5JrB,gBA0DA,UAxDa,SAAC,EAAQ,GAAY,WAAI,SAAQ,SAAO,EAAS,GAAM,0C,8DAC5D,EAAuB,SAAC,GAC5B,IAAM,EAA0B,OAAX,EAAE,KAKvB,OAJI,IACF,QAAQ,IAAI,iBACZ,EAAO,IAEF,GAEH,EAAQ,KAAQ,G,iBAER,O,sBAAA,GAAM,EAAO,YAAY,I,cAA/B,EAAM,SACZ,EAAS,SAAiB,EAAN,E,+BAEpB,QAAQ,MAAM,G,oBAEhB,QAAQ,IAAI,sBACZ,EAAO,KAAK,GACT,GAAG,mBAAmB,SAAC,GAAa,UAAQ,KAAK,UAAW,MAC5D,MAAK,SAAC,GACL,UAAQ,KAAK,wBAAwB,eACrC,EAAQ,MAET,OAAM,SAAC,GACD,EAAqB,KACxB,QAAQ,IAAI,mBACZ,EAAO,KAAI,OACN,GAAO,CACV,KAAM,SAEL,GAAG,mBAAmB,SAAC,GAAa,UAAQ,KAAK,UAAW,MAC5D,MAAK,SAAC,GACL,UAAQ,KAAK,wBAAwB,eACrC,EAAQ,MAET,OAAM,SAAC,GACD,EAAqB,KACxB,QAAQ,IAAI,mBACZ,EAAO,KAAI,OACN,GAAO,CACV,KAAM,MACN,aAAc,KACd,qBAAsB,QAErB,GAAG,mBAAmB,SAAC,GAAa,UAAQ,KAAK,UAAW,MAC5D,MAAK,SAAC,GACL,UAAQ,KAAK,wBAAwB,eACrC,EAAQ,MAET,OAAM,SAAC,GAAO,uB,8PCnD/B,gBACI,EAAJ,UACA,SAOImK,EAASC,EAAgB,EAA7B,MAEa,mCAAmC,WAC9C,IAAM,EAAe,UAAU,OAAO,kCAChC,EAAS,IAAI,UAAU,IAAI,IAAI,iCAAiC,GAEtE,OADoC,EAAa,MAAM,GAAQ,gBAYpD,cAAc,SAAC,G,IAC1B,EAAO,UACP,EAAY,eACZ,EAAgB,mBAChB,EAAgB,mBAChB,EAAc,iBACd,EAAc,iBACd,wBAAY,MAAG,eAAY,EAC3B,+BAAmB,MAAG,eAAY,EAClC,EAAqB,wBACrB,oBAAQ,MAAG,OAAI,EACf,oBAAQ,MAAG,OAAI,EACX,MAAC,CACL,QAAO,EACP,gBAAiB,UAAU,GAAS,SACpC,aAAY,EACZ,aAAY,EACZ,cAAe,eACf,oBAAmB,EACnB,sBAAqB,EACrB,KAAM,UAAK,MAAM,UAAU,IAC3B,iBAAkB,EAAiB,WACnC,iBAAkB,EAAiB,WACnC,eAAc,EACd,eAAc,EACd,kBAAmB,EACnB,kBAAmB,EACnB,SAAU,EAAS,WACnB,SAAU,EAAS,aAGR,gBAAgB,SAAC,GAAS,OAvC1B,SAAC,EAAK,GACjB,IAAM,EAAS,GAIf,OAHA,EAAM,SAAQ,SAAC,GACb,EAAO,GAAQ,EAAI,MAEd,EAkC8B,CAAK,EAAM,CAChD,UACA,kBACA,eACA,eACA,gBACA,sBACA,wBACA,OACA,mBACA,mBACA,iBACA,iBACA,oBACA,oBACA,WACA,WACA,gB","file":"static/js/main.305d1fc6.chunk.js","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./constants\");\nvar api_1 = __importDefault(require(\"./api\"));\nvar transaction_1 = __importDefault(require(\"./transaction\"));\nvar chain_1 = require(\"./utils/chain\");\nvar wallet_1 = __importDefault(require(\"./wallet\"));\nvar addresses_1 = __importDefault(require(\"./addresses\"));\nvar chains_1 = require(\"./utils/chains\");\nvar currencies_1 = __importDefault(require(\"./utils/currencies\"));\nvar isValidERC20_1 = require(\"./utils/isValidERC20\");\nvar opensea_js_1 = require(\"opensea-js\");\nvar serializeOpenSeaOrder_1 = require(\"./utils/serializeOpenSeaOrder\");\nvar emitter_1 = __importDefault(require(\"./utils/emitter\"));\nvar Nifty = /** @class */ (function () {\n    function Nifty(options) {\n        var _this = this;\n        this.transactionConfirmation = function (txnHash, INTERVAL) {\n            if (INTERVAL === void 0) { INTERVAL = 1000; }\n            return new Promise(function (resolve, reject) {\n                var transactionReceiptRetry = function () { return _this.wallet.provider.eth.getTransactionReceipt(txnHash)\n                    .then(function (receipt) { return (receipt && receipt.blockNumber\n                    ? resolve(receipt)\n                    : setTimeout(function () {\n                        transactionReceiptRetry();\n                    }, INTERVAL)); }); };\n                transactionReceiptRetry();\n            });\n        };\n        this.key = options.key;\n        this.env = options.env;\n        this.api = (0, api_1.default)(this.env);\n    }\n    Nifty.prototype.initWallet = function (type, provider) {\n        this.wallet = (0, wallet_1.default)(type, provider);\n    };\n    Nifty.prototype.setStatusListener = function (listener) {\n        this.listener = listener;\n    };\n    Nifty.prototype.addListener = function (listener, event, once) {\n        if (once === void 0) { once = false; }\n        if (once) {\n            emitter_1.default.once(event, listener);\n        }\n        else {\n            emitter_1.default.on(event, listener);\n        }\n    };\n    Nifty.prototype.verifyMarkletplace = function () {\n        if (!this.key) {\n            throw new Error('key id is missing');\n        }\n    };\n    Nifty.prototype.verifyWallet = function () {\n        if (!this.wallet) {\n            throw new Error('Please set wallet');\n        }\n    };\n    /**\n    * @param order recived from api\n    * @param externalOrder boolean if order is external\n    * @returns returns item\n    * @returns returns tnx hash value\n    */\n    Nifty.prototype.buy = function (order) {\n        return __awaiter(this, void 0, void 0, function () {\n            var address, chainId, isExternalOrder, ExternalOrder, _a, networkName, openseaSDK, serializeOrder, e_1, transaction, res;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.verifyWallet();\n                        return [4 /*yield*/, this.wallet.getUserAddress()];\n                    case 1:\n                        address = _b.sent();\n                        return [4 /*yield*/, this.wallet.chainId()];\n                    case 2:\n                        chainId = _b.sent();\n                        if (order.state !== constants_1.orderStatuses.ADDED) {\n                            throw new Error('Order is not valid');\n                        }\n                        isExternalOrder = function (order) {\n                            return !!order.source;\n                        };\n                        if (!isExternalOrder(order)) return [3 /*break*/, 9];\n                        ExternalOrder = order;\n                        _b.label = 3;\n                    case 3:\n                        _b.trys.push([3, 8, , 9]);\n                        _a = ExternalOrder.source;\n                        switch (_a) {\n                            case constants_1.OPENSEA: return [3 /*break*/, 4];\n                        }\n                        return [3 /*break*/, 6];\n                    case 4:\n                        networkName = this.env === constants_1.PROD ? opensea_js_1.Network.Main : opensea_js_1.Network.Rinkeby;\n                        openseaSDK = new opensea_js_1.OpenSeaSDK(this.wallet.provider.currentProvider, {\n                            networkName: networkName\n                        });\n                        serializeOrder = (0, serializeOpenSeaOrder_1.serializeOpenSeaOrder)(ExternalOrder);\n                        return [4 /*yield*/, openseaSDK.fulfillOrder({ order: serializeOrder, accountAddress: address })];\n                    case 5: return [2 /*return*/, _b.sent()];\n                    case 6: return [3 /*break*/, 7];\n                    case 7: return [3 /*break*/, 9];\n                    case 8:\n                        e_1 = _b.sent();\n                        throw new Error(e_1);\n                    case 9:\n                        transaction = new transaction_1.default({\n                            wallet: this.wallet,\n                            address: address,\n                            chainId: chainId,\n                        });\n                        if (this.listener) {\n                            transaction.setStatusListener(this.listener);\n                        }\n                        return [4 /*yield*/, transaction.buy(order)];\n                    case 10:\n                        res = _b.sent();\n                        return [2 /*return*/, res];\n                }\n            });\n        });\n    };\n    /**\n    * @param item item recived from api\n    * @param price price for the NFT\n    * @param expirationTime Expiration time in UTC seconds.\n    * @param ERC20Address to fullfill the order with\n    * @returns returns complete order from api\n    */\n    Nifty.prototype.list = function (item, price, expirationTime, ERC20Address) {\n        return __awaiter(this, void 0, void 0, function () {\n            var contractAddress, tokenID, contractType, itemChainId, address, chainId, exchangeAddress, transaction, orderList, res, e_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.verifyWallet();\n                        contractAddress = item.contractAddress, tokenID = item.tokenID, contractType = item.contractType, itemChainId = item.chainId;\n                        return [4 /*yield*/, this.wallet.getUserAddress()];\n                    case 1:\n                        address = _a.sent();\n                        return [4 /*yield*/, this.wallet.chainId()];\n                    case 2:\n                        chainId = _a.sent();\n                        exchangeAddress = addresses_1.default[chainId].Exchange;\n                        if (!(0, isValidERC20_1.isValidERC20)(ERC20Address, chainId)) {\n                            throw new Error('Invalid ERC20 address');\n                        }\n                        transaction = new transaction_1.default({\n                            wallet: this.wallet,\n                            address: address,\n                            chainId: chainId,\n                        });\n                        if (this.listener) {\n                            transaction.setStatusListener(this.listener);\n                        }\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 6, , 7]);\n                        return [4 /*yield*/, transaction.list({ contractAddress: contractAddress, tokenID: tokenID, contractType: contractType, price: price, exchangeAddress: exchangeAddress, itemChainId: itemChainId, expirationTime: expirationTime, ERC20Address: ERC20Address })];\n                    case 4:\n                        orderList = _a.sent();\n                        return [4 /*yield*/, this.api.orders.create(orderList)];\n                    case 5:\n                        res = _a.sent();\n                        return [2 /*return*/, res.data];\n                    case 6:\n                        e_2 = _a.sent();\n                        throw new Error(e_2);\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Nifty.prototype.offer = function (item, price, expirationTime) {\n        return __awaiter(this, void 0, void 0, function () {\n            var address, chainId, exchangeAddress, transaction, tokenWithType, owner, offerOrder;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.verifyWallet();\n                        return [4 /*yield*/, this.wallet.getUserAddress()];\n                    case 1:\n                        address = _a.sent();\n                        return [4 /*yield*/, this.wallet.chainId()];\n                    case 2:\n                        chainId = _a.sent();\n                        exchangeAddress = addresses_1.default[chainId].Exchange;\n                        transaction = new transaction_1.default({\n                            wallet: this.wallet,\n                            address: address,\n                            chainId: chainId,\n                        });\n                        if (this.listener) {\n                            transaction.setStatusListener(this.listener);\n                        }\n                        tokenWithType = JSON.parse(JSON.stringify(item));\n                        return [4 /*yield*/, this.getNftOwner(item.contractAddress, item.tokenID, item.chainId, item.contractType)];\n                    case 3:\n                        owner = _a.sent();\n                        return [4 /*yield*/, transaction.offer({\n                                item: tokenWithType,\n                                price: price,\n                                isFullConversion: false,\n                                exchangeAddress: exchangeAddress,\n                                expirationTime: expirationTime\n                            })];\n                    case 4:\n                        offerOrder = _a.sent();\n                        if (owner.id) {\n                            offerOrder.recipientAddress = owner.id;\n                        }\n                        offerOrder.type = constants_1.OFFER;\n                        return [2 /*return*/, this.api.orders.create(offerOrder)];\n                }\n            });\n        });\n    };\n    Nifty.prototype.cancelOrder = function (order) {\n        return __awaiter(this, void 0, void 0, function () {\n            var address, chainId, transaction;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.verifyWallet();\n                        if (order.state !== constants_1.orderStatuses.ADDED) {\n                            throw new Error('Order is not valid');\n                        }\n                        return [4 /*yield*/, this.wallet.getUserAddress()];\n                    case 1:\n                        address = _a.sent();\n                        return [4 /*yield*/, this.wallet.chainId()];\n                    case 2:\n                        chainId = _a.sent();\n                        transaction = new transaction_1.default({\n                            wallet: this.wallet,\n                            address: address,\n                            chainId: chainId,\n                        });\n                        if (this.listener) {\n                            transaction.setStatusListener(this.listener);\n                        }\n                        return [4 /*yield*/, transaction.cancelOrder(order)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/, this.api.orders.cancel(order.id)];\n                }\n            });\n        });\n    };\n    Nifty.prototype.acceptOffer = function (order) {\n        return __awaiter(this, void 0, void 0, function () {\n            var address, chainId, transaction, res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.verifyWallet();\n                        if (order.state !== constants_1.orderStatuses.ADDED) {\n                            throw new Error('Order is not valid');\n                        }\n                        return [4 /*yield*/, this.wallet.getUserAddress()];\n                    case 1:\n                        address = _a.sent();\n                        return [4 /*yield*/, this.wallet.chainId()];\n                    case 2:\n                        chainId = _a.sent();\n                        transaction = new transaction_1.default({\n                            wallet: this.wallet,\n                            address: address,\n                            chainId: chainId,\n                        });\n                        if (this.listener) {\n                            transaction.setStatusListener(this.listener);\n                        }\n                        return [4 /*yield*/, transaction.acceptOffer(order)];\n                    case 3:\n                        res = _a.sent();\n                        return [2 /*return*/, res];\n                }\n            });\n        });\n    };\n    Nifty.prototype.rejectOffer = function (orderId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.verifyWallet();\n                return [2 /*return*/, this.api.orders.cancel(orderId)];\n            });\n        });\n    };\n    /**\n     * @param filter options\n        * @param filter.contracts array of contracts to filter by\n        * @param filter.search string to search by\n        * @param filter.order has order attached\n        * @param filter.verified only show verified listings\n        * @param filter.priceRange array of price range [min,max]\n        * @param filter.chains array of chains []\n        * @param filter.address user address to filter by\n        * @param filter.connectedChainId chain id of the user address\n        * @param filter.traits array of traits to filter by\n        * @param filter.sort string to sort by\n        * @param filter.limit number on NFTs to return\n        * @param filter.skip number of NFTs to skip\n     * @returns returns NFTs from api\n     */\n    Nifty.prototype.getNFTs = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var res, e_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.verifyMarkletplace();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.api.tokens.getAll(__assign(__assign({}, options), { key: this.key }))];\n                    case 2:\n                        res = _a.sent();\n                        return [2 /*return*/, res.data];\n                    case 3:\n                        e_3 = _a.sent();\n                        throw new Error(e_3);\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n    * @param contractAddress NFT contract address\n    * @param tokenID NFT token id\n    * @param chainId chain id of the NFT\n    * @returns returns NFT from api\n    */\n    Nifty.prototype.getNFT = function (contractAddress, tokenID, chainId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var res, e_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.verifyMarkletplace();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.api.tokens.get(contractAddress, tokenID, { chainId: chainId })];\n                    case 2:\n                        res = _a.sent();\n                        return [2 /*return*/, res.data];\n                    case 3:\n                        e_4 = _a.sent();\n                        throw new Error(e_4);\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n    * @param item item recived from api\n    * @returns returns NFT data object\n        * @returns returns NFT balances(1155)\n        * @returns returns NFT transfers\n        * @returns returns NFT offers\n    */\n    Nifty.prototype.getNFTData = function (item) {\n        return __awaiter(this, void 0, void 0, function () {\n            var contractAddress, tokenID, contractType, chainId, tokenId, res, e_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.verifyMarkletplace();\n                        contractAddress = item.contractAddress, tokenID = item.tokenID, contractType = item.contractType, chainId = item.chainId, tokenId = item.id;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.api.tokens.getGraph({\n                                contractAddress: contractAddress,\n                                tokenID: tokenID,\n                                chainId: chainId,\n                                contractType: contractType,\n                                tokenId: tokenId,\n                            })];\n                    case 2:\n                        res = _a.sent();\n                        return [2 /*return*/, res.data];\n                    case 3:\n                        e_5 = _a.sent();\n                        throw new Error(e_5);\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n    * @param item item recived from api\n    * @param listings array of listings from getNFTData\n    * @returns returns canBuy\n    * @returns returns canSell\n    */\n    Nifty.prototype.getUserAvailableMethods = function (listings, item) {\n        return __awaiter(this, void 0, void 0, function () {\n            var address, chainId, contractAddress, tokenID, contractType, itemChainId, transaction, isOwner, activeListings, isListedByOtherThanUser, isUserListingToken, order;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.verifyMarkletplace();\n                        this.verifyWallet();\n                        return [4 /*yield*/, this.wallet.getUserAddress()];\n                    case 1:\n                        address = _a.sent();\n                        return [4 /*yield*/, this.wallet.chainId()];\n                    case 2:\n                        chainId = _a.sent();\n                        contractAddress = item.contractAddress, tokenID = item.tokenID, contractType = item.contractType, itemChainId = item.chainId;\n                        if (String(itemChainId) !== String(chainId)) {\n                            throw new Error(\"Please connect to \".concat(itemChainId));\n                        }\n                        transaction = new transaction_1.default({ wallet: this.wallet, address: address, chainId: chainId });\n                        return [4 /*yield*/, transaction.isOwner(contractAddress, tokenID, contractType)];\n                    case 3:\n                        isOwner = _a.sent();\n                        activeListings = listings.filter(function (list) { return list.state === 'ADDED'; });\n                        isListedByOtherThanUser = activeListings.some(function (list) { return list.makerAddress !== address; });\n                        isUserListingToken = activeListings.some(function (list) { return list.makerAddress === address; });\n                        if (item.orderId) {\n                            order = listings.find(function (x) { return x.id === item.orderId; });\n                        }\n                        return [2 /*return*/, ({\n                                canBuy: (!isOwner || isListedByOtherThanUser) && !!item.price,\n                                canSell: isOwner && !isUserListingToken,\n                                canCancel: !!order && order.makerAddress === address,\n                                canOffer: !isOwner\n                            })];\n                }\n            });\n        });\n    };\n    /**\n    * @param orderId order id from item\n    * @param externalOrder boolean if the order is external\n    * @returns listing\n    */\n    Nifty.prototype.getListing = function (orderId, isExternalOrder) {\n        if (isExternalOrder === void 0) { isExternalOrder = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var res_1, res, e_6;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.verifyMarkletplace();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 5, , 6]);\n                        if (!isExternalOrder) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.api.externalOrders.get(orderId)];\n                    case 2:\n                        res_1 = _a.sent();\n                        return [2 /*return*/, res_1.data];\n                    case 3: return [4 /*yield*/, this.api.orders.get(orderId)];\n                    case 4:\n                        res = _a.sent();\n                        return [2 /*return*/, res.data];\n                    case 5:\n                        e_6 = _a.sent();\n                        throw new Error(e_6);\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Nifty.prototype.getNftOwner = function (contractAddress, tokenID, chainId, contractType, orderId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.api.tokens.getOwner({\n                            contractAddress: contractAddress,\n                            tokenID: tokenID,\n                            chainId: chainId,\n                            orderId: orderId,\n                            contractType: contractType,\n                        })];\n                    case 1:\n                        res = _a.sent();\n                        return [2 /*return*/, res.data];\n                }\n            });\n        });\n    };\n    ;\n    /**\n    * @param chainId optional chain id\n    * @returns currencies\n    */\n    Nifty.prototype.getAvailablePaymentMethods = function (chainId, defaultPaymentMethod) {\n        if (defaultPaymentMethod === void 0) { defaultPaymentMethod = false; }\n        this.verifyMarkletplace();\n        if (chainId) {\n            if (defaultPaymentMethod) {\n                return currencies_1.default.filter(function (x) { return x.chainId === Number(chainId) && x.defaultPaymentMethod; });\n            }\n            return currencies_1.default.filter(function (x) { return x.chainId === Number(chainId); });\n        }\n        return currencies_1.default;\n    };\n    Nifty.utils = {\n        findChainById: chain_1.findChainById\n    };\n    Nifty.networkTypes = {\n        EVM: chains_1.EVM,\n        IMMUTABLEX: chains_1.IMMUTABLEX,\n        SOLANA: chains_1.SOLANA,\n    };\n    Nifty.envs = {\n        PROD: constants_1.PROD,\n        TESTNET: constants_1.TESTNET,\n    };\n    return Nifty;\n}());\nexports.default = Nifty;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nvar addresses_1 = __importDefault(require(\"../addresses\"));\nvar constants_1 = require(\"../constants\");\nvar utils_1 = require(\"./utils\");\n/**\n *   @signTypedData - function that handles signing and metamask interaction\n */\nvar signTypedData = function (provider, address, payload) { return __awaiter(void 0, void 0, void 0, function () {\n    var methodsToTry, lastErr, methodsToTry_1, methodsToTry_1_1, method, typedData, response, err_1, e_1_1;\n    var e_1, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                methodsToTry = ['eth_signTypedData_v4', 'eth_signTypedData_v3', 'eth_signTypedData'];\n                _b.label = 1;\n            case 1:\n                _b.trys.push([1, 9, 10, 15]);\n                methodsToTry_1 = __asyncValues(methodsToTry);\n                _b.label = 2;\n            case 2: return [4 /*yield*/, methodsToTry_1.next()];\n            case 3:\n                if (!(methodsToTry_1_1 = _b.sent(), !methodsToTry_1_1.done)) return [3 /*break*/, 8];\n                method = methodsToTry_1_1.value;\n                typedData = {\n                    id: methodsToTry.indexOf(method),\n                    params: [\n                        address,\n                        method === 'eth_signTypedData' ? payload : JSON.stringify(payload),\n                    ],\n                    jsonrpc: '2.0',\n                    method: method,\n                };\n                _b.label = 4;\n            case 4:\n                _b.trys.push([4, 6, , 7]);\n                return [4 /*yield*/, (0, utils_1.send)(provider, typedData)];\n            case 5:\n                response = _b.sent();\n                return [2 /*return*/, response];\n            case 6:\n                err_1 = _b.sent();\n                lastErr = err_1;\n                // If there are no more methods to try or the error says something other\n                // than the method not existing, throw.\n                if (!/(not handled|does not exist|not supported)/.test(err_1.message)) {\n                    throw err_1;\n                }\n                return [3 /*break*/, 7];\n            case 7: return [3 /*break*/, 2];\n            case 8: return [3 /*break*/, 15];\n            case 9:\n                e_1_1 = _b.sent();\n                e_1 = { error: e_1_1 };\n                return [3 /*break*/, 15];\n            case 10:\n                _b.trys.push([10, , 13, 14]);\n                if (!(methodsToTry_1_1 && !methodsToTry_1_1.done && (_a = methodsToTry_1.return))) return [3 /*break*/, 12];\n                return [4 /*yield*/, _a.call(methodsToTry_1)];\n            case 11:\n                _b.sent();\n                _b.label = 12;\n            case 12: return [3 /*break*/, 14];\n            case 13:\n                if (e_1) throw e_1.error;\n                return [7 /*endfinally*/];\n            case 14: return [7 /*endfinally*/];\n            case 15: throw lastErr;\n        }\n    });\n}); };\nvar signEth = function (provider, address, payload) { return __awaiter(void 0, void 0, void 0, function () {\n    var orderHash;\n    return __generator(this, function (_a) {\n        orderHash = utils_1.signTypedDataUtils.generateTypedDataHash(payload);\n        return [2 /*return*/, (0, utils_1.send)(provider, {\n                method: 'eth_sign',\n                params: [address, orderHash],\n            })];\n    });\n}); };\n/**\n *   @signTyped - main function to be called when signing\n */\nexports.default = (function (provider, order, from, verifyingContract) { return __awaiter(void 0, void 0, void 0, function () {\n    var typedData, signature, err_2, ecSignatureRSV, signatureBuffer, signatureHex;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!verifyingContract) {\n                    verifyingContract = addresses_1.default[Number(order.chainId)].Exchange;\n                }\n                typedData = __assign(__assign({}, types_1.signatureTypes), { domain: {\n                        name: constants_1.SIGNATURE_DOMAIN,\n                        version: constants_1.SIGNATURE_VERSION,\n                        chainId: order.chainId,\n                        verifyingContract: verifyingContract,\n                    }, message: order, primaryType: 'Order' });\n                _a.label = 1;\n            case 1:\n                _a.trys.push([1, 3, , 5]);\n                return [4 /*yield*/, signTypedData(provider, from, typedData)];\n            case 2:\n                /* if (!window.ethereum || !window.ethereum.isMetaMask) {\n                  // if not using metamask use signEth\n                  throw new Error('using eth_sign');\n                } */\n                signature = _a.sent();\n                return [3 /*break*/, 5];\n            case 3:\n                err_2 = _a.sent();\n                // HACK: We are unable to handle specific errors thrown since provider is not an object\n                //       under our control. It could be Metamask Web3, Ethers, or any general RPC provider.\n                //       We check for a user denying the signature request in a way that supports Metamask and\n                //       Coinbase Wallet. Unfortunately for signers with a different error message,\n                //       they will receive two signature requests.\n                if (err_2.message.includes('User denied message signature')) {\n                    throw err_2;\n                }\n                return [4 /*yield*/, signEth(provider, from, typedData)];\n            case 4:\n                signature = _a.sent();\n                return [3 /*break*/, 5];\n            case 5:\n                if (!signature) {\n                    throw new Error('No Signature');\n                }\n                ecSignatureRSV = utils_1.signTypedDataUtils.parseSignatureHexAsRSV(signature);\n                signatureBuffer = Buffer.concat([\n                    (0, ethereumjs_util_1.toBuffer)(ecSignatureRSV.v),\n                    (0, ethereumjs_util_1.toBuffer)(ecSignatureRSV.r),\n                    (0, ethereumjs_util_1.toBuffer)(ecSignatureRSV.s),\n                    (0, ethereumjs_util_1.toBuffer)(2),\n                ]);\n                signatureHex = \"0x\".concat(signatureBuffer.toString('hex'));\n                return [2 /*return*/, __assign(__assign({}, order), { signature: signatureHex })];\n        }\n    });\n}); });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signatureTypes = void 0;\nexports.signatureTypes = {\n    types: {\n        EIP712Domain: [\n            {\n                name: 'name',\n                type: 'string',\n            },\n            {\n                name: 'version',\n                type: 'string',\n            },\n            {\n                name: 'chainId',\n                type: 'uint256',\n            },\n            {\n                name: 'verifyingContract',\n                type: 'address',\n            },\n        ],\n        Order: [\n            {\n                name: 'makerAddress',\n                type: 'address',\n            },\n            {\n                name: 'takerAddress',\n                type: 'address',\n            },\n            {\n                name: 'feeRecipientAddress',\n                type: 'address',\n            },\n            {\n                name: 'senderAddress',\n                type: 'address',\n            },\n            {\n                name: 'makerAssetAmount',\n                type: 'uint256',\n            },\n            {\n                name: 'takerAssetAmount',\n                type: 'uint256',\n            },\n            {\n                name: 'makerFee',\n                type: 'uint256',\n            },\n            {\n                name: 'takerFee',\n                type: 'uint256',\n            },\n            {\n                name: 'expirationTimeSeconds',\n                type: 'uint256',\n            },\n            {\n                name: 'salt',\n                type: 'uint256',\n            },\n            {\n                name: 'makerAssetData',\n                type: 'bytes',\n            },\n            {\n                name: 'takerAssetData',\n                type: 'bytes',\n            },\n            {\n                name: 'makerFeeAssetData',\n                type: 'bytes',\n            },\n            {\n                name: 'takerFeeAssetData',\n                type: 'bytes',\n            },\n        ],\n    }\n};\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.send = exports.signTypedDataUtils = void 0;\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar ethUtil = __importStar(require(\"ethereumjs-util\"));\nvar ethers = __importStar(require(\"ethers\"));\nexports.signTypedDataUtils = {\n    /**\n     * Generates the EIP712 Typed Data hash for signing\n     * @param   typedData An object that conforms to the EIP712TypedData interface\n     * @return  A Buffer containing the hash of the typed data.\n     */\n    generateTypedDataHash: function (typedData) {\n        return ethUtil.keccak256(Buffer.concat([\n            Buffer.from('1901', 'hex'),\n            exports.signTypedDataUtils._structHash('EIP712Domain', typedData.domain, typedData.types),\n            exports.signTypedDataUtils._structHash(typedData.primaryType, typedData.message, typedData.types),\n        ]));\n    },\n    /**\n     * Generates the EIP712 Typed Data hash for a typed data object without using the domain field. This\n     * makes hashing easier for non-EIP712 data.\n     * @param   typedData An object that conforms to the EIP712TypedData interface\n     * @return  A Buffer containing the hash of the typed data.\n     */\n    generateTypedDataHashWithoutDomain: function (typedData) {\n        return exports.signTypedDataUtils._structHash(typedData.primaryType, typedData.message, typedData.types);\n    },\n    /**\n     * Generates the hash of a EIP712 Domain with the default schema\n     * @param  domain An EIP712 domain with the default schema containing a name, version, chain id,\n     *                and verifying address.\n     * @return A buffer that contains the hash of the domain.\n     */\n    generateDomainHash: function (domain) {\n        return exports.signTypedDataUtils._structHash('EIP712Domain', domain, \n        // HACK(jalextowle): When we consolidate our testing packages into test-utils, we can use a constant\n        // to eliminate code duplication. At the moment, there isn't a good way to do that because of cyclic-dependencies.\n        {\n            EIP712Domain: [\n                { name: 'name', type: 'string' },\n                { name: 'version', type: 'string' },\n                { name: 'chainId', type: 'uint256' },\n                { name: 'verifyingContract', type: 'address' },\n            ],\n        });\n    },\n    _findDependencies: function (primaryType, types, found) {\n        if (found === void 0) { found = []; }\n        if (found.includes(primaryType) || types[primaryType] === undefined) {\n            return found;\n        }\n        found.push(primaryType);\n        for (var _i = 0, _a = types[primaryType]; _i < _a.length; _i++) {\n            var field = _a[_i];\n            for (var _b = 0, _c = exports.signTypedDataUtils._findDependencies(field.type, types, found); _b < _c.length; _b++) {\n                var dep = _c[_b];\n                if (!found.includes(dep)) {\n                    found.push(dep);\n                }\n            }\n        }\n        return found;\n    },\n    _encodeType: function (primaryType, types) {\n        var deps = exports.signTypedDataUtils._findDependencies(primaryType, types);\n        deps = deps.filter(function (d) { return d !== primaryType; });\n        deps = [primaryType].concat(deps.sort());\n        var result = '';\n        for (var _i = 0, deps_1 = deps; _i < deps_1.length; _i++) {\n            var dep = deps_1[_i];\n            result += \"\".concat(dep, \"(\").concat(types[dep].map(function (_a) {\n                var name = _a.name, type = _a.type;\n                return \"\".concat(type, \" \").concat(name);\n            }).join(','), \")\");\n        }\n        return result;\n    },\n    _encodeData: function (primaryType, data, types) {\n        var encodedTypes = ['bytes32'];\n        var encodedValues = [exports.signTypedDataUtils._typeHash(primaryType, types)];\n        for (var _i = 0, _a = types[primaryType]; _i < _a.length; _i++) {\n            var field = _a[_i];\n            var value = data[field.name];\n            if (field.type === 'string') {\n                var hashValue = ethUtil.keccak256(Buffer.from(value));\n                encodedTypes.push('bytes32');\n                encodedValues.push(hashValue);\n            }\n            else if (field.type === 'bytes') {\n                var hashValue = ethUtil.keccak256(ethUtil.toBuffer(value));\n                encodedTypes.push('bytes32');\n                encodedValues.push(hashValue);\n            }\n            else if (types[field.type] !== undefined) {\n                encodedTypes.push('bytes32');\n                var hashValue = ethUtil.keccak256(\n                // tslint:disable-next-line:no-unnecessary-type-assertion\n                ethUtil.toBuffer(exports.signTypedDataUtils._encodeData(field.type, value, types)));\n                encodedValues.push(hashValue);\n            }\n            else if (field.type.lastIndexOf(']') === field.type.length - 1) {\n                throw new Error('Arrays currently unimplemented in encodeData');\n            }\n            else {\n                encodedTypes.push(field.type);\n                var normalizedValue = exports.signTypedDataUtils._normalizeValue(field.type, value);\n                encodedValues.push(normalizedValue);\n            }\n        }\n        return ethers.utils.defaultAbiCoder.encode(encodedTypes, encodedValues);\n    },\n    _normalizeValue: function (type, value) {\n        var STRING_BASE = 10;\n        if (type === 'uint256') {\n            if (bignumber_js_1.default.isBigNumber(value)) {\n                return value.toString(STRING_BASE);\n            }\n            return new bignumber_js_1.default(value).toString(STRING_BASE);\n        }\n        return value;\n    },\n    _typeHash: function (primaryType, types) {\n        return ethUtil.keccak256(Buffer.from(exports.signTypedDataUtils._encodeType(primaryType, types)));\n    },\n    _structHash: function (primaryType, data, types) {\n        return ethUtil.keccak256(ethUtil.toBuffer(exports.signTypedDataUtils._encodeData(primaryType, data, types)));\n    },\n    parseSignatureHexAsRSV: function (signatureHex) {\n        var _a = ethUtil.fromRpcSig(signatureHex), v = _a.v, r = _a.r, s = _a.s;\n        var ecSignature = {\n            v: v,\n            r: ethUtil.bufferToHex(r),\n            s: ethUtil.bufferToHex(s),\n        };\n        return ecSignature;\n    },\n};\n/**\n *   @send - send message to and open metamask\n */\nvar send = function (provider, data) { return new Promise(function (resolve, reject) { return provider.sendAsync(data, function (err, result) {\n    if (result.error) {\n        err = result.error;\n    }\n    if (err) {\n        return reject(err);\n    }\n    return resolve(result.result);\n}); }); };\nexports.send = send;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findChainById = void 0;\nvar chains_1 = __importStar(require(\"./chains\"));\nvar findChainById = function (id) { return chains_1.default.find(function (x) { return x.chainId == id; }) || {\n    chainType: chains_1.EVM, nativeCurrency: { icon: '' }, name: 'Chain is not supported.', shortName: '',\n}; };\nexports.findChainById = findChainById;\n//# sourceMappingURL=chain.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chains_1 = require(\"../utils/chains\");\nvar evm_1 = __importDefault(require(\"./walletProvider/evm\"));\nvar web3Libs = (_a = {},\n    _a[chains_1.EVM] = evm_1.default,\n    _a);\nfunction default_1(type, provider) {\n    var web3Lib = web3Libs[type];\n    if (!web3Lib) {\n        throw new Error('unknown provider type');\n    }\n    return new web3Lib(provider);\n}\nexports.default = default_1;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Evm = /** @class */ (function () {\n    function Evm(provider) {\n        this.provider = provider;\n    }\n    Evm.prototype.getUserAddress = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var accounts;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.provider.eth.getAccounts()];\n                    case 1:\n                        accounts = _a.sent();\n                        return [2 /*return*/, accounts[0].toLowerCase()];\n                }\n            });\n        });\n    };\n    Evm.prototype.chainId = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.provider.eth.getChainId()];\n            });\n        });\n    };\n    Evm.prototype.getBalance = function (address) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.provider.eth.getBalance(address)];\n            });\n        });\n    };\n    Evm.prototype.humanFormatDigit = function (number) {\n        return this.provider.utils.fromWei(String(number));\n    };\n    Evm.prototype.blockchainFormatDigit = function (number) {\n        return this.provider.utils.toWei(String(number));\n    };\n    Evm.prototype.isAddress = function (address) {\n        return this.provider.utils.isAddress(address);\n    };\n    Evm.prototype.toHex = function (string) {\n        return this.provider.utils.toHex(string);\n    };\n    Evm.prototype.encode = function (string) {\n        return this.provider.utils.keccak256(string);\n    };\n    Evm.prototype.personalSign = function (hash, address, password) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.provider.eth.personal.sign(hash, address, password)];\n            });\n        });\n    };\n    Evm.prototype.sign = function (hash, address) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.provider.eth.sign(hash, address)];\n            });\n        });\n    };\n    Evm.prototype.Contract = function (abi, contract) {\n        return new this.provider.eth.Contract(abi, contract);\n    };\n    Evm.prototype.getTransactionReceipt = function (txnHash) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.provider.eth.getTransactionReceipt(txnHash)];\n            });\n        });\n    };\n    Evm.prototype.getGasPrice = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.provider.eth.getGasPrice()];\n            });\n        });\n    };\n    return Evm;\n}());\nexports.default = Evm;\n//# sourceMappingURL=evm.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.orderStatuses = exports.EIP1155 = exports.EIP721 = exports.RARIBLE = exports.LOOKSRARE = exports.OPENSEA = exports.MAX_DIGITS_IN_UNSIGNED_256_INT = exports.tenYearsInSeconds = exports.ZERO = exports.NULL_BYTES = exports.NULL_ADDRESS = exports.OFFER = exports.CANCELLING = exports.PURCHASE = exports.WITHDRAW = exports.CLAIM = exports.STAKING = exports.SELL = exports.BUY = exports.CONVERT = exports.CHECKING_BALANCE = exports.APPROVING_FILL = exports.SIGN = exports.APPROVED = exports.APPROVING = exports.CREATING_GASLESS = exports.CREATING = exports.SIGNATURE_VERSION = exports.SIGNATURE_DOMAIN = exports.TESTNET = exports.PROD = void 0;\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nexports.PROD = 'prod';\nexports.TESTNET = 'testnet';\nexports.SIGNATURE_DOMAIN = 'NFTrade';\nexports.SIGNATURE_VERSION = '1.0.0';\nexports.CREATING = 'creating';\nexports.CREATING_GASLESS = 'creating_gasless';\nexports.APPROVING = 'approving';\nexports.APPROVED = 'approved';\nexports.SIGN = 'sign';\nexports.APPROVING_FILL = 'approving_fill';\nexports.CHECKING_BALANCE = 'checking_balance';\nexports.CONVERT = 'convert';\nexports.BUY = 'buy';\nexports.SELL = 'sell';\nexports.STAKING = 'staking';\nexports.CLAIM = 'claim';\nexports.WITHDRAW = 'withdraw';\nexports.PURCHASE = 'purchase';\nexports.CANCELLING = 'cancelling';\nexports.OFFER = 'OFFER';\nexports.NULL_ADDRESS = '0x0000000000000000000000000000000000000000';\nexports.NULL_BYTES = '0x';\nexports.ZERO = new bignumber_js_1.default(0).toString();\nexports.tenYearsInSeconds = new bignumber_js_1.default(Math.round((Date.now() / 1000) + 315569520)).toString();\nexports.MAX_DIGITS_IN_UNSIGNED_256_INT = 78;\nexports.OPENSEA = 'OPENSEA';\nexports.LOOKSRARE = 'LOOKSRARE';\nexports.RARIBLE = 'RARIBLE';\nexports.EIP721 = 'EIP721';\nexports.EIP1155 = 'EIP1155';\nexports.orderStatuses = {\n    ADDED: 'ADDED',\n    FILLED: 'FILLED',\n    CANCELLED: 'CANCELLED',\n    EXPIRED: 'EXPIRED',\n    INVALID: 'INVALID',\n};\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeOpenSeaOrder = void 0;\nfunction hasNullValue(obj, ignore) {\n    for (var _i = 0, _a = Object.entries(obj); _i < _a.length; _i++) {\n        var _b = _a[_i], key = _b[0], value = _b[1];\n        if (value === null) {\n            if (ignore && ignore.includes(key)) {\n                continue;\n            }\n            console.error(\"\".concat(key, \" is null\"));\n            return true;\n        }\n    }\n    return false;\n}\nvar serializeOpenSeaOrder = function (_a) {\n    var raw = _a.raw;\n    if (hasNullValue(raw, ['taker'])) {\n        throw new Error('Order is not valid');\n    }\n    return {\n        cancelled: raw.cancelled,\n        clientSignature: raw.client_signature,\n        closingDate: raw.closing_date,\n        createdDate: raw.created_date,\n        currentPrice: raw.current_price,\n        expirationTime: raw.expiration_time,\n        finalized: raw.finalized,\n        listingTime: raw.listing_time,\n        maker: raw.maker,\n        makerAssetBundle: raw.maker_asset_bundle,\n        makerFees: raw.maker_fees,\n        markedInvalid: raw.maker_fees,\n        orderHash: raw.order_hash,\n        orderType: raw.order_type,\n        protocolAddress: raw.protocol_address,\n        protocolData: raw.protocol_data,\n        side: raw.side,\n        taker: raw.taker,\n        takerAssetBundle: raw.taker_asset_bundle,\n        takerFees: raw.taker_fees,\n    };\n};\nexports.serializeOpenSeaOrder = serializeOpenSeaOrder;\n//# sourceMappingURL=serializeOpenSeaOrder.js.map","import { useParams } from 'react-router-dom';\nimport Nifty from 'nifty-protocol';\nimport { useContext, useEffect, useState } from 'react';\nimport { Web3Context } from '../web3';\n\nlet nifty;\n\nconst AssetToken = () => {\n  const { contractAddress, chainId, nftId } = useParams();\n  const { web3 } = useContext(Web3Context);\n\n  const [nft, setNft] = useState({});\n  const [nftData, setNftData] = useState({});\n  const [userAvailableMethods, setUserAvailableMethods] = useState(null);\n  const [paymentMethods, setPaymentMethods] = useState(null);\n\n  useEffect(() => {\n    nifty = new Nifty({ key: 'test', env: Nifty.envs.TESTNET });\n\n    nifty.getNFT(contractAddress, nftId, chainId)\n      .then((res) => {\n        setNft(res);\n        nifty.getNFTData(res)\n          .then((nftRes) => {\n            setNftData(nftRes);\n          });\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!userAvailableMethods) {\n      if (web3 && nftData) {\n        nifty.initWallet(Nifty.networkTypes.EVM, web3);\n        nifty.getUserAvailableMethods(nftData.listings, nft).then((res) => {\n          setUserAvailableMethods(res);\n\n          //  if user is owner of the NFT\n          if (res.canSell) {\n            const availableMethodsRes = nifty.getAvailablePaymentMethods(chainId);\n            setPaymentMethods(availableMethodsRes);\n          }\n        })\n          .catch((e) => {\n            console.log('e', e);\n          });\n      }\n    }\n  }, [web3, nftData.listings]);\n\n  const buy = async (nftToBuy, isExternalOrder) => {\n    nifty.initWallet(Nifty.networkTypes.EVM, web3);\n    nifty.setStatusListener((status) => console.log(status));\n    nifty.addListener((tnxHash) => console.log('tnxHash', tnxHash), 'tnxHash');\n    nifty.addListener(() => console.log('TransactionConfirmed'), 'TransactionConfirmed');\n\n    // external orders can be looksrare / opensea / rarible\n    const orderId = isExternalOrder ? nftToBuy.externalOrderId : nftToBuy.orderId;\n    const listingRes = await nifty.getListing(orderId, isExternalOrder);\n\n    try {\n      const res = await nifty.buy(listingRes, isExternalOrder);\n      console.log('res', res);\n    } catch (e) {\n      console.error('e', e);\n    }\n  };\n\n  const list = async (e, nftToSell) => {\n    e.preventDefault();\n\n    nifty.initWallet(Nifty.networkTypes.EVM, web3);\n    nifty.setStatusListener((status) => console.log(status));\n    nifty.addListener(() => console.log('signature'), 'signature');\n\n    const expirationTime = 86400; // in 1 day\n\n    try {\n      const res = await nifty.list(\n        nftToSell,\n        e.target.price.value,\n        expirationTime,\n        e.target.paymentMethod.value,\n      );\n\n      console.log('res', res);\n    } catch (e) {\n      console.error('e', e);\n    }\n  };\n\n  const offer = async (e, nftToSell) => {\n    e.preventDefault();\n\n    nifty.initWallet(Nifty.networkTypes.EVM, web3);\n    nifty.setStatusListener((status) => console.log(status));\n\n    const expirationTime = 86400; // in 1 day\n\n    try {\n      nifty.offer(nftToSell, e.target.price.value, expirationTime);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const cancelOrder = async (nftToCancel) => {\n    nifty.initWallet(Nifty.networkTypes.EVM, web3);\n    nifty.setStatusListener((status) => console.log(status));\n\n    const listingRes = await nifty.getListing(nftToCancel.orderId);\n\n    try {\n      const res = await nifty.cancelOrder(listingRes);\n      console.log('res', res);\n    } catch (e) {\n      console.error('e', e);\n    }\n  };\n\n  if (!nft) return <></>;\n\n  return (\n    <div>\n      <img src={nft.preview} alt={nft.name} style={{ maxWidth: '300px', maxHeight: '300px' }} />\n      <h1>{nft.contractName}</h1>\n      <h2>{nft.name}</h2>\n\n      {\n        nft.price && (\n          <h3>\n            Price:\n            {nft.price}\n          </h3>\n        )\n      }\n\n      {\n        nft.externalOrderPrice && (\n          <h3>\n            External Order Price:\n            {nft.externalOrderPrice}\n          </h3>\n        )\n      }\n\n      <h5>\n        Description:\n        {nft.description}\n      </h5>\n\n      <div>\n        {userAvailableMethods?.canSell\n          && (\n            <form onSubmit={(e) => { list(e, nft); }}>\n              <input\n                name=\"price\"\n                placeholder=\"price\"\n                style={{ height: '30px', width: '200px', marginRight: '10px' }}\n              />\n\n              {\n                paymentMethods && (\n                  <select\n                    defaultValue={paymentMethods[0].value}\n                    name=\"paymentMethod\"\n                    style={{ height: '30px', width: '200px', marginRight: '10px' }}\n                  >\n                    {paymentMethods.map((option) => (\n                      <option key={option.address} value={option.address}>{option.value}</option>\n                    ))}\n                  </select>\n                )\n              }\n              <button type=\"submit\">List</button>\n            </form>\n          )}\n        {\n          userAvailableMethods?.canOffer\n          && (\n            <form onSubmit={(e) => { offer(e, nft); }}>\n              <input\n                name=\"price\"\n                placeholder=\"price\"\n                style={{ height: '30px', width: '200px', marginRight: '10px' }}\n              />\n              <button type=\"submit\">offer</button>\n            </form>\n\n          )\n        }\n        {userAvailableMethods?.canBuy && <button onClick={() => buy(nft, false)} type=\"button\">Buy</button>}\n        {userAvailableMethods?.canCancel && <button onClick={() => cancelOrder(nft)} type=\"button\">Cancel Order</button>}\n        {!!nft.externalOrderPrice && <button onClick={() => buy(nft, true)} type=\"button\">External Buy</button>}\n      </div>\n\n      <div>\n        {!!nft.attributes?.length && (\n          <>\n            <h2>Attributes:</h2>\n            {\n              nft.attributes.map((attribute) => (\n                <div key={`${attribute.trait_type}_${attribute.value}`}>\n                  {attribute.trait_type}\n                  :\n                  {attribute.value}\n                </div>\n              ))\n            }\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AssetToken;\n","export const Web3Reducer = (state, action) => {\n    switch (action.type) {\n      case \"SET_WALLET\":\n        return {\n          ...state,\n          wallet: action.payload,\n        };\n      case \"SET_PROVIDER\":\n        return {\n          ...state,\n          provider: action.payload,\n        };\n      case \"SET_WEB3\":\n        return {\n          ...state,\n          web3: action.payload,\n        };\n      default:\n        return state;\n    }\n  };","import {\n  createContext, useCallback, useReducer, useEffect,\n} from 'react';\nimport Web3 from 'web3';\nimport Web3Modal from 'web3modal';\n\nimport { Web3Reducer } from './reducer';\n\nconst initialState = {\n  loading : false,\n  wallet  : null,\n  provider: null,\n  web3    : null,\n};\n\nconst providerOptions = {\n  cacheProvider: true, // optional\n};\n\nconst web3Modal = new Web3Modal({\n  providerOptions,\n});\n\nexport const Web3Context = createContext(initialState);\n\nexport const Web3Provider = ({ children }) => {\n  const [state, dispatch] = useReducer(Web3Reducer, initialState);\n\n  const setWallet = (wallet) => {\n    dispatch({\n      type   : 'SET_WALLET',\n      payload: wallet,\n    });\n  };\n\n  const setProvider = (provider) => {\n    dispatch({\n      type   : 'SET_PROVIDER',\n      payload: provider,\n    });\n  };\n\n  const setWeb3 = (web3) => {\n    dispatch({\n      type   : 'SET_WEB3',\n      payload: web3,\n    });\n  };\n\n  const logout = () => {\n    const { web3, provider } = state;\n    if (provider.close) {\n      provider.close();\n    }\n    if (web3 && web3.currentProvider && web3.currentProvider.close) {\n      web3.currentProvider.close();\n    }\n    setWallet(null);\n    setProvider(null);\n    setWeb3(null);\n  };\n\n  const initWeb3 = (provider) => {\n    const web3 = new Web3(provider);\n\n    web3.eth.extend({\n      methods: [\n        {\n          name           : 'chainId',\n          call           : 'eth_chainId',\n          outputFormatter: web3.utils.hexToNumber,\n        },\n      ],\n    });\n\n    return web3;\n  };\n\n  const subscribeProvider = async (data, web3Modal, web3, provider) => {\n    if (!provider.on) {\n      return;\n    }\n    provider.on('close', async () => {\n      logout();\n    });\n    provider.on('accountsChanged', async (accounts) => {\n      const { wallet } = state;\n      if (!accounts[0]) {\n        logout();\n      } else {\n        const address = accounts[0].toLowerCase();\n        const balance = await web3.eth.getBalance(address);\n\n        setWallet({ ...wallet, address, balance });\n      }\n    });\n    provider.on('chainChanged', async (chainId) => {\n      const { wallet } = state;\n      const newChainId = await web3.eth.chainId();\n      const balance = await web3.eth.getBalance(wallet.data.address);\n      setWallet({\n        ...wallet, chainId: newChainId, balance,\n      });\n    });\n  };\n\n  const connectWeb3 = useCallback(async () => {\n    await connect();\n  }, []);\n\n  const connect = async () => {\n    try {\n      const provider = await web3Modal.connect();\n      setProvider(provider);\n\n      const web3 = initWeb3(provider);\n\n      setWeb3(web3);\n\n      const accounts = await web3.eth.getAccounts();\n\n      const address = accounts[0].toLowerCase();\n\n      const chainId = await web3.eth.chainId();\n\n      const balance = await web3.eth.getBalance(address);\n\n      const data = { address, chainId, balance };\n\n      setWallet(data);\n\n      subscribeProvider(data, web3Modal, web3, provider);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      connect();\n    }\n  }, []);\n\n  return (\n    <Web3Context.Provider\n      value={{\n        ...state,\n        connectWeb3,\n        logout,\n      }}\n    >\n      {children}\n    </Web3Context.Provider>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport Nifty from 'nifty-protocol';\n\nconst Token = ({\n  contract, name, thumb, price, chainId, tokenID,\n}) => {\n  const chain = Nifty.utils.findChainById(chainId);\n  return (\n    <div\n      className=\"item\"\n      style={{\n        border: '1px solid', padding: '10px', margin: '10px', alignItems: 'center',\n      }}\n    >\n      <Link to={`/token/${chainId}/${contract.address}/${tokenID}`} style={{ color: 'black' }}>\n        <div style={{\n          width         : '200px',\n          height        : '200px',\n          display       : 'flex',\n          justifyContent: 'center',\n          alignItems    : 'center',\n        }}\n        >\n          <img src={thumb} alt=\"\" style={{ maxWidth: '200px', maxHeight: '200px' }} />\n        </div>\n        <h3 style={{\n          textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden', maxWidth: '200px',\n        }}\n        >\n          {contract.name}\n        </h3>\n        <h5 style={{\n          textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden', maxWidth: '200px',\n        }}\n        >\n          {name}\n        </h5>\n        <p>{price}</p>\n        <p>{chain.name}</p>\n      </Link>\n    </div>\n  );\n};\nexport default Token;\n","import { useContext, useEffect, useState } from 'react';\nimport Nifty from 'nifty-protocol';\nimport { Web3Context } from '../web3';\nimport NftPreview from './NftPreview';\n\nconst shortenAddress = (address) => address && `${address.substring(0, 5)}...${address.substring(address.length - 4, address.length)}`;\nlet nifty;\n\nconst chains = [\n  { chainId: '', name: 'All' },\n  { chainId: '1', name: 'Ethereum' },\n  { chainId: '137', name: 'Polygon' },\n  { chainId: '56', name: 'BNB' },\n  { chainId: '43114', name: 'Avalanche' },\n  { chainId: '1285', name: 'Moonriver' },\n  { chainId: '4', name: 'Rinkeby' },\n];\n\nconst sortOptions = [\n  { value: 'listed_desc', label: 'Recently Listed' },\n  { value: 'created_desc', label: 'Recently Minted' },\n  { value: 'sold_desc', label: 'Recently Sold' },\n  { value: 'price_asc', label: 'Price (Lowest to highest)' },\n  { value: 'price_desc', label: 'Price (Highest to lowest)' },\n  { value: 'last_sell_desc', label: 'Highest Last Sale' },\n];\n\nconst Marketplace = () => {\n  const queryParams = new URLSearchParams(window.location.search);\n  const [nfts, setNfts] = useState([]);\n  const [isChainIdRequired, setIsChainIdRequired] = useState(false);\n\n  const {\n    provider,\n    logout,\n    web3,\n    wallet,\n    connectWeb3,\n  } = useContext(Web3Context);\n\n  useEffect(() => {\n    const options = {\n      sort           : queryParams.get('sort') || 'listed_desc',\n      contractAddress: queryParams.get('contractAddress'),\n    };\n\n    if (queryParams.get('userAddress')) {\n      options.address = queryParams.get('userAddress').toLowerCase();\n    }\n    if (queryParams.get('chainId')) {\n      options.connectedChainId = queryParams.get('chainId');\n    }\n    if (queryParams.get('chain')) {\n      options.chains = [queryParams.get('chain')];\n    }\n    if (queryParams.get('search')) {\n      options.search = queryParams.get('search');\n    }\n    if (queryParams.get('limit')) {\n      options.limit = queryParams.get('limit');\n    }\n    if (queryParams.get('skip')) {\n      options.skip = queryParams.get('skip');\n    }\n\n    nifty = new Nifty({ key: 'test', env: Nifty.envs.TESTNET });\n\n    nifty.getNFTs(options)\n      .then((res) => setNfts(res))\n      .catch((e) => {\n        console.log('e', e);\n      });\n  }, []);\n\n  return (\n    <div>\n      <header>\n        {wallet ? shortenAddress(wallet.address)\n          : (\n            <button type=\"button\" onClick={connectWeb3}>\n              Connect to MetaMask\n            </button>\n          )}\n      </header>\n\n      <div>\n        <div style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\n          <form name=\"marketplace\" id=\"marketplace\">\n            <select\n              id=\"chains\"\n              name=\"chain\"\n              form=\"marketplace\"\n              defaultValue={queryParams.get('chain') || 'All'}\n              style={{ height: '30px', width: '200px', marginRight: '10px' }}\n            >\n              {chains.map((chain) => (\n                <option key={chain.chainId} value={chain.chainId}>{chain.name}</option>\n              ))}\n            </select>\n\n            <select\n              id=\"sort\"\n              name=\"sort\"\n              form=\"marketplace\"\n              defaultValue={queryParams.get('sort') || 'listed_desc'}\n              style={{ height: '30px', width: '200px', marginRight: '10px' }}\n            >\n              {sortOptions.map((option) => (\n                <option key={option.value} value={option.value}>{option.label}</option>\n              ))}\n            </select>\n\n            <input\n              id=\"search\"\n              name=\"search\"\n              placeholder=\"Search\"\n              defaultValue={queryParams.get('search')}\n              form=\"marketplace\"\n              style={{ height: '30px', width: '200px', marginRight: '10px' }}\n            />\n\n            <input\n              id=\"userAddress\"\n              name=\"userAddress\"\n              placeholder=\"User Address\"\n              defaultValue={queryParams.get('userAddress')}\n              form=\"marketplace\"\n              onChange={(e) => setIsChainIdRequired(!!e.target.value)}\n              style={{ height: '30px', width: '200px', marginRight: '10px' }}\n            />\n\n            <input\n              id=\"contractAddress\"\n              name=\"contractAddress\"\n              placeholder=\"Contract Address\"\n              defaultValue={queryParams.get('contractAddress')}\n              form=\"marketplace\"\n              onChange={(e) => setIsChainIdRequired(!!e.target.value)}\n              style={{ height: '30px', width: '200px', marginRight: '10px' }}\n            />\n            <input\n              id=\"limit\"\n              name=\"limit\"\n              placeholder=\"limit (min 30 max 100)\"\n              defaultValue={queryParams.get('limit')}\n              form=\"marketplace\"\n              style={{ height: '30px', width: '200px', marginRight: '10px' }}\n            />\n            <input\n              id=\"skip\"\n              name=\"skip\"\n              placeholder=\"skip\"\n              defaultValue={queryParams.get('skip')}\n              form=\"marketplace\"\n              style={{ height: '30px', width: '200px', marginRight: '10px' }}\n            />\n\n            {\n            (isChainIdRequired || queryParams.get('chainId')) && (\n            <input\n              id=\"chainId\"\n              name=\"chainId\"\n              required={isChainIdRequired}\n              defaultValue={queryParams.get('chainId')}\n              placeholder=\"chainId\"\n              form=\"marketplace\"\n              style={{ height: '30px', width: '200px', marginRight: '10px' }}\n            />\n            )\n            }\n            <button type=\"submit\">submit</button>\n          </form>\n        </div>\n\n        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n          {nfts.map((nft) => (\n            <NftPreview\n              key={nft.id}\n              {...nft}\n            />\n          ))}\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Marketplace;\n","import './style.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  HashRouter,\n  Route,\n} from 'react-router-dom';\nimport Marketplace from './components/Marketplace';\nimport AssetToken from './components/AssetToken';\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route path=\"/user/:chainId/:userAddress\">\n        <Marketplace />\n      </Route>\n      <Route path=\"/token/:chainId/:contractAddress/:nftId\">\n        <AssetToken />\n      </Route>\n      <Route path=\"/collection/:chainId/:contractAddress\">\n        <Marketplace />\n      </Route>\n      <Route path=\"/\">\n        <Marketplace />\n      </Route>\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { Web3Provider } from './web3';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Web3Provider>\n      <App />\n    </Web3Provider>\n  </React.StrictMode>,\n);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar addresses = {\n    1: {\n        NativeERC20: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        ERC20Proxy: '0x2559Be60A7040D645D263cA54c936320f90be74b',\n        ERC721Proxy: '0x295f911ccb8C771593375a4e8969A124bad725d8',\n        ERC1155Proxy: '0xf1899184bF3d26c4Db243C3B803501FC3E6cb388',\n        Forwarder: '0x833b94aFa97B7E763a86A3E83dcaf58603857371',\n        Exchange: '0x3AF5D58120D106A1d97Dd9E90f18F5181D2360ee',\n        DevUtils: '0xA9F9aDD9Ce680611ab3D7d2b5419EeFa29388781',\n        NFTrade721: '0xcEcC2d4E3E6590b9cb9f662f62171f441cbCa40C',\n        Collections: '0x091746ba9fed9936ac0b080e7a735b41239b240b',\n        RoyaltiesManager: '0x7E65237E76E0c290b544Be42C0fb88d4950bB666',\n    },\n    56: {\n        NativeERC20: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        ERC20Proxy: '0xE05D2BAA855C3dBA7b4762D2f02E9012Fb5F3867',\n        ERC721Proxy: '0x2559Be60A7040D645D263cA54c936320f90be74b',\n        ERC1155Proxy: '0x295f911ccb8C771593375a4e8969A124bad725d8',\n        Forwarder: '0xc28F1550160478a7FB3b085F25d4b179E08E649a',\n        Exchange: '0xcFB6Ee27d82beb1B0f3aD501B968F01CD7Cc5961',\n        DevUtils: '0x727B32e57EC4a751507d1aB745404cbAe480deB6',\n        NFTrade721: '0xcEcC2d4E3E6590b9cb9f662f62171f441cbCa40C',\n        Collections: '0x0f354194014300FdBbcFDdEBF4B7ca1819454D13',\n        RoyaltiesManager: '0xCbB74218c5C12e482735001739Db4FAe44F9af49',\n        GreenPay: '0x0B5A3d2c6999a7193B42deEc32AB4AFBb9A9e70B',\n    },\n    43114: {\n        NativeERC20: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n        ERC20Proxy: '0xE05D2BAA855C3dBA7b4762D2f02E9012Fb5F3867',\n        ERC721Proxy: '0x2559Be60A7040D645D263cA54c936320f90be74b',\n        ERC1155Proxy: '0x295f911ccb8C771593375a4e8969A124bad725d8',\n        Forwarder: '0xc28F1550160478a7FB3b085F25d4b179E08E649a',\n        Exchange: '0xcFB6Ee27d82beb1B0f3aD501B968F01CD7Cc5961',\n        DevUtils: '0x727B32e57EC4a751507d1aB745404cbAe480deB6',\n        NFTrade721: '0x71c82Fdbbdb6fb641f680087DA5aBEFFDDfE66a3',\n        Collections: '0x5F67aBe0A2A673536E5A57af8e00b28f289f419E',\n        RoyaltiesManager: '0x0190052a36373eCdCd7BB4BDD003D751F60D00BE',\n    },\n    137: {\n        NativeERC20: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n        ERC20Proxy: '0xE05D2BAA855C3dBA7b4762D2f02E9012Fb5F3867',\n        ERC721Proxy: '0x2559Be60A7040D645D263cA54c936320f90be74b',\n        ERC1155Proxy: '0x295f911ccb8C771593375a4e8969A124bad725d8',\n        Forwarder: '0xc28F1550160478a7FB3b085F25d4b179E08E649a',\n        Exchange: '0xcFB6Ee27d82beb1B0f3aD501B968F01CD7Cc5961',\n        DevUtils: '0x727B32e57EC4a751507d1aB745404cbAe480deB6',\n        NFTrade721: '0x6418d019aec4409E4830bc5C063B180d976a609F',\n        Collections: '0x535D6657A9226c84ed341E38a20E0b756418C474',\n        RoyaltiesManager: '0x96A5429655eddBB2b581cc4F582776813c6895B4',\n    },\n    1285: {\n        NativeERC20: '0x98878B06940aE243284CA214f92Bb71a2b032B8A',\n        ERC20Proxy: '0x5f67abe0a2a673536e5a57af8e00b28f289f419e',\n        ERC721Proxy: '0x6a8b4a611c46bc3ee5ec451af8807433dcde9855',\n        ERC1155Proxy: '0xac7F0A410B08D3f0B134C7f48F09863915770FB5',\n        Forwarder: '0x52A5B179C9beEcBFeB96bA60F618F6691E57eEc2',\n        Exchange: '0x2F66A3739ef7b56fDCa0FC7619aAA18f390c96ad',\n        DevUtils: '0x86B39D9a45bEE744707E34312A1c2478586BcA93',\n        Collections: '0xcEcC2d4E3E6590b9cb9f662f62171f441cbCa40C',\n        RoyaltiesManager: '0x96A5429655eddBB2b581cc4F582776813c6895B4',\n    },\n    1284: {\n        NativeERC20: '0xAcc15dC74880C9944775448304B263D191c6077F',\n        ERC20Proxy: '0xE05D2BAA855C3dBA7b4762D2f02E9012Fb5F3867',\n        ERC721Proxy: '0x2559Be60A7040D645D263cA54c936320f90be74b',\n        ERC1155Proxy: '0x295f911ccb8C771593375a4e8969A124bad725d8',\n        Forwarder: '0x40fcaa10149821e3522746381cF70468FbA4Db41',\n        Exchange: '0xcFB6Ee27d82beb1B0f3aD501B968F01CD7Cc5961',\n        DevUtils: '0xA9F9aDD9Ce680611ab3D7d2b5419EeFa29388781',\n        Collections: '0x432532427A6131F8189443A9F175FD23f35a5899',\n        RoyaltiesManager: '0x10555128238Aaa4762F85B791645843fBFdBbF97',\n    },\n    1313161554: {\n        NativeERC20: '0x8bec47865ade3b172a928df8f990bc7f2a3b9f79',\n        ERC20Proxy: '0xE05D2BAA855C3dBA7b4762D2f02E9012Fb5F3867',\n        ERC721Proxy: '0x2559Be60A7040D645D263cA54c936320f90be74b',\n        ERC1155Proxy: '0x295f911ccb8C771593375a4e8969A124bad725d8',\n        Forwarder: false,\n        Exchange: '0x3AF5D58120D106A1d97Dd9E90f18F5181D2360ee',\n        DevUtils: '0x432532427A6131F8189443A9F175FD23f35a5899',\n        Collections: '0xac7F0A410B08D3f0B134C7f48F09863915770FB5',\n        RoyaltiesManager: '0x10555128238Aaa4762F85B791645843fBFdBbF97',\n    },\n    // testnets\n    4: {\n        NativeERC20: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\n        ERC20Proxy: '0x98Bd7Fda2446cC2A41754F066b64AB2CE1B82A97',\n        ERC721Proxy: '0xF2E0FB90Ed39eA0B5279F1CD3db454f5f4D45bcc',\n        ERC1155Proxy: '0xC6c9D98eA0DFA65fa47Bf694Fd0A370Be9c4dA9C',\n        Forwarder: '0x621B3C076FD38CEc993Da6e4F71e93f57e77FEe5',\n        Exchange: '0x9A274BfD093282757ADE4e8115e5F74fBa2E85Bc',\n        DevUtils: '0x5C6D0BB47863D1B5Cf5C1A8c311Ea61100FEE08B',\n        NFTrade721: '0x9850711Ce724125F0a4730977D4AF16DDBD845D4',\n        Collections: '0x8cc87c4c5EA3f95764AF650448656B720f001Aa4',\n        RoyaltiesManager: '0x508c3aCfE17b97BB3059858794b6a18C66D6A8a8',\n    },\n    43113: {\n        NativeERC20: '0xd00ae08403b9bbb9124bb305c09058e32c39a48c',\n        ERC20Proxy: '0x205a244524F1eDb947B782444Bf87d361F74E612',\n        ERC721Proxy: '0x950d3e3975eDcdaBD41c601c3Ac9279302350824',\n        ERC1155Proxy: '0x10bC4c31a668c1EDa9d4B1302912e594015D519F',\n        Forwarder: '0xAA3d3290fA216369Cd89431109257bb9Ddf40dAe',\n        Exchange: '0xA29b1e56Dc2062C2A8C950ac9EFfb8ca2f378A12',\n        DevUtils: '0xb6b68C822a23A7C44F3Fd56DD2f300da4b372603',\n        Collections: '0x638f984D71C0BB7ebef87e950AD42A30DD46ac41',\n        RoyaltiesManager: '0x0435Af303f7205aB1FF5b75309ae0C712ec56965',\n    },\n};\nexports.default = addresses;\n//# sourceMappingURL=addresses.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar axios_1 = __importDefault(require(\"axios\"));\nvar HttpRequest = function (options) {\n    if (options === void 0) { options = {}; }\n    return (0, axios_1.default)(options);\n};\nexports.default = HttpRequest;\n//# sourceMappingURL=HttpRequest.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nvar eventEmitter = new eventemitter3_1.default();\nvar Emitter = {\n    on: function (event, fn) { return eventEmitter.on(event, fn); },\n    once: function (event, fn) { return eventEmitter.once(event, fn); },\n    off: function (event, fn) { return eventEmitter.off(event, fn); },\n    emit: function (event, payload) { return eventEmitter.emit(event, payload); },\n};\nObject.freeze(Emitter);\nexports.default = Emitter;\n//# sourceMappingURL=emitter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transferTransactionSupportedChainTypes = exports.tradeTransactionSupportedChainTypes = exports.offerTransactionSupportedChainTypes = exports.SOLANA = exports.IMMUTABLEX = exports.EVM = void 0;\n// chain types\nexports.EVM = 'evm';\nexports.IMMUTABLEX = 'immutablex';\nexports.SOLANA = 'solana';\nexports.offerTransactionSupportedChainTypes = [exports.EVM, exports.SOLANA];\nexports.tradeTransactionSupportedChainTypes = [exports.EVM, exports.SOLANA];\nexports.transferTransactionSupportedChainTypes = [exports.EVM, exports.SOLANA];\nvar productionChains = [\n    {\n        name: 'Ethereum',\n        chainId: 1,\n        shortName: 'eth',\n        chain: 'ETH',\n        chainIcon: '/img/chains/walletETH.svg',\n        chainIconWrapper: '/img/chains/wrappedWalletETH.svg',\n        network: 'mainnet',\n        networkId: 1,\n        chainType: exports.EVM,\n        nativeCurrency: {\n            name: 'Ether',\n            symbol: 'ETH',\n            wrapped: 'WETH',\n            moonpayCurrenctCode: 'ETH',\n            decimals: 18,\n            icon: '/img/chains/currencyEth.svg',\n        },\n        explorer: 'https://etherscan.io',\n    },\n    {\n        name: 'BNB',\n        chainId: 56,\n        shortName: 'bsc',\n        chain: 'BNB',\n        chainIcon: '/img/chains/walletBNB.svg',\n        chainIconWrapper: '/img/chains/wrappedWalletBNB.svg',\n        network: 'mainnet',\n        networkId: 56,\n        greenPayFee: 0.002,\n        chainType: exports.EVM,\n        nativeCurrency: {\n            name: 'BNB Native Token',\n            symbol: 'BNB',\n            wrapped: 'WBNB',\n            moonpayCurrenctCode: 'BNB_BSC',\n            decimals: 18,\n            icon: '/img/chains/currencyBnb.svg',\n        },\n        explorer: 'https://bscscan.com',\n    },\n    {\n        name: 'Polygon',\n        chainId: 137,\n        shortName: 'polygon',\n        chain: 'MATIC',\n        chainIcon: '/img/chains/walletMatic.svg',\n        chainIconWrapper: '/img/chains/wrappedWalletMatic.svg',\n        network: 'mainnet',\n        networkId: 137,\n        hasGasless: true,\n        chainType: exports.EVM,\n        nativeCurrency: {\n            name: 'Matic',\n            symbol: 'MATIC',\n            wrapped: 'WMATIC',\n            moonpayCurrenctCode: 'MATIC_POLYGON',\n            decimals: 18,\n            icon: '/img/chains/currencyPolygon.svg',\n        },\n        explorer: 'https://polygonscan.com',\n    },\n    {\n        name: 'Avalanche',\n        chainId: 43114,\n        shortName: 'avalanche',\n        chain: 'AVAX',\n        chainIcon: '/img/chains/walletAvax.svg',\n        chainIconWrapper: '/img/chains/wrappedWalletAvax.svg',\n        network: 'mainnet',\n        networkId: 1,\n        chainType: exports.EVM,\n        nativeCurrency: {\n            name: 'Avalanche',\n            symbol: 'AVAX',\n            wrapped: 'WAVAX',\n            moonpayCurrenctCode: 'AVAX_CCHAIN',\n            decimals: 18,\n            icon: '/img/chains/currencyAvax.svg',\n        },\n        explorer: 'https://snowtrace.io',\n    },\n    {\n        name: 'Moonriver',\n        chainId: 1285,\n        shortName: 'moonriver',\n        chain: 'MOVR',\n        chainIcon: '/img/chains/walletMvr.svg',\n        chainIconWrapper: '/img/chains/walletMvr.svg',\n        network: 'mainnet',\n        networkId: 1285,\n        chainType: exports.EVM,\n        nativeCurrency: {\n            name: 'Moonriver',\n            symbol: 'MOVR',\n            wrapped: 'WMOVR',\n            decimals: 18,\n            icon: '/img/chains/currencyMovr.svg',\n        },\n        explorer: 'https://moonriver.moonscan.io',\n    },\n    // {\n    //   name             : 'Solana',\n    //   chainId          : 1995,\n    //   shortName        : 'solana',\n    //   chain            : 'solana',\n    //   chainIcon       : 'https://via.placeholder.com/150',\n    //   chainIconWrapper: 'https://via.placeholder.com/150',\n    //   network          : 'mainnet',\n    //   networkId        : 1995,\n    //   chainType        : SOLANA,\n    //   nativeCurrency   : {\n    //     name    : 'SOL',\n    //     symbol  : 'SOL',\n    //     wrapped : '',\n    //     decimals: 10,\n    //     icon    : '/currencySolana.svg',\n    //   },\n    //   explorer: '',\n    // },\n    // {\n    //   name             : 'ImmutableX',\n    //   chainId          : 1996,\n    //   shortName        : 'immutablex',\n    //   chain            : 'ImmutableX',\n    //   chainIcon       : '/img/chains/walletImx.svg',\n    //   chainIconWrapper: '/img/chains/walletImx.svg',\n    //   network          : 'mainnet',\n    //   networkId        : 1996,\n    //   chainType        : IMMUTABLEX,\n    //   nativeCurrency   : {\n    //     name    : 'IMX',\n    //     symbol  : 'IMX',\n    //     wrapped : '',\n    //     decimals: 18,\n    //     icon    : '/img/chains/currencyImx.svg',\n    //   },\n    //   explorer: 'https://immutascan.io',\n    // },\n    /* {\n      name             : 'Aurora',\n      chainId          : 1313161554,\n      shortName        : 'aurora',\n      chain            : 'AURORA',\n      chainIcon       : '/img/chains/walletAurora.svg',\n      chainIconWrapper: '/img/chains/walletAurora.svg',\n      network          : 'mainnet',\n      networkId        : 1313161554,\n      nativeDisabled   : true,\n      nativeCurrency   : {\n        name    : 'Aurora',\n        symbol  : 'AURORA',\n        wrapped : 'AURORA',\n        decimals: 18,\n        icon    : '/img/chains/currencyAurora.svg',\n      },\n      explorer: 'https://explorer.mainnet.aurora.dev',\n    }, */\n    {\n        name: 'Moonbeam',\n        chainId: 1284,\n        shortName: 'moonbeam',\n        chain: 'GLMR',\n        chainIcon: '/img/chains/walletGlmr.svg',\n        chainIconWrapper: '/img/chains/walletGlmr.svg',\n        network: 'mainnet',\n        networkId: 1284,\n        chainType: exports.EVM,\n        nativeCurrency: {\n            name: 'Moonbeam',\n            symbol: 'GLMR',\n            wrapped: 'WGLMR',\n            decimals: 18,\n            icon: '/img/chains/currencyGlmr.svg',\n        },\n        explorer: 'https://blockscout.moonbeam.network',\n    },\n    {\n        name: 'Rinkeby',\n        chainId: 4,\n        shortName: 'rin',\n        chain: 'ETH',\n        chainIcon: '/img/chains/walletETH.svg',\n        chainIconWrapper: '/img/chains/wrappedWalletETH.svg',\n        network: 'testnet',\n        networkId: 4,\n        chainType: exports.EVM,\n        nativeCurrency: {\n            name: 'Rinkeby Ether',\n            symbol: 'RIN',\n            wrapped: 'WRIN',\n            moonpayCurrenctCode: 'RINKETH',\n            decimals: 18,\n            icon: '/img/chains/currencyEth.svg',\n        },\n        explorer: 'https://rinkeby.etherscan.io',\n    },\n    {\n        name: 'Avalanche FUJI',\n        chainId: 43113,\n        shortName: 'fuji',\n        chain: 'FUJI',\n        chainIcon: '/img/chains/walletAvax.svg',\n        chainIconWrapper: '/img/chains/wrappedWalletAvax.svg',\n        network: 'testnet',\n        networkId: 43113,\n        chainType: exports.EVM,\n        nativeCurrency: {\n            name: 'Avalanche FUJI',\n            symbol: 'AVAX',\n            wrapped: 'WAVAX',\n            moonpayCurrenctCode: 'AVAX_FUJI_CCHAIN',\n            decimals: 18,\n            icon: '/img/chains/currencyAvax.svg',\n        },\n        explorer: 'https://testnet.snowtrace.io',\n    },\n];\n// eslint-disable-next-line no-nested-ternary\n// const chains = env.isProduction() ? productionChains : (\n//   env.isTestnets() ? testnetsChains : [...productionChains, ...testnetsChains]\n// );\nexports.default = productionChains;\n//# sourceMappingURL=chains.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidERC20 = void 0;\nvar currencies_1 = __importDefault(require(\"./currencies\"));\nvar isValidERC20 = function (ERC20Contract, chainId) { return (currencies_1.default.find(function (currency) { return currency.address.toLowerCase() === ERC20Contract.toLowerCase() && currency.chainId === chainId; })); };\nexports.isValidERC20 = isValidERC20;\n//# sourceMappingURL=isValidERC20.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = [\n    {\n        chainId: 1,\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        key: 'WETH',\n        value: 'Wrraped Ether',\n        defaultPaymentMethod: true,\n    },\n    {\n        chainId: 56,\n        address: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        key: 'WBNB',\n        value: 'Wrraped BNB',\n        defaultPaymentMethod: true,\n    },\n    {\n        chainId: 43114,\n        address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n        key: 'WAVAX',\n        value: 'Wrraped AVAX',\n        defaultPaymentMethod: true,\n    },\n    {\n        chainId: 137,\n        address: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270',\n        key: 'WMATIC',\n        value: 'Wrraped MATIC',\n        defaultPaymentMethod: true,\n    },\n    {\n        chainId: 1285,\n        address: '0x98878B06940aE243284CA214f92Bb71a2b032B8A',\n        key: 'WMOVR',\n        value: 'Wrraped MOVR',\n        defaultPaymentMethod: true,\n    },\n    {\n        chainId: 1284,\n        address: '0xAcc15dC74880C9944775448304B263D191c6077F',\n        key: 'WGLMR',\n        value: 'Wrraped GLMR',\n        defaultPaymentMethod: true,\n    },\n    // TESTNET\n    {\n        chainId: 4,\n        address: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\n        key: 'WRIN',\n        value: 'Wrraped RINKEBY',\n        defaultPaymentMethod: true,\n    },\n    {\n        chainId: 43113,\n        address: '0xd00ae08403b9bbb9124bb305c09058e32c39a48c',\n        key: 'WFUJI',\n        value: 'Wrraped FUJI',\n        defaultPaymentMethod: true,\n    },\n];\n//# sourceMappingURL=currencies.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar orders_1 = __importDefault(require(\"./orders\"));\nvar tokens_1 = __importDefault(require(\"./tokens\"));\nvar trades_1 = __importDefault(require(\"./trades\"));\nvar externalOrders_1 = __importDefault(require(\"./externalOrders\"));\nvar config_1 = __importDefault(require(\"../config\"));\nfunction default_1(env) {\n    var base = config_1.default.api[env];\n    if (!base) {\n        throw new Error('unknown env');\n    }\n    return {\n        externalOrders: (0, externalOrders_1.default)(base),\n        orders: (0, orders_1.default)(base),\n        tokens: (0, tokens_1.default)(base),\n        trades: (0, trades_1.default)(base),\n    };\n}\nexports.default = default_1;\n;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar HttpRequest_1 = __importDefault(require(\"../utils/HttpRequest\"));\nvar ENDPOINT = 'orders';\nfunction default_1(base) {\n    var URL = base + ENDPOINT;\n    return {\n        create: function (data) { return (0, HttpRequest_1.default)({ url: URL, method: 'post', data: data }); },\n        get: function (id) { return (0, HttpRequest_1.default)({ url: \"\".concat(URL, \"/\").concat(id) }); },\n        cancel: function (id) { return (0, HttpRequest_1.default)({ url: \"\".concat(URL, \"/\").concat(id, \"/cancel\"), method: 'put' }); },\n    };\n}\nexports.default = default_1;\n;\n//# sourceMappingURL=orders.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar HttpRequest_1 = __importDefault(require(\"../utils/HttpRequest\"));\nvar ENDPOINT = 'tokens';\nfunction default_1(base) {\n    var URL = base + ENDPOINT;\n    return {\n        get: function (contractAddress, tokenID, params) {\n            if (params === void 0) { params = {}; }\n            return (0, HttpRequest_1.default)({ url: \"\".concat(URL, \"/\").concat(contractAddress, \"/\").concat(tokenID), params: params });\n        },\n        refresh: function (id, params) {\n            if (params === void 0) { params = {}; }\n            return (0, HttpRequest_1.default)({ url: \"\".concat(URL, \"/\").concat(id, \"/refresh\"), params: params });\n        },\n        getOwner: function (params) {\n            if (params === void 0) { params = {}; }\n            return (0, HttpRequest_1.default)({ url: \"\".concat(URL, \"/owner\"), params: params });\n        },\n        getGraph: function (params) {\n            if (params === void 0) { params = {}; }\n            return (0, HttpRequest_1.default)({ url: \"\".concat(URL, \"/graph\"), params: params });\n        },\n        traits: function (id, params) {\n            if (params === void 0) { params = {}; }\n            return (0, HttpRequest_1.default)({ url: \"\".concat(URL, \"/\").concat(id, \"/traits\"), params: params });\n        },\n        getAll: function (params) {\n            if (params === void 0) { params = {}; }\n            return (0, HttpRequest_1.default)({ url: \"\".concat(URL), params: params });\n        },\n        report: function (data) { return (0, HttpRequest_1.default)({\n            url: \"\".concat(URL, \"/reports\"),\n            data: data,\n            method: 'post',\n        }); }\n    };\n}\nexports.default = default_1;\n;\n//# sourceMappingURL=tokens.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar HttpRequest_1 = __importDefault(require(\"../utils/HttpRequest\"));\nvar ENDPOINT = 'trades';\nfunction default_1(base) {\n    var URL = base + ENDPOINT;\n    return {\n        getAll: function () { return (0, HttpRequest_1.default)({ url: URL }); },\n        getStats: function (params) {\n            if (params === void 0) { params = {}; }\n            return (0, HttpRequest_1.default)({ url: \"\".concat(URL, \"/stats\"), params: params });\n        },\n        getGraph: function (params) {\n            if (params === void 0) { params = {}; }\n            return (0, HttpRequest_1.default)({\n                url: \"\".concat(URL, \"/graph\"),\n                params: params,\n            });\n        }\n    };\n}\nexports.default = default_1;\n;\n//# sourceMappingURL=trades.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar HttpRequest_1 = __importDefault(require(\"../utils/HttpRequest\"));\nvar ENDPOINT = 'external_orders';\nfunction default_1(base) {\n    var URL = base + ENDPOINT;\n    return {\n        get: function (id) { return (0, HttpRequest_1.default)({ url: \"\".concat(URL, \"/\").concat(id) }); },\n    };\n}\nexports.default = default_1;\n;\n//# sourceMappingURL=externalOrders.js.map","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./constants\");\nexports.default = {\n    api: (_a = {},\n        _a[constants_1.PROD] = 'https://api.nftrade.com/api/v1/',\n        _a[constants_1.TESTNET] = 'https://api-testnets.nftrade.com/api/v1/',\n        _a)\n};\n//# sourceMappingURL=config.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar contracts_1 = __importDefault(require(\"./contracts\"));\nvar order_1 = require(\"./order\");\nvar constants_1 = require(\"../constants\");\nvar signature_1 = __importDefault(require(\"../signature\"));\nvar addresses_1 = __importDefault(require(\"../addresses\"));\nvar isValidERC20_1 = require(\"../utils/isValidERC20\");\nvar emitter_1 = __importDefault(require(\"../utils/emitter\"));\nvar Transaction = /** @class */ (function () {\n    function Transaction(data) {\n        this.wallet = data.wallet;\n        this.address = data.address;\n        this.chainId = data.chainId;\n        this.contracts = new contracts_1.default(this.wallet, this.address, this.chainId);\n    }\n    Transaction.prototype.setStatusListener = function (listener) {\n        this.listener = listener;\n    };\n    Transaction.prototype.setStatus = function (status) {\n        var _this = this;\n        if (this.listener) {\n            setTimeout(function () { return _this.listener(status); }, 0);\n        }\n    };\n    /*\n       Royalties\n     */\n    Transaction.prototype.getRoyalties = function (collectionAddress, tokenId, price) {\n        var unit = new bignumber_js_1.default(10).pow(18);\n        var salePrice = unit.times(new bignumber_js_1.default(price));\n        return this.contracts.getRoyalties(collectionAddress, tokenId, salePrice.toString());\n    };\n    Transaction.prototype.buy = function (order) {\n        return __awaiter(this, void 0, void 0, function () {\n            var signedOrder, contractType, tokenAddress, txHash, nativeERC20Balance, proxyApprovedAllowance, ERC20Balance, allowance, itemPrice;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.setStatus(constants_1.CREATING);\n                        if (String(order.chainId) !== String(this.chainId)) {\n                            throw new Error(\"Please connect to \".concat(order.chainId));\n                        }\n                        signedOrder = (0, order_1.destructOrder)(order);\n                        this.setStatus(constants_1.APPROVING);\n                        contractType = order.tokens[0].contract.type;\n                        return [4 /*yield*/, this.contracts.decodeERC20Data(order.takerAssetData)];\n                    case 1:\n                        tokenAddress = (_a.sent()).tokenAddress;\n                        if (!(0, isValidERC20_1.isValidERC20)(tokenAddress, this.chainId)) {\n                            throw new Error(\"Invalid asset data\");\n                        }\n                        txHash = '';\n                        return [4 /*yield*/, this.contracts.balanceOfERC20(this.address, tokenAddress)];\n                    case 2:\n                        nativeERC20Balance = _a.sent();\n                        return [4 /*yield*/, this.contracts.ERC20Allowance(tokenAddress)];\n                    case 3:\n                        proxyApprovedAllowance = _a.sent();\n                        ERC20Balance = new bignumber_js_1.default(nativeERC20Balance);\n                        allowance = new bignumber_js_1.default(proxyApprovedAllowance);\n                        itemPrice = new bignumber_js_1.default(order.takerAssetAmount).plus(new bignumber_js_1.default(order.takerFee));\n                        if (!ERC20Balance.isGreaterThanOrEqualTo(itemPrice)) return [3 /*break*/, 7];\n                        if (!allowance.isLessThan(itemPrice)) return [3 /*break*/, 5];\n                        this.setStatus(constants_1.APPROVING);\n                        return [4 /*yield*/, this.contracts.ERC20Approve(tokenAddress)];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [4 /*yield*/, this.contracts.fillOrder(signedOrder)];\n                    case 6:\n                        txHash = _a.sent();\n                        return [3 /*break*/, 14];\n                    case 7:\n                        if (!(contractType === constants_1.EIP721 && addresses_1.default[this.chainId].NativeERC20 === tokenAddress)) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.contracts.marketBuyOrdersWithEth(signedOrder)];\n                    case 8:\n                        txHash = _a.sent();\n                        return [3 /*break*/, 14];\n                    case 9:\n                        if (!(contractType === constants_1.EIP1155 && addresses_1.default[this.chainId].NativeERC20 === tokenAddress)) return [3 /*break*/, 14];\n                        this.setStatus(constants_1.CONVERT);\n                        return [4 /*yield*/, this.contracts.convertToNativeERC20(order.takerAssetAmount - nativeERC20Balance)];\n                    case 10:\n                        _a.sent();\n                        this.setStatus(constants_1.APPROVING);\n                        if (!(Number(proxyApprovedAllowance) < Number(order.takerAssetAmount + order.takerFee))) return [3 /*break*/, 12];\n                        return [4 /*yield*/, this.contracts.ERC20Approve(tokenAddress)];\n                    case 11:\n                        _a.sent();\n                        _a.label = 12;\n                    case 12: return [4 /*yield*/, this.contracts.fillOrder(signedOrder)];\n                    case 13:\n                        txHash = _a.sent();\n                        _a.label = 14;\n                    case 14:\n                        this.setStatus(constants_1.APPROVED);\n                        return [2 /*return*/, __assign(__assign({}, order), { txHash: txHash })];\n                }\n            });\n        });\n    };\n    Transaction.prototype.list = function (_a) {\n        var contractAddress = _a.contractAddress, tokenID = _a.tokenID, contractType = _a.contractType, price = _a.price, exchangeAddress = _a.exchangeAddress, itemChainId = _a.itemChainId, expirationTime = _a.expirationTime, ERC20Address = _a.ERC20Address;\n        return __awaiter(this, void 0, void 0, function () {\n            var makerAssetData, takerAssetData, makerAssetAmount, unit, baseUnitAmount, takerAssetAmount, receiver, royaltyAmount, expirationTimeSeconds, e_1, order, signedOrder, orderHash;\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (String(itemChainId) !== String(this.chainId)) {\n                            throw new Error(\"Please connect to \".concat(itemChainId));\n                        }\n                        this.setStatus(constants_1.APPROVING);\n                        if (!(contractType === constants_1.EIP721)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.contracts.erc721ApproveForAll(contractAddress)];\n                    case 1:\n                        _c.sent();\n                        return [3 /*break*/, 4];\n                    case 2:\n                        if (!(contractType === constants_1.EIP1155)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.contracts.erc1155ApproveForAll(contractAddress)];\n                    case 3:\n                        _c.sent();\n                        _c.label = 4;\n                    case 4:\n                        this.setStatus(constants_1.SIGN);\n                        emitter_1.default.emit('signature', function () { });\n                        makerAssetData = '';\n                        if (!(contractType === constants_1.EIP721)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.contracts.encodeERC721AssetData(contractAddress, tokenID)];\n                    case 5:\n                        makerAssetData = _c.sent();\n                        return [3 /*break*/, 8];\n                    case 6:\n                        if (!(contractType === constants_1.EIP1155)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, this.contracts.encodeERC1155AssetData(contractAddress, tokenID, 1)];\n                    case 7:\n                        makerAssetData = _c.sent();\n                        _c.label = 8;\n                    case 8: return [4 /*yield*/, this.contracts.encodeERC20Data(ERC20Address)];\n                    case 9:\n                        takerAssetData = _c.sent();\n                        makerAssetAmount = new bignumber_js_1.default(1);\n                        unit = new bignumber_js_1.default(10).pow(18);\n                        baseUnitAmount = unit.times(new bignumber_js_1.default(price));\n                        takerAssetAmount = baseUnitAmount;\n                        receiver = constants_1.NULL_ADDRESS;\n                        royaltyAmount = 0;\n                        expirationTimeSeconds = new bignumber_js_1.default(Math.round(Date.now() / 1000 + expirationTime)).toString();\n                        _c.label = 10;\n                    case 10:\n                        _c.trys.push([10, 12, , 13]);\n                        return [4 /*yield*/, this.getRoyalties(contractAddress, tokenID, price)];\n                    case 11:\n                        (_b = _c.sent(), receiver = _b.receiver, royaltyAmount = _b.royaltyAmount);\n                        return [3 /*break*/, 13];\n                    case 12:\n                        e_1 = _c.sent();\n                        console.error(e_1);\n                        return [3 /*break*/, 13];\n                    case 13:\n                        takerAssetAmount = takerAssetAmount.minus(royaltyAmount);\n                        order = (0, order_1.createOrder)({\n                            chainId: this.chainId,\n                            makerAddress: this.address,\n                            takerFee: String(royaltyAmount),\n                            feeRecipientAddress: receiver,\n                            expirationTimeSeconds: expirationTimeSeconds,\n                            makerAssetAmount: makerAssetAmount,\n                            takerAssetAmount: takerAssetAmount,\n                            makerAssetData: makerAssetData,\n                            takerAssetData: takerAssetData,\n                        });\n                        return [4 /*yield*/, (0, signature_1.default)(this.wallet.provider.currentProvider, order, this.address, exchangeAddress)];\n                    case 14:\n                        signedOrder = _c.sent();\n                        return [4 /*yield*/, this.contracts.getOrderInfo(signedOrder)];\n                    case 15:\n                        orderHash = (_c.sent()).orderHash;\n                        return [2 /*return*/, __assign(__assign({}, signedOrder), { orderHash: orderHash })];\n                }\n            });\n        });\n    };\n    Transaction.prototype.offer = function (_a) {\n        var item = _a.item, price = _a.price, isFullConversion = _a.isFullConversion, expirationTime = _a.expirationTime, exchangeAddress = _a.exchangeAddress;\n        return __awaiter(this, void 0, void 0, function () {\n            var contractAddress, tokenID, contractType, userBalance, nativeERC20Balance, priceInWei, depositTxHash, minConversion, maxConversion, balanceConversion, conversion, gasPrice, gas, proxyApprovedAllowance, approveTxHash, takerAssetData, makerAssetData, takerAssetAmount, unit, baseUnitAmount, makerAssetAmount, receiver, royaltyAmount, expirationTimeSeconds, e_2, order, signedOrder, orderHash;\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        this.setStatus(constants_1.CREATING);\n                        contractAddress = item.contractAddress, tokenID = item.tokenID, contractType = item.contractType;\n                        if (String(item.chainId) !== String(item.chainId)) {\n                            throw new Error(\"Please connect to \".concat(item.chainId));\n                        }\n                        this.setStatus(constants_1.CHECKING_BALANCE);\n                        return [4 /*yield*/, this.wallet.getBalance(this.address)];\n                    case 1:\n                        userBalance = _c.sent();\n                        return [4 /*yield*/, this.contracts.balanceOfNativeERC20()];\n                    case 2:\n                        nativeERC20Balance = _c.sent();\n                        priceInWei = this.wallet.blockchainFormatDigit(price);\n                        minConversion = new bignumber_js_1.default(priceInWei).minus(nativeERC20Balance);\n                        maxConversion = new bignumber_js_1.default(priceInWei);\n                        balanceConversion = new bignumber_js_1.default(userBalance);\n                        conversion = new bignumber_js_1.default(0);\n                        if (!isFullConversion) return [3 /*break*/, 6];\n                        conversion = maxConversion;\n                        if (!conversion.isGreaterThan(balanceConversion)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.wallet.provider.eth.getGasPrice()];\n                    case 3:\n                        gasPrice = _c.sent();\n                        return [4 /*yield*/, this.contracts.deposit().estimateGas({ gasPrice: gasPrice })];\n                    case 4:\n                        gas = _c.sent();\n                        conversion = balanceConversion.minus(gas * gasPrice * 5);\n                        _c.label = 5;\n                    case 5: return [3 /*break*/, 7];\n                    case 6:\n                        conversion = minConversion;\n                        _c.label = 7;\n                    case 7:\n                        if (!(conversion > new bignumber_js_1.default(0))) return [3 /*break*/, 9];\n                        this.setStatus(constants_1.CONVERT);\n                        return [4 /*yield*/, this.contracts.convertToNativeERC20(conversion)];\n                    case 8:\n                        depositTxHash = _c.sent();\n                        _c.label = 9;\n                    case 9: return [4 /*yield*/, this.contracts.NativeERC20Allowance()];\n                    case 10:\n                        proxyApprovedAllowance = _c.sent();\n                        if (!(Number(proxyApprovedAllowance) < Number(priceInWei))) return [3 /*break*/, 12];\n                        this.setStatus(constants_1.APPROVING);\n                        return [4 /*yield*/, this.contracts.NativeERC20Approve()];\n                    case 11:\n                        approveTxHash = _c.sent();\n                        _c.label = 12;\n                    case 12:\n                        this.setStatus(constants_1.SIGN);\n                        emitter_1.default.emit('signature', function () { });\n                        takerAssetData = '';\n                        if (!(contractType === constants_1.EIP721)) return [3 /*break*/, 14];\n                        return [4 /*yield*/, this.contracts.encodeERC721AssetData(contractAddress, tokenID)];\n                    case 13:\n                        takerAssetData = _c.sent();\n                        return [3 /*break*/, 16];\n                    case 14:\n                        if (!(contractType === constants_1.EIP1155)) return [3 /*break*/, 16];\n                        return [4 /*yield*/, this.contracts.encodeERC1155AssetData(contractAddress, tokenID, 1)];\n                    case 15:\n                        takerAssetData = _c.sent();\n                        _c.label = 16;\n                    case 16: return [4 /*yield*/, this.contracts.encodeERC20AssetData()];\n                    case 17:\n                        makerAssetData = _c.sent();\n                        takerAssetAmount = new bignumber_js_1.default(1);\n                        unit = new bignumber_js_1.default(10).pow(18);\n                        baseUnitAmount = unit.times(new bignumber_js_1.default(price));\n                        makerAssetAmount = baseUnitAmount;\n                        receiver = constants_1.NULL_ADDRESS;\n                        royaltyAmount = 0;\n                        expirationTimeSeconds = new bignumber_js_1.default(Math.round(Date.now() / 1000 + expirationTime)).toString();\n                        _c.label = 18;\n                    case 18:\n                        _c.trys.push([18, 20, , 21]);\n                        return [4 /*yield*/, this.getRoyalties(contractAddress, tokenID, price)];\n                    case 19:\n                        (_b = _c.sent(), receiver = _b.receiver, royaltyAmount = _b.royaltyAmount);\n                        return [3 /*break*/, 21];\n                    case 20:\n                        e_2 = _c.sent();\n                        console.error(e_2);\n                        return [3 /*break*/, 21];\n                    case 21:\n                        makerAssetAmount = makerAssetAmount.minus(royaltyAmount);\n                        order = (0, order_1.createOrder)({\n                            chainId: this.chainId,\n                            makerAddress: this.address,\n                            makerFee: String(royaltyAmount),\n                            feeRecipientAddress: receiver,\n                            expirationTimeSeconds: expirationTimeSeconds,\n                            makerAssetAmount: makerAssetAmount,\n                            takerAssetAmount: takerAssetAmount,\n                            makerAssetData: makerAssetData,\n                            takerAssetData: takerAssetData,\n                        });\n                        order.chainId = String(order.chainId);\n                        return [4 /*yield*/, (0, signature_1.default)(this.wallet.provider.currentProvider, order, this.address, exchangeAddress)];\n                    case 22:\n                        signedOrder = _c.sent();\n                        return [4 /*yield*/, this.contracts.getOrderInfo(signedOrder)];\n                    case 23:\n                        orderHash = (_c.sent()).orderHash;\n                        this.setStatus(constants_1.APPROVED);\n                        return [2 /*return*/, __assign(__assign({}, signedOrder), { orderHash: orderHash })];\n                }\n            });\n        });\n    };\n    Transaction.prototype.acceptOffer = function (order) {\n        return __awaiter(this, void 0, void 0, function () {\n            var nativeERC20Balance, signedOrder, tokens, txHash;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.contracts.balanceOfNativeERC20(order.makerAddress)];\n                    case 1:\n                        nativeERC20Balance = _a.sent();\n                        if (new bignumber_js_1.default(order.makerAssetAmount).isGreaterThan(nativeERC20Balance)) {\n                            throw new Error('Not enough balance');\n                        }\n                        this.setStatus(constants_1.CREATING);\n                        signedOrder = (0, order_1.destructOrder)(order);\n                        tokens = order.tokens;\n                        this.setStatus(constants_1.APPROVING);\n                        return [4 /*yield*/, Promise.all(tokens.map(function (token) { return __awaiter(_this, void 0, void 0, function () {\n                                var contract, type, address;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            contract = token.contract;\n                                            type = contract.type, address = contract.address;\n                                            if (!(type === constants_1.EIP721)) return [3 /*break*/, 2];\n                                            return [4 /*yield*/, this.contracts.erc721ApproveForAll(address)];\n                                        case 1:\n                                            _a.sent();\n                                            return [3 /*break*/, 4];\n                                        case 2:\n                                            if (!(type === constants_1.EIP1155)) return [3 /*break*/, 4];\n                                            return [4 /*yield*/, this.contracts.erc1155ApproveForAll(address)];\n                                        case 3:\n                                            _a.sent();\n                                            _a.label = 4;\n                                        case 4: return [2 /*return*/];\n                                    }\n                                });\n                            }); }))];\n                    case 2:\n                        _a.sent();\n                        this.setStatus(constants_1.APPROVING_FILL);\n                        return [4 /*yield*/, this.contracts.fillOrder(signedOrder)];\n                    case 3:\n                        txHash = _a.sent();\n                        this.setStatus(constants_1.APPROVED);\n                        return [2 /*return*/, __assign(__assign({}, order), { txHash: txHash })];\n                }\n            });\n        });\n    };\n    Transaction.prototype.cancelOrder = function (order) {\n        return __awaiter(this, void 0, void 0, function () {\n            var signedOrder;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        signedOrder = (0, order_1.destructOrder)(order);\n                        this.setStatus(constants_1.CANCELLING);\n                        return [4 /*yield*/, this.contracts.cancelOrder(signedOrder)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Transaction.prototype.isOwner = function (contractAddress, tokenId, contractType) {\n        return __awaiter(this, void 0, void 0, function () {\n            var connectedAddressBalance, tokenOwner, isUserHasBalance, isUserOwner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(contractType == constants_1.EIP1155)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.contracts.balanceOfERC1155(contractAddress, tokenId)];\n                    case 1:\n                        connectedAddressBalance = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2:\n                        if (!(contractType == constants_1.EIP721)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.contracts.getOwner(contractAddress, tokenId)];\n                    case 3:\n                        tokenOwner = _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        isUserHasBalance = connectedAddressBalance > 0;\n                        isUserOwner = tokenOwner.toLowerCase() === this.address.toLowerCase();\n                        return [2 /*return*/, isUserHasBalance || isUserOwner];\n                }\n            });\n        });\n    };\n    return Transaction;\n}());\nexports.default = Transaction;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar addresses_1 = __importDefault(require(\"../addresses\"));\nvar transactionConfirmation_1 = __importDefault(require(\"../utils/transactionConfirmation\"));\nvar constants_1 = require(\"../constants\");\nvar ERC721ABI_1 = __importDefault(require(\"./abis/ERC721ABI\"));\nvar ERC1155ABI_1 = __importDefault(require(\"./abis/ERC1155ABI\"));\nvar ERC20ABI_1 = __importDefault(require(\"./abis/ERC20ABI\"));\nvar DevUtilsABI_1 = __importDefault(require(\"./abis/DevUtilsABI\"));\nvar ExchangeABI_1 = __importDefault(require(\"./abis/ExchangeABI\"));\nvar ForwarderABI_1 = __importDefault(require(\"./abis/ForwarderABI\"));\nvar CollectionsABI_1 = __importDefault(require(\"./abis/CollectionsABI\"));\nvar RoyaltiesManagerABI_1 = __importDefault(require(\"./abis/RoyaltiesManagerABI\"));\nvar send_1 = __importDefault(require(\"../utils/send\"));\nvar Contracts = /** @class */ (function () {\n    function Contracts(wallet, address, chainId) {\n        this.wallet = wallet;\n        this.address = address;\n        this.addresses = addresses_1.default[chainId];\n    }\n    /**\n     *\n     * @param String contractAddress\n     */\n    Contracts.prototype.getOwner = function (contractAddress, tokenID) {\n        var erc721Token = new this.wallet.provider.eth.Contract(ERC721ABI_1.default, contractAddress);\n        return erc721Token.methods.ownerOf(tokenID).call();\n    };\n    /**\n     *\n     * @param String contractAddress\n     */\n    Contracts.prototype.erc721ApproveForAll = function (contractAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var erc721Token, isApprovedForAll, ERC721Approval, transactionHash;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        erc721Token = new this.wallet.provider.eth.Contract(ERC721ABI_1.default, contractAddress);\n                        return [4 /*yield*/, erc721Token.methods\n                                .isApprovedForAll(this.address, this.addresses.ERC721Proxy)\n                                .call({ from: this.address })];\n                    case 1:\n                        isApprovedForAll = _a.sent();\n                        if (!!isApprovedForAll) return [3 /*break*/, 5];\n                        return [4 /*yield*/, erc721Token.methods\n                                .setApprovalForAll(this.addresses.ERC721Proxy, true)];\n                    case 2:\n                        ERC721Approval = _a.sent();\n                        return [4 /*yield*/, (0, send_1.default)(ERC721Approval, { from: this.address })];\n                    case 3:\n                        transactionHash = (_a.sent()).transactionHash;\n                        return [4 /*yield*/, (0, transactionConfirmation_1.default)(this.wallet.provider, transactionHash)];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     *\n     * @param String contractAddress\n     */\n    Contracts.prototype.erc1155ApproveForAll = function (contractAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var erc1155Token, isApprovedForAll, ERC1155Approval, transactionHash;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        erc1155Token = new this.wallet.provider.eth.Contract(ERC1155ABI_1.default, contractAddress);\n                        return [4 /*yield*/, erc1155Token.methods\n                                .isApprovedForAll(this.address, this.addresses.ERC1155Proxy)\n                                .call({ from: this.address })];\n                    case 1:\n                        isApprovedForAll = _a.sent();\n                        if (!!isApprovedForAll) return [3 /*break*/, 5];\n                        return [4 /*yield*/, erc1155Token.methods\n                                .setApprovalForAll(this.addresses.ERC1155Proxy, true)];\n                    case 2:\n                        ERC1155Approval = _a.sent();\n                        return [4 /*yield*/, (0, send_1.default)(ERC1155Approval, { from: this.address })];\n                    case 3:\n                        transactionHash = (_a.sent()).transactionHash;\n                        return [4 /*yield*/, (0, transactionConfirmation_1.default)(this.wallet.provider, transactionHash)];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Contracts.prototype.balanceOfNativeERC20 = function (address) {\n        if (address === void 0) { address = this.address; }\n        var NativeERC20Contract = new this.wallet.provider.eth.Contract(ERC20ABI_1.default, this.addresses.NativeERC20);\n        return NativeERC20Contract.methods.balanceOf(address).call({ from: this.address });\n    };\n    Contracts.prototype.balanceOfERC20 = function (address, ERC20Address) {\n        if (address === void 0) { address = this.address; }\n        var NativeERC20Contract = new this.wallet.provider.eth.Contract(ERC20ABI_1.default, ERC20Address);\n        return NativeERC20Contract.methods.balanceOf(address).call({ from: this.address });\n    };\n    Contracts.prototype.balanceOfERC1155 = function (contractAddress, tokenID) {\n        var ERC1155Contract = new this.wallet.provider.eth.Contract(ERC1155ABI_1.default, contractAddress);\n        return ERC1155Contract.methods.balanceOf(this.address, tokenID).call({ from: this.address });\n    };\n    Contracts.prototype.deposit = function () {\n        var NativeERC20Contract = new this.wallet.provider.eth.Contract(ERC20ABI_1.default, this.addresses.NativeERC20);\n        return NativeERC20Contract.methods.deposit();\n    };\n    Contracts.prototype.convertToNativeERC20 = function (value) {\n        var method = this.deposit();\n        return (0, send_1.default)(method, {\n            from: this.address,\n            value: value,\n        });\n    };\n    Contracts.prototype.ERC20Allowance = function (ERC20Address) {\n        var NativeERC20Contract = new this.wallet.provider.eth.Contract(ERC20ABI_1.default, ERC20Address);\n        return NativeERC20Contract.methods.allowance(this.address, this.addresses.ERC20Proxy).call({ from: this.address });\n    };\n    Contracts.prototype.NativeERC20Allowance = function () {\n        var NativeERC20Contract = new this.wallet.provider.eth.Contract(ERC20ABI_1.default, this.addresses.NativeERC20);\n        return NativeERC20Contract.methods.allowance(this.address, this.addresses.ERC20Proxy).call({ from: this.address });\n    };\n    Contracts.prototype.NativeERC20Approve = function () {\n        var NativeERC20Contract = new this.wallet.provider.eth.Contract(ERC20ABI_1.default, this.addresses.NativeERC20);\n        var method = NativeERC20Contract.methods\n            .approve(this.addresses.ERC20Proxy, new bignumber_js_1.default(2).pow(256).minus(1).toString());\n        return (0, send_1.default)(method, { from: this.address });\n    };\n    Contracts.prototype.ERC20Approve = function (erc20Address) {\n        // fix the amount transfered to the proxy\n        var NativeERC20Contract = new this.wallet.provider.eth.Contract(ERC20ABI_1.default, erc20Address);\n        var method = NativeERC20Contract.methods\n            .approve(this.addresses.ERC20Proxy, new bignumber_js_1.default(2).pow(256).minus(1));\n        return (0, send_1.default)(method, { from: this.address });\n    };\n    Contracts.prototype.encodeERC721AssetData = function (contractAddress, tokenID) {\n        var DevUtilsContract = new this.wallet.provider.eth.Contract(DevUtilsABI_1.default, this.addresses.DevUtils);\n        return DevUtilsContract.methods.encodeERC721AssetData(contractAddress, tokenID).call({ from: this.address });\n    };\n    Contracts.prototype.encodeERC1155AssetData = function (contractAddress, tokenID, amount) {\n        var DevUtilsContract = new this.wallet.provider.eth.Contract(DevUtilsABI_1.default, this.addresses.DevUtils);\n        return DevUtilsContract.methods.encodeERC1155AssetData(contractAddress, [tokenID], [amount], '0x0').call({ from: this.address });\n    };\n    Contracts.prototype.encodeERC20AssetData = function () {\n        var DevUtilsContract = new this.wallet.provider.eth.Contract(DevUtilsABI_1.default, this.addresses.DevUtils);\n        return DevUtilsContract.methods.encodeERC20AssetData(this.addresses.NativeERC20)\n            .call({ from: this.address });\n    };\n    Contracts.prototype.encodeERC20Data = function (erc20Address) {\n        var DevUtilsContract = new this.wallet.provider.eth.Contract(DevUtilsABI_1.default, this.addresses.DevUtils);\n        return DevUtilsContract.methods.encodeERC20AssetData(erc20Address)\n            .call({ from: this.address });\n    };\n    Contracts.prototype.decodeERC20Data = function (decodeERC20AssetData) {\n        var DevUtilsContract = new this.wallet.provider.eth.Contract(DevUtilsABI_1.default, this.addresses.DevUtils);\n        return DevUtilsContract.methods.decodeERC20AssetData(decodeERC20AssetData).call({ from: this.address });\n    };\n    Contracts.prototype.encodeMultiAssetData = function (makerAssetAmountArray, erc721AssetDataArray) {\n        var DevUtilsContract = new this.wallet.provider.eth.Contract(DevUtilsABI_1.default, this.addresses.DevUtils);\n        return DevUtilsContract.methods.encodeMultiAssetData(makerAssetAmountArray, erc721AssetDataArray).call({ from: this.address });\n    };\n    Contracts.prototype.decodeMultiAssetData = function (MultiAssetData) {\n        var DevUtilsContract = new this.wallet.provider.eth.Contract(DevUtilsABI_1.default, this.addresses.DevUtils);\n        return DevUtilsContract.methods.decodeMultiAssetData(MultiAssetData).call({ from: this.address });\n    };\n    Contracts.prototype.decodeERC721AssetData = function (ERC721AssetData) {\n        var DevUtilsContract = new this.wallet.provider.eth.Contract(DevUtilsABI_1.default, this.addresses.DevUtils);\n        return DevUtilsContract.methods.decodeERC721AssetData(ERC721AssetData).call({ from: this.address });\n    };\n    Contracts.prototype.getOrderInfo = function (signedOrder) {\n        var exchangeContract = new this.wallet.provider.eth.Contract(ExchangeABI_1.default, this.addresses.Exchange);\n        return exchangeContract.methods.getOrderInfo(signedOrder).call();\n    };\n    Contracts.prototype.fillOrder = function (signedOrder, value) {\n        if (value === void 0) { value = 0; }\n        return __awaiter(this, void 0, void 0, function () {\n            var exchangeContract, buyOrder, transactionHash;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        exchangeContract = new this.wallet.provider.eth.Contract(ExchangeABI_1.default, this.addresses.Exchange);\n                        return [4 /*yield*/, exchangeContract.methods.fillOrder(signedOrder, signedOrder.takerAssetAmount, signedOrder.signature)];\n                    case 1:\n                        buyOrder = _a.sent();\n                        return [4 /*yield*/, (0, send_1.default)(buyOrder, {\n                                from: this.address,\n                                value: value,\n                            })];\n                    case 2:\n                        transactionHash = (_a.sent()).transactionHash;\n                        return [2 /*return*/, transactionHash];\n                }\n            });\n        });\n    };\n    Contracts.prototype.marketBuyOrdersWithEth = function (signedOrder) {\n        return __awaiter(this, void 0, void 0, function () {\n            var affiliateFeeRecipient, affiliateFee, takerAssetAmount, takerFee, forwarderContract, buyOrder, transactionHash;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        affiliateFeeRecipient = constants_1.NULL_ADDRESS;\n                        affiliateFee = constants_1.ZERO;\n                        takerAssetAmount = new bignumber_js_1.default(signedOrder.takerAssetAmount);\n                        takerFee = new bignumber_js_1.default(signedOrder.takerFee);\n                        forwarderContract = new this.wallet.provider.eth.Contract(ForwarderABI_1.default, this.addresses.Forwarder);\n                        return [4 /*yield*/, forwarderContract.methods.marketBuyOrdersWithEth([signedOrder], signedOrder.makerAssetAmount, [signedOrder.signature], [String(affiliateFee)], [affiliateFeeRecipient])];\n                    case 1:\n                        buyOrder = _a.sent();\n                        return [4 /*yield*/, (0, send_1.default)(buyOrder, {\n                                from: this.address,\n                                value: takerAssetAmount.plus(takerFee).plus(affiliateFee),\n                            })];\n                    case 2:\n                        transactionHash = (_a.sent()).transactionHash;\n                        return [2 /*return*/, transactionHash];\n                }\n            });\n        });\n    };\n    Contracts.prototype.cancelOrder = function (signedOrder) {\n        var exchangeContract = new this.wallet.provider.eth.Contract(ExchangeABI_1.default, this.addresses.Exchange);\n        var method = exchangeContract.methods.cancelOrder(signedOrder);\n        return (0, send_1.default)(method, {\n            from: this.address,\n        });\n    };\n    /**\n     *\n     * @param String metadata\n     */\n    Contracts.prototype.createToken = function (metadata, contractAddress) {\n        var erc721Token = new this.wallet.provider.eth.Contract(ERC721ABI_1.default, contractAddress);\n        var method = erc721Token.methods.mint(this.address, metadata);\n        return (0, send_1.default)(method, {\n            from: this.address,\n        });\n    };\n    Contracts.prototype.get721Nonce = function () {\n        var erc721Token = new this.wallet.provider.eth.Contract(ERC721ABI_1.default, this.addresses.NFTrade721);\n        return erc721Token.methods.getNonce(this.address).call();\n    };\n    Contracts.prototype.create721ABI = function (metadata) {\n        var erc721Token = new this.wallet.provider.eth.Contract(ERC721ABI_1.default, this.addresses.NFTrade721);\n        return erc721Token.methods.awardItem(metadata).encodeABI();\n    };\n    Contracts.prototype.transferERC721NFT = function (contractAddress, reciver, tokenID) {\n        return __awaiter(this, void 0, void 0, function () {\n            var erc721Token, method;\n            return __generator(this, function (_a) {\n                erc721Token = new this.wallet.provider.eth.Contract(ERC721ABI_1.default, contractAddress);\n                method = erc721Token.methods.safeTransferFrom(this.address, reciver, tokenID);\n                return [2 /*return*/, (0, send_1.default)(method, {\n                        from: this.address,\n                    })];\n            });\n        });\n    };\n    Contracts.prototype.transferERC1155NFT = function (contractAddress, reciver, tokenID) {\n        return __awaiter(this, void 0, void 0, function () {\n            var erc721Token, method;\n            return __generator(this, function (_a) {\n                erc721Token = new this.wallet.provider.eth.Contract(ERC1155ABI_1.default, contractAddress);\n                method = erc721Token.methods.safeTransferFrom(this.address, reciver, tokenID, 1, []);\n                return [2 /*return*/, (0, send_1.default)(method, {\n                        from: this.address,\n                    })];\n            });\n        });\n    };\n    /* async deploy721Contract(name, symbol) {\n      const contract = require('../abis/721Token.json');\n      const MyContract = new this.wallet.provider.eth.Contract(contract.abi);\n      const method = MyContract.deploy({\n        data     : contract.bytecode,\n        arguments: [name, symbol, this.addresses.Collections],\n      });\n  \n      const gas = await this.wallet.provider.eth.estimateGas({\n        data: method.encodeABI(),\n      });\n  \n      const gasPrice = await this.wallet.provider.eth.getGasPrice();\n  \n      return send(method, {\n        from: this.address,\n      });\n    } */\n    Contracts.prototype.getCollections = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var collectionsContract;\n            return __generator(this, function (_a) {\n                collectionsContract = new this.wallet.provider.eth.Contract(CollectionsABI_1.default, this.addresses.Collections);\n                return [2 /*return*/, collectionsContract.methods.getCollections().call({\n                        from: this.address,\n                    })];\n            });\n        });\n    };\n    Contracts.prototype.getRoyalties = function (collectionAddress, tokenId, salePrice) {\n        var royaltiesContract = new this.wallet.provider.eth.Contract(RoyaltiesManagerABI_1.default, this.addresses.RoyaltiesManager);\n        return royaltiesContract.methods.getRoyalties(collectionAddress, tokenId, salePrice)\n            .call({ from: this.address });\n    };\n    return Contracts;\n}());\nexports.default = Contracts;\n//# sourceMappingURL=contracts.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar INTERVAL = 200;\n/**\n * @param {!string | !Array.<!string>} txHash, a transaction hash or an array of transaction hashes.\n * @param {Number} interval, in seconds.\n * @returns {!Promise.<!object> | !Promise.<!Array.<!object>>} the receipt or an array of receipts.\n */\nvar transactionConfirmation = function (web3, txnHash) { return new Promise(function (resolve, reject) {\n    var transactionReceiptRetry = function () { return web3.eth.getTransactionReceipt(txnHash)\n        .then(function (receipt) { return (receipt && receipt.blockNumber\n        ? resolve(receipt)\n        : setTimeout(function () {\n            transactionReceiptRetry();\n        }, INTERVAL)); }); };\n    transactionReceiptRetry();\n}); };\nexports.default = transactionConfirmation;\n//# sourceMappingURL=transactionConfirmation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERC721ABI = [\n    {\n        constant: true,\n        inputs: [{ name: 'interfaceId', type: 'bytes4' }],\n        name: 'supportsInterface',\n        outputs: [{ name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'mintingFinished',\n        outputs: [{ name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'name',\n        outputs: [{ name: '', type: 'string' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: 'tokenId', type: 'uint256' }],\n        name: 'getApproved',\n        outputs: [{ name: '', type: 'address' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: 'to', type: 'address' },\n            { name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'approve',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'totalSupply',\n        outputs: [{ name: '', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: 'from', type: 'address' },\n            { name: 'to', type: 'address' },\n            { name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'transferFrom',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'owner', type: 'address' },\n            { name: 'index', type: 'uint256' },\n        ],\n        name: 'tokenOfOwnerByIndex',\n        outputs: [{ name: '', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: 'from', type: 'address' },\n            { name: 'to', type: 'address' },\n            { name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'safeTransferFrom',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: '_foreignToken', type: 'address' },\n            { name: '_to', type: 'address' },\n        ],\n        name: 'rescueToken',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: 'tokenId', type: 'uint256' }],\n        name: 'exists',\n        outputs: [{ name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: 'index', type: 'uint256' }],\n        name: 'tokenByIndex',\n        outputs: [{ name: '', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: '_tokenIdStart', type: 'uint256' },\n            { name: '_owners', type: 'address[]' },\n        ],\n        name: 'createMulti',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: 'tokenId', type: 'uint256' }],\n        name: 'ownerOf',\n        outputs: [{ name: '', type: 'address' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: 'owner', type: 'address' }],\n        name: 'balanceOf',\n        outputs: [{ name: '', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [],\n        name: 'finishMinting',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [{ name: '_newUriBase', type: 'string' }],\n        name: 'newUriBase',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'symbol',\n        outputs: [{ name: '', type: 'string' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'uribase',\n        outputs: [{ name: '', type: 'string' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: 'to', type: 'address' },\n            { name: 'approved', type: 'bool' },\n        ],\n        name: 'setApprovalForAll',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: 'from', type: 'address' },\n            { name: 'to', type: 'address' },\n            { name: 'tokenId', type: 'uint256' },\n            { name: '_data', type: 'bytes' },\n        ],\n        name: 'safeTransferFrom',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: '_tokenId', type: 'uint256' }],\n        name: 'tokenURI',\n        outputs: [{ name: '', type: 'string' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'tokenAssignmentControl',\n        outputs: [{ name: '', type: 'address' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'createControl',\n        outputs: [{ name: '', type: 'address' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'owner', type: 'address' },\n            { name: 'operator', type: 'address' },\n        ],\n        name: 'isApprovedForAll',\n        outputs: [{ name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'receiver',\n                type: 'address',\n            },\n            {\n                internalType: 'string',\n                name: 'metadata',\n                type: 'string',\n            },\n        ],\n        name: 'mint',\n        outputs: [\n            {\n                internalType: 'uint256',\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: '_tokenId', type: 'uint256' },\n            { name: '_owner', type: 'address' },\n        ],\n        name: 'create',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: '_createControl', type: 'address' },\n            { name: '_tokenAssignmentControl', type: 'address' },\n        ],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'constructor',\n    },\n    { payable: true, stateMutability: 'payable', type: 'fallback' },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: true, name: 'from', type: 'address' },\n            { indexed: true, name: 'to', type: 'address' },\n            { indexed: true, name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'Transfer',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: true, name: 'owner', type: 'address' },\n            { indexed: true, name: 'approved', type: 'address' },\n            { indexed: true, name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'Approval',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: true, name: 'owner', type: 'address' },\n            { indexed: true, name: 'operator', type: 'address' },\n            { indexed: false, name: 'approved', type: 'bool' },\n        ],\n        name: 'ApprovalForAll',\n        type: 'event',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'string',\n                name: 'metadata',\n                type: 'string',\n            },\n        ],\n        name: 'awardItem',\n        outputs: [\n            {\n                internalType: 'uint256',\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'user',\n                type: 'address',\n            },\n        ],\n        name: 'getNonce',\n        outputs: [\n            {\n                internalType: 'uint256',\n                name: 'nonce',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n        constant: true,\n    },\n];\nexports.default = ERC721ABI;\n//# sourceMappingURL=ERC721ABI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERC1155ABI = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'bool',\n                name: 'approved',\n                type: 'bool',\n            },\n        ],\n        name: 'ApprovalForAll',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256[]',\n                name: 'ids',\n                type: 'uint256[]',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256[]',\n                name: 'values',\n                type: 'uint256[]',\n            },\n        ],\n        name: 'TransferBatch',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n        name: 'TransferSingle',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: 'string',\n                name: 'value',\n                type: 'string',\n            },\n            {\n                indexed: true,\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n        ],\n        name: 'URI',\n        type: 'event',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n        ],\n        name: 'balanceOf',\n        outputs: [\n            {\n                internalType: 'uint256',\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address[]',\n                name: 'accounts',\n                type: 'address[]',\n            },\n            {\n                internalType: 'uint256[]',\n                name: 'ids',\n                type: 'uint256[]',\n            },\n        ],\n        name: 'balanceOfBatch',\n        outputs: [\n            {\n                internalType: 'uint256[]',\n                name: '',\n                type: 'uint256[]',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n        ],\n        name: 'isApprovedForAll',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256[]',\n                name: 'ids',\n                type: 'uint256[]',\n            },\n            {\n                internalType: 'uint256[]',\n                name: 'amounts',\n                type: 'uint256[]',\n            },\n            {\n                internalType: 'bytes',\n                name: 'data',\n                type: 'bytes',\n            },\n        ],\n        name: 'safeBatchTransferFrom',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'amount',\n                type: 'uint256',\n            },\n            {\n                internalType: 'bytes',\n                name: 'data',\n                type: 'bytes',\n            },\n        ],\n        name: 'safeTransferFrom',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                internalType: 'bool',\n                name: 'approved',\n                type: 'bool',\n            },\n        ],\n        name: 'setApprovalForAll',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes4',\n                name: 'interfaceId',\n                type: 'bytes4',\n            },\n        ],\n        name: 'supportsInterface',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n        ],\n        name: 'uri',\n        outputs: [\n            {\n                internalType: 'string',\n                name: '',\n                type: 'string',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n];\nexports.default = ERC1155ABI;\n//# sourceMappingURL=ERC1155ABI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ERC20ABI = [\n    {\n        constant: true,\n        inputs: [],\n        name: 'name',\n        outputs: [{ name: '', type: 'string' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: 'guy', type: 'address' },\n            { name: 'wad', type: 'uint256' },\n        ],\n        name: 'approve',\n        outputs: [{ name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'totalSupply',\n        outputs: [{ name: '', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: 'src', type: 'address' },\n            { name: 'dst', type: 'address' },\n            { name: 'wad', type: 'uint256' },\n        ],\n        name: 'transferFrom',\n        outputs: [{ name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [{ name: 'wad', type: 'uint256' }],\n        name: 'withdraw',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'decimals',\n        outputs: [{ name: '', type: 'uint8' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: '', type: 'address' }],\n        name: 'balanceOf',\n        outputs: [{ name: '', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'symbol',\n        outputs: [{ name: '', type: 'string' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { name: 'dst', type: 'address' },\n            { name: 'wad', type: 'uint256' },\n        ],\n        name: 'transfer',\n        outputs: [{ name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [],\n        name: 'deposit',\n        outputs: [],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: '', type: 'address' },\n            { name: '', type: 'address' },\n        ],\n        name: 'allowance',\n        outputs: [{ name: '', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    { payable: true, stateMutability: 'payable', type: 'fallback' },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: true, name: 'src', type: 'address' },\n            { indexed: true, name: 'guy', type: 'address' },\n            { indexed: false, name: 'wad', type: 'uint256' },\n        ],\n        name: 'Approval',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: true, name: 'src', type: 'address' },\n            { indexed: true, name: 'dst', type: 'address' },\n            { indexed: false, name: 'wad', type: 'uint256' },\n        ],\n        name: 'Transfer',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: true, name: 'dst', type: 'address' },\n            { indexed: false, name: 'wad', type: 'uint256' },\n        ],\n        name: 'Deposit',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            { indexed: true, name: 'src', type: 'address' },\n            { indexed: false, name: 'wad', type: 'uint256' },\n        ],\n        name: 'Withdrawal',\n        type: 'event',\n    },\n];\nexports.default = ERC20ABI;\n//# sourceMappingURL=ERC20ABI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DevUtilsABI = [\n    {\n        constant: true,\n        inputs: [{ name: 'assetData', type: 'bytes' }],\n        name: 'decodeERC721AssetData',\n        outputs: [\n            { name: 'assetProxyId', type: 'bytes4' },\n            { name: 'tokenAddress', type: 'address' },\n            { name: 'tokenId', type: 'uint256' },\n        ],\n        payable: false,\n        stateMutability: 'pure',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'ownerAddress', type: 'address' },\n            { name: 'assetData', type: 'bytes' },\n        ],\n        name: 'getBalanceAndAssetProxyAllowance',\n        outputs: [\n            { name: 'balance', type: 'uint256' },\n            { name: 'allowance', type: 'uint256' },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'ERC1155_PROXY_ID',\n        outputs: [{ name: '', type: 'bytes4' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'ownerAddress', type: 'address' },\n            { name: 'assetData', type: 'bytes' },\n        ],\n        name: 'getTransferableAssetAmount',\n        outputs: [{ name: 'transferableAssetAmount', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'ownerAddress', type: 'address' },\n            { name: 'assetData', type: 'bytes[]' },\n        ],\n        name: 'getBatchAssetProxyAllowances',\n        outputs: [{ name: 'allowances', type: 'uint256[]' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: 'tokenAddress', type: 'address' }],\n        name: 'encodeERC20AssetData',\n        outputs: [{ name: 'assetData', type: 'bytes' }],\n        payable: false,\n        stateMutability: 'pure',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: 'transactionData', type: 'bytes' }],\n        name: 'decodeZeroExTransactionData',\n        outputs: [\n            { name: 'functionName', type: 'string' },\n            {\n                components: [\n                    { name: 'makerAddress', type: 'address' },\n                    { name: 'takerAddress', type: 'address' },\n                    { name: 'feeRecipientAddress', type: 'address' },\n                    { name: 'senderAddress', type: 'address' },\n                    { name: 'makerAssetAmount', type: 'uint256' },\n                    { name: 'takerAssetAmount', type: 'uint256' },\n                    { name: 'makerFee', type: 'uint256' },\n                    { name: 'takerFee', type: 'uint256' },\n                    { name: 'expirationTimeSeconds', type: 'uint256' },\n                    { name: 'salt', type: 'uint256' },\n                    { name: 'makerAssetData', type: 'bytes' },\n                    { name: 'takerAssetData', type: 'bytes' },\n                ],\n                name: 'orders',\n                type: 'tuple[]',\n            },\n            { name: 'takerAssetFillAmounts', type: 'uint256[]' },\n            { name: 'signatures', type: 'bytes[]' },\n        ],\n        payable: false,\n        stateMutability: 'pure',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'ownerAddress', type: 'address' },\n            { name: 'assetData', type: 'bytes' },\n        ],\n        name: 'getBalance',\n        outputs: [{ name: 'balance', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                components: [\n                    { name: 'makerAddress', type: 'address' },\n                    { name: 'takerAddress', type: 'address' },\n                    { name: 'feeRecipientAddress', type: 'address' },\n                    { name: 'senderAddress', type: 'address' },\n                    { name: 'makerAssetAmount', type: 'uint256' },\n                    { name: 'takerAssetAmount', type: 'uint256' },\n                    { name: 'makerFee', type: 'uint256' },\n                    { name: 'takerFee', type: 'uint256' },\n                    { name: 'expirationTimeSeconds', type: 'uint256' },\n                    { name: 'salt', type: 'uint256' },\n                    { name: 'makerAssetData', type: 'bytes' },\n                    { name: 'takerAssetData', type: 'bytes' },\n                ],\n                name: 'orders',\n                type: 'tuple[]',\n            },\n            { name: 'signatures', type: 'bytes[]' },\n        ],\n        name: 'getOrderRelevantStates',\n        outputs: [\n            {\n                components: [\n                    { name: 'orderStatus', type: 'uint8' },\n                    { name: 'orderHash', type: 'bytes32' },\n                    { name: 'orderTakerAssetFilledAmount', type: 'uint256' },\n                ],\n                name: 'ordersInfo',\n                type: 'tuple[]',\n            },\n            { name: 'fillableTakerAssetAmounts', type: 'uint256[]' },\n            { name: 'isValidSignature', type: 'bool[]' },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'ERC20_PROXY_ID',\n        outputs: [{ name: '', type: 'bytes4' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: 'assetData', type: 'bytes' }],\n        name: 'decodeERC20AssetData',\n        outputs: [\n            { name: 'assetProxyId', type: 'bytes4' },\n            { name: 'tokenAddress', type: 'address' },\n        ],\n        payable: false,\n        stateMutability: 'pure',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                components: [\n                    { name: 'makerAddress', type: 'address' },\n                    { name: 'takerAddress', type: 'address' },\n                    { name: 'feeRecipientAddress', type: 'address' },\n                    { name: 'senderAddress', type: 'address' },\n                    { name: 'makerAssetAmount', type: 'uint256' },\n                    { name: 'takerAssetAmount', type: 'uint256' },\n                    { name: 'makerFee', type: 'uint256' },\n                    { name: 'takerFee', type: 'uint256' },\n                    { name: 'expirationTimeSeconds', type: 'uint256' },\n                    { name: 'salt', type: 'uint256' },\n                    { name: 'makerAssetData', type: 'bytes' },\n                    { name: 'takerAssetData', type: 'bytes' },\n                ],\n                name: 'order',\n                type: 'tuple',\n            },\n            { name: 'signature', type: 'bytes' },\n        ],\n        name: 'getOrderRelevantState',\n        outputs: [\n            {\n                components: [\n                    { name: 'orderStatus', type: 'uint8' },\n                    { name: 'orderHash', type: 'bytes32' },\n                    { name: 'orderTakerAssetFilledAmount', type: 'uint256' },\n                ],\n                name: 'orderInfo',\n                type: 'tuple',\n            },\n            { name: 'fillableTakerAssetAmount', type: 'uint256' },\n            { name: 'isValidSignature', type: 'bool' },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: 'assetData', type: 'bytes' }],\n        name: 'decodeERC1155AssetData',\n        outputs: [\n            { name: 'assetProxyId', type: 'bytes4' },\n            { name: 'tokenAddress', type: 'address' },\n            { name: 'tokenIds', type: 'uint256[]' },\n            { name: 'tokenValues', type: 'uint256[]' },\n            { name: 'callbackData', type: 'bytes' },\n        ],\n        payable: false,\n        stateMutability: 'pure',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: 'addresses', type: 'address[]' }],\n        name: 'getEthBalances',\n        outputs: [{ name: '', type: 'uint256[]' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'ERC721_PROXY_ID',\n        outputs: [{ name: '', type: 'bytes4' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'tokenAddress', type: 'address' },\n            { name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'encodeERC721AssetData',\n        outputs: [{ name: 'assetData', type: 'bytes' }],\n        payable: false,\n        stateMutability: 'pure',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'MULTI_ASSET_PROXY_ID',\n        outputs: [{ name: '', type: 'bytes4' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'tokenAddress', type: 'address' },\n            { name: 'tokenIds', type: 'uint256[]' },\n            { name: 'tokenValues', type: 'uint256[]' },\n            { name: 'callbackData', type: 'bytes' },\n        ],\n        name: 'encodeERC1155AssetData',\n        outputs: [{ name: 'assetData', type: 'bytes' }],\n        payable: false,\n        stateMutability: 'pure',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'tokenAddress', type: 'address' },\n            { name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'getERC721TokenOwner',\n        outputs: [{ name: 'ownerAddress', type: 'address' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ name: 'assetData', type: 'bytes' }],\n        name: 'decodeMultiAssetData',\n        outputs: [\n            { name: 'assetProxyId', type: 'bytes4' },\n            { name: 'amounts', type: 'uint256[]' },\n            { name: 'nestedAssetData', type: 'bytes[]' },\n        ],\n        payable: false,\n        stateMutability: 'pure',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'ownerAddress', type: 'address' },\n            { name: 'assetData', type: 'bytes[]' },\n        ],\n        name: 'getBatchBalances',\n        outputs: [{ name: 'balances', type: 'uint256[]' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'ownerAddress', type: 'address' },\n            { name: 'assetData', type: 'bytes' },\n        ],\n        name: 'getAssetProxyAllowance',\n        outputs: [{ name: 'allowance', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'amounts', type: 'uint256[]' },\n            { name: 'nestedAssetData', type: 'bytes[]' },\n        ],\n        name: 'encodeMultiAssetData',\n        outputs: [{ name: 'assetData', type: 'bytes' }],\n        payable: false,\n        stateMutability: 'pure',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'STATIC_CALL_PROXY_ID',\n        outputs: [{ name: '', type: 'bytes4' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { name: 'ownerAddress', type: 'address' },\n            { name: 'assetData', type: 'bytes[]' },\n        ],\n        name: 'getBatchBalancesAndAssetProxyAllowances',\n        outputs: [\n            { name: 'balances', type: 'uint256[]' },\n            { name: 'allowances', type: 'uint256[]' },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: '_exchange', type: 'address' },\n            { name: '_zrxAssetData', type: 'bytes' },\n        ],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'constructor',\n    },\n];\nexports.default = DevUtilsABI;\n//# sourceMappingURL=DevUtilsABI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ExchangeABI = [\n    {\n        inputs: [{ internalType: 'uint256', name: 'chainId', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'constructor',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: 'bytes4',\n                name: 'id',\n                type: 'bytes4',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'assetProxy',\n                type: 'address',\n            },\n        ],\n        name: 'AssetProxyRegistered',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'makerAddress',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'feeRecipientAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'makerAssetData',\n                type: 'bytes',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'takerAssetData',\n                type: 'bytes',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'senderAddress',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'orderHash',\n                type: 'bytes32',\n            },\n        ],\n        name: 'Cancel',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'makerAddress',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'orderSenderAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'orderEpoch',\n                type: 'uint256',\n            },\n        ],\n        name: 'CancelUpTo',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'makerAddress',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'feeRecipientAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'makerAssetData',\n                type: 'bytes',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'takerAssetData',\n                type: 'bytes',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'makerFeeAssetData',\n                type: 'bytes',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'takerFeeAssetData',\n                type: 'bytes',\n            },\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'orderHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'takerAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'senderAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'makerAssetFilledAmount',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'takerAssetFilledAmount',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'makerFeePaid',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'takerFeePaid',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'protocolFeePaid',\n                type: 'uint256',\n            },\n        ],\n        name: 'Fill',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'previousOwner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'newOwner',\n                type: 'address',\n            },\n        ],\n        name: 'OwnershipTransferred',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'oldProtocolFeeCollector',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'updatedProtocolFeeCollector',\n                type: 'address',\n            },\n        ],\n        name: 'ProtocolFeeCollectorAddress',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'oldProtocolFeeMultiplier',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'updatedProtocolFeeMultiplier',\n                type: 'uint256',\n            },\n        ],\n        name: 'ProtocolFeeMultiplier',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'signerAddress',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'validatorAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'bool',\n                name: 'isApproved',\n                type: 'bool',\n            },\n        ],\n        name: 'SignatureValidatorApproval',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'transactionHash',\n                type: 'bytes32',\n            },\n        ],\n        name: 'TransactionExecution',\n        type: 'event',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'EIP1271_MAGIC_VALUE',\n        outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'EIP712_EXCHANGE_DOMAIN_HASH',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { internalType: 'address', name: '', type: 'address' },\n            { internalType: 'address', name: '', type: 'address' },\n        ],\n        name: 'allowedValidators',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'orders',\n                type: 'tuple[]',\n            },\n        ],\n        name: 'batchCancelOrders',\n        outputs: [],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'gasPrice', type: 'uint256' },\n                    { internalType: 'address', name: 'signerAddress', type: 'address' },\n                    { internalType: 'bytes', name: 'data', type: 'bytes' },\n                ],\n                internalType: 'struct LibZeroExTransaction.ZeroExTransaction[]',\n                name: 'transactions',\n                type: 'tuple[]',\n            },\n            { internalType: 'bytes[]', name: 'signatures', type: 'bytes[]' },\n        ],\n        name: 'batchExecuteTransactions',\n        outputs: [{ internalType: 'bytes[]', name: 'returnData', type: 'bytes[]' }],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'orders',\n                type: 'tuple[]',\n            },\n            {\n                internalType: 'uint256[]',\n                name: 'takerAssetFillAmounts',\n                type: 'uint256[]',\n            },\n            { internalType: 'bytes[]', name: 'signatures', type: 'bytes[]' },\n        ],\n        name: 'batchFillOrKillOrders',\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'protocolFeePaid', type: 'uint256' },\n                ],\n                internalType: 'struct LibFillResults.FillResults[]',\n                name: 'fillResults',\n                type: 'tuple[]',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'orders',\n                type: 'tuple[]',\n            },\n            {\n                internalType: 'uint256[]',\n                name: 'takerAssetFillAmounts',\n                type: 'uint256[]',\n            },\n            { internalType: 'bytes[]', name: 'signatures', type: 'bytes[]' },\n        ],\n        name: 'batchFillOrders',\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'protocolFeePaid', type: 'uint256' },\n                ],\n                internalType: 'struct LibFillResults.FillResults[]',\n                name: 'fillResults',\n                type: 'tuple[]',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'orders',\n                type: 'tuple[]',\n            },\n            {\n                internalType: 'uint256[]',\n                name: 'takerAssetFillAmounts',\n                type: 'uint256[]',\n            },\n            { internalType: 'bytes[]', name: 'signatures', type: 'bytes[]' },\n        ],\n        name: 'batchFillOrdersNoThrow',\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'protocolFeePaid', type: 'uint256' },\n                ],\n                internalType: 'struct LibFillResults.FillResults[]',\n                name: 'fillResults',\n                type: 'tuple[]',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'leftOrders',\n                type: 'tuple[]',\n            },\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'rightOrders',\n                type: 'tuple[]',\n            },\n            { internalType: 'bytes[]', name: 'leftSignatures', type: 'bytes[]' },\n            { internalType: 'bytes[]', name: 'rightSignatures', type: 'bytes[]' },\n        ],\n        name: 'batchMatchOrders',\n        outputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: 'uint256',\n                                name: 'makerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'makerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'protocolFeePaid',\n                                type: 'uint256',\n                            },\n                        ],\n                        internalType: 'struct LibFillResults.FillResults[]',\n                        name: 'left',\n                        type: 'tuple[]',\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: 'uint256',\n                                name: 'makerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'makerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'protocolFeePaid',\n                                type: 'uint256',\n                            },\n                        ],\n                        internalType: 'struct LibFillResults.FillResults[]',\n                        name: 'right',\n                        type: 'tuple[]',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'profitInLeftMakerAsset',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'profitInRightMakerAsset',\n                        type: 'uint256',\n                    },\n                ],\n                internalType: 'struct LibFillResults.BatchMatchedFillResults',\n                name: 'batchMatchedFillResults',\n                type: 'tuple',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'leftOrders',\n                type: 'tuple[]',\n            },\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'rightOrders',\n                type: 'tuple[]',\n            },\n            { internalType: 'bytes[]', name: 'leftSignatures', type: 'bytes[]' },\n            { internalType: 'bytes[]', name: 'rightSignatures', type: 'bytes[]' },\n        ],\n        name: 'batchMatchOrdersWithMaximalFill',\n        outputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: 'uint256',\n                                name: 'makerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'makerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'protocolFeePaid',\n                                type: 'uint256',\n                            },\n                        ],\n                        internalType: 'struct LibFillResults.FillResults[]',\n                        name: 'left',\n                        type: 'tuple[]',\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: 'uint256',\n                                name: 'makerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'makerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'protocolFeePaid',\n                                type: 'uint256',\n                            },\n                        ],\n                        internalType: 'struct LibFillResults.FillResults[]',\n                        name: 'right',\n                        type: 'tuple[]',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'profitInLeftMakerAsset',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'profitInRightMakerAsset',\n                        type: 'uint256',\n                    },\n                ],\n                internalType: 'struct LibFillResults.BatchMatchedFillResults',\n                name: 'batchMatchedFillResults',\n                type: 'tuple',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order',\n                name: 'order',\n                type: 'tuple',\n            },\n        ],\n        name: 'cancelOrder',\n        outputs: [],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { internalType: 'uint256', name: 'targetOrderEpoch', type: 'uint256' },\n        ],\n        name: 'cancelOrdersUpTo',\n        outputs: [],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        name: 'cancelled',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'currentContextAddress',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [],\n        name: 'detachProtocolFeeCollector',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'gasPrice', type: 'uint256' },\n                    { internalType: 'address', name: 'signerAddress', type: 'address' },\n                    { internalType: 'bytes', name: 'data', type: 'bytes' },\n                ],\n                internalType: 'struct LibZeroExTransaction.ZeroExTransaction',\n                name: 'transaction',\n                type: 'tuple',\n            },\n            { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        name: 'executeTransaction',\n        outputs: [{ internalType: 'bytes', name: '', type: 'bytes' }],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order',\n                name: 'order',\n                type: 'tuple',\n            },\n            {\n                internalType: 'uint256',\n                name: 'takerAssetFillAmount',\n                type: 'uint256',\n            },\n            { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        name: 'fillOrKillOrder',\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'protocolFeePaid', type: 'uint256' },\n                ],\n                internalType: 'struct LibFillResults.FillResults',\n                name: 'fillResults',\n                type: 'tuple',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order',\n                name: 'order',\n                type: 'tuple',\n            },\n            {\n                internalType: 'uint256',\n                name: 'takerAssetFillAmount',\n                type: 'uint256',\n            },\n            { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        name: 'fillOrder',\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'protocolFeePaid', type: 'uint256' },\n                ],\n                internalType: 'struct LibFillResults.FillResults',\n                name: 'fillResults',\n                type: 'tuple',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        name: 'filled',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ internalType: 'bytes4', name: 'assetProxyId', type: 'bytes4' }],\n        name: 'getAssetProxy',\n        outputs: [{ internalType: 'address', name: 'assetProxy', type: 'address' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order',\n                name: 'order',\n                type: 'tuple',\n            },\n        ],\n        name: 'getOrderInfo',\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: 'enum LibOrder.OrderStatus',\n                        name: 'orderStatus',\n                        type: 'uint8',\n                    },\n                    { internalType: 'bytes32', name: 'orderHash', type: 'bytes32' },\n                    {\n                        internalType: 'uint256',\n                        name: 'orderTakerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                ],\n                internalType: 'struct LibOrder.OrderInfo',\n                name: 'orderInfo',\n                type: 'tuple',\n            },\n        ],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { internalType: 'bytes32', name: 'hash', type: 'bytes32' },\n            { internalType: 'address', name: 'signerAddress', type: 'address' },\n            { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        name: 'isValidHashSignature',\n        outputs: [{ internalType: 'bool', name: 'isValid', type: 'bool' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order',\n                name: 'order',\n                type: 'tuple',\n            },\n            { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        name: 'isValidOrderSignature',\n        outputs: [{ internalType: 'bool', name: 'isValid', type: 'bool' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'gasPrice', type: 'uint256' },\n                    { internalType: 'address', name: 'signerAddress', type: 'address' },\n                    { internalType: 'bytes', name: 'data', type: 'bytes' },\n                ],\n                internalType: 'struct LibZeroExTransaction.ZeroExTransaction',\n                name: 'transaction',\n                type: 'tuple',\n            },\n            { internalType: 'bytes', name: 'signature', type: 'bytes' },\n        ],\n        name: 'isValidTransactionSignature',\n        outputs: [{ internalType: 'bool', name: 'isValid', type: 'bool' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'orders',\n                type: 'tuple[]',\n            },\n            {\n                internalType: 'uint256',\n                name: 'makerAssetFillAmount',\n                type: 'uint256',\n            },\n            { internalType: 'bytes[]', name: 'signatures', type: 'bytes[]' },\n        ],\n        name: 'marketBuyOrdersFillOrKill',\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'protocolFeePaid', type: 'uint256' },\n                ],\n                internalType: 'struct LibFillResults.FillResults',\n                name: 'fillResults',\n                type: 'tuple',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'orders',\n                type: 'tuple[]',\n            },\n            {\n                internalType: 'uint256',\n                name: 'makerAssetFillAmount',\n                type: 'uint256',\n            },\n            { internalType: 'bytes[]', name: 'signatures', type: 'bytes[]' },\n        ],\n        name: 'marketBuyOrdersNoThrow',\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'protocolFeePaid', type: 'uint256' },\n                ],\n                internalType: 'struct LibFillResults.FillResults',\n                name: 'fillResults',\n                type: 'tuple',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'orders',\n                type: 'tuple[]',\n            },\n            {\n                internalType: 'uint256',\n                name: 'takerAssetFillAmount',\n                type: 'uint256',\n            },\n            { internalType: 'bytes[]', name: 'signatures', type: 'bytes[]' },\n        ],\n        name: 'marketSellOrdersFillOrKill',\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'protocolFeePaid', type: 'uint256' },\n                ],\n                internalType: 'struct LibFillResults.FillResults',\n                name: 'fillResults',\n                type: 'tuple',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'orders',\n                type: 'tuple[]',\n            },\n            {\n                internalType: 'uint256',\n                name: 'takerAssetFillAmount',\n                type: 'uint256',\n            },\n            { internalType: 'bytes[]', name: 'signatures', type: 'bytes[]' },\n        ],\n        name: 'marketSellOrdersNoThrow',\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetFilledAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFeePaid', type: 'uint256' },\n                    { internalType: 'uint256', name: 'protocolFeePaid', type: 'uint256' },\n                ],\n                internalType: 'struct LibFillResults.FillResults',\n                name: 'fillResults',\n                type: 'tuple',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order',\n                name: 'leftOrder',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order',\n                name: 'rightOrder',\n                type: 'tuple',\n            },\n            { internalType: 'bytes', name: 'leftSignature', type: 'bytes' },\n            { internalType: 'bytes', name: 'rightSignature', type: 'bytes' },\n        ],\n        name: 'matchOrders',\n        outputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: 'uint256',\n                                name: 'makerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'makerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'protocolFeePaid',\n                                type: 'uint256',\n                            },\n                        ],\n                        internalType: 'struct LibFillResults.FillResults',\n                        name: 'left',\n                        type: 'tuple',\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: 'uint256',\n                                name: 'makerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'makerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'protocolFeePaid',\n                                type: 'uint256',\n                            },\n                        ],\n                        internalType: 'struct LibFillResults.FillResults',\n                        name: 'right',\n                        type: 'tuple',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'profitInLeftMakerAsset',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'profitInRightMakerAsset',\n                        type: 'uint256',\n                    },\n                ],\n                internalType: 'struct LibFillResults.MatchedFillResults',\n                name: 'matchedFillResults',\n                type: 'tuple',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order',\n                name: 'leftOrder',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order',\n                name: 'rightOrder',\n                type: 'tuple',\n            },\n            { internalType: 'bytes', name: 'leftSignature', type: 'bytes' },\n            { internalType: 'bytes', name: 'rightSignature', type: 'bytes' },\n        ],\n        name: 'matchOrdersWithMaximalFill',\n        outputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            {\n                                internalType: 'uint256',\n                                name: 'makerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'makerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'protocolFeePaid',\n                                type: 'uint256',\n                            },\n                        ],\n                        internalType: 'struct LibFillResults.FillResults',\n                        name: 'left',\n                        type: 'tuple',\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: 'uint256',\n                                name: 'makerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerAssetFilledAmount',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'makerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'takerFeePaid',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'protocolFeePaid',\n                                type: 'uint256',\n                            },\n                        ],\n                        internalType: 'struct LibFillResults.FillResults',\n                        name: 'right',\n                        type: 'tuple',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'profitInLeftMakerAsset',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'profitInRightMakerAsset',\n                        type: 'uint256',\n                    },\n                ],\n                internalType: 'struct LibFillResults.MatchedFillResults',\n                name: 'matchedFillResults',\n                type: 'tuple',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { internalType: 'address', name: '', type: 'address' },\n            { internalType: 'address', name: '', type: 'address' },\n        ],\n        name: 'orderEpoch',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'owner',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [{ internalType: 'bytes32', name: 'hash', type: 'bytes32' }],\n        name: 'preSign',\n        outputs: [],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [\n            { internalType: 'bytes32', name: '', type: 'bytes32' },\n            { internalType: 'address', name: '', type: 'address' },\n        ],\n        name: 'preSigned',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'protocolFeeCollector',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'protocolFeeMultiplier',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [{ internalType: 'address', name: 'assetProxy', type: 'address' }],\n        name: 'registerAssetProxy',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'updatedProtocolFeeCollector',\n                type: 'address',\n            },\n        ],\n        name: 'setProtocolFeeCollectorAddress',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: 'updatedProtocolFeeMultiplier',\n                type: 'uint256',\n            },\n        ],\n        name: 'setProtocolFeeMultiplier',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { internalType: 'address', name: 'validatorAddress', type: 'address' },\n            { internalType: 'bool', name: 'approval', type: 'bool' },\n        ],\n        name: 'setSignatureValidatorApproval',\n        outputs: [],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { internalType: 'bytes[]', name: 'assetData', type: 'bytes[]' },\n            { internalType: 'address[]', name: 'fromAddresses', type: 'address[]' },\n            { internalType: 'address[]', name: 'toAddresses', type: 'address[]' },\n            { internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },\n        ],\n        name: 'simulateDispatchTransferFromCalls',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        name: 'transactionsExecuted',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n        name: 'transferOwnership',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n];\nexports.default = ExchangeABI;\n//# sourceMappingURL=ExchangeABI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ForwarderABI = [\n    {\n        inputs: [\n            { internalType: 'address', name: '_exchange', type: 'address' },\n            { internalType: 'address', name: '_exchangeV2', type: 'address' },\n            { internalType: 'address', name: '_weth', type: 'address' },\n        ],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'constructor',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'previousOwner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'newOwner',\n                type: 'address',\n            },\n        ],\n        name: 'OwnershipTransferred',\n        type: 'event',\n    },\n    { payable: true, stateMutability: 'payable', type: 'fallback' },\n    {\n        constant: true,\n        inputs: [],\n        name: 'ERC1155_BATCH_RECEIVED',\n        outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'ERC1155_RECEIVED',\n        outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'EXCHANGE_V2_ORDER_ID',\n        outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [{ internalType: 'bytes', name: 'assetData', type: 'bytes' }],\n        name: 'approveMakerAssetProxy',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'orders',\n                type: 'tuple[]',\n            },\n            { internalType: 'uint256', name: 'makerAssetBuyAmount', type: 'uint256' },\n            { internalType: 'bytes[]', name: 'signatures', type: 'bytes[]' },\n            { internalType: 'uint256[]', name: 'ethFeeAmounts', type: 'uint256[]' },\n            {\n                internalType: 'address payable[]',\n                name: 'feeRecipients',\n                type: 'address[]',\n            },\n        ],\n        name: 'marketBuyOrdersWithEth',\n        outputs: [\n            { internalType: 'uint256', name: 'wethSpentAmount', type: 'uint256' },\n            {\n                internalType: 'uint256',\n                name: 'makerAssetAcquiredAmount',\n                type: 'uint256',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'orders',\n                type: 'tuple[]',\n            },\n            { internalType: 'uint256', name: 'ethSellAmount', type: 'uint256' },\n            { internalType: 'bytes[]', name: 'signatures', type: 'bytes[]' },\n            { internalType: 'uint256[]', name: 'ethFeeAmounts', type: 'uint256[]' },\n            {\n                internalType: 'address payable[]',\n                name: 'feeRecipients',\n                type: 'address[]',\n            },\n        ],\n        name: 'marketSellAmountWithEth',\n        outputs: [\n            { internalType: 'uint256', name: 'wethSpentAmount', type: 'uint256' },\n            {\n                internalType: 'uint256',\n                name: 'makerAssetAcquiredAmount',\n                type: 'uint256',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'makerAddress', type: 'address' },\n                    { internalType: 'address', name: 'takerAddress', type: 'address' },\n                    {\n                        internalType: 'address',\n                        name: 'feeRecipientAddress',\n                        type: 'address',\n                    },\n                    { internalType: 'address', name: 'senderAddress', type: 'address' },\n                    {\n                        internalType: 'uint256',\n                        name: 'makerAssetAmount',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'takerAssetAmount',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'makerFee', type: 'uint256' },\n                    { internalType: 'uint256', name: 'takerFee', type: 'uint256' },\n                    {\n                        internalType: 'uint256',\n                        name: 'expirationTimeSeconds',\n                        type: 'uint256',\n                    },\n                    { internalType: 'uint256', name: 'salt', type: 'uint256' },\n                    { internalType: 'bytes', name: 'makerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'makerFeeAssetData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'takerFeeAssetData', type: 'bytes' },\n                ],\n                internalType: 'struct LibOrder.Order[]',\n                name: 'orders',\n                type: 'tuple[]',\n            },\n            { internalType: 'bytes[]', name: 'signatures', type: 'bytes[]' },\n            { internalType: 'uint256[]', name: 'ethFeeAmounts', type: 'uint256[]' },\n            {\n                internalType: 'address payable[]',\n                name: 'feeRecipients',\n                type: 'address[]',\n            },\n        ],\n        name: 'marketSellOrdersWithEth',\n        outputs: [\n            { internalType: 'uint256', name: 'wethSpentAmount', type: 'uint256' },\n            {\n                internalType: 'uint256',\n                name: 'makerAssetAcquiredAmount',\n                type: 'uint256',\n            },\n        ],\n        payable: true,\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { internalType: 'address', name: 'operator', type: 'address' },\n            { internalType: 'address', name: 'from', type: 'address' },\n            { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },\n            { internalType: 'uint256[]', name: 'values', type: 'uint256[]' },\n            { internalType: 'bytes', name: 'data', type: 'bytes' },\n        ],\n        name: 'onERC1155BatchReceived',\n        outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { internalType: 'address', name: 'operator', type: 'address' },\n            { internalType: 'address', name: 'from', type: 'address' },\n            { internalType: 'uint256', name: 'id', type: 'uint256' },\n            { internalType: 'uint256', name: 'value', type: 'uint256' },\n            { internalType: 'bytes', name: 'data', type: 'bytes' },\n        ],\n        name: 'onERC1155Received',\n        outputs: [{ internalType: 'bytes4', name: '', type: 'bytes4' }],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: true,\n        inputs: [],\n        name: 'owner',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        payable: false,\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\n        name: 'transferOwnership',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        constant: false,\n        inputs: [\n            { internalType: 'bytes', name: 'assetData', type: 'bytes' },\n            { internalType: 'uint256', name: 'amount', type: 'uint256' },\n        ],\n        name: 'withdrawAsset',\n        outputs: [],\n        payable: false,\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n];\nexports.default = ForwarderABI;\n//# sourceMappingURL=ForwarderABI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CollectionsABI = [\n    {\n        inputs: [],\n        stateMutability: 'nonpayable',\n        type: 'constructor',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'contractAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'user',\n                type: 'address',\n            },\n        ],\n        name: 'CollectionCreated',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'role',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'previousAdminRole',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'newAdminRole',\n                type: 'bytes32',\n            },\n        ],\n        name: 'RoleAdminChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'role',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n        ],\n        name: 'RoleGranted',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'role',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n        ],\n        name: 'RoleRevoked',\n        type: 'event',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: '',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256',\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        name: 'CollectionsMap',\n        outputs: [\n            {\n                internalType: 'address',\n                name: 'contractAddress',\n                type: 'address',\n            },\n            {\n                internalType: 'string',\n                name: 'name',\n                type: 'string',\n            },\n            {\n                internalType: 'string',\n                name: 'symbol',\n                type: 'string',\n            },\n            {\n                internalType: 'address',\n                name: 'minter',\n                type: 'address',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'DEFAULT_ADMIN_ROLE',\n        outputs: [\n            {\n                internalType: 'bytes32',\n                name: '',\n                type: 'bytes32',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'role',\n                type: 'bytes32',\n            },\n        ],\n        name: 'getRoleAdmin',\n        outputs: [\n            {\n                internalType: 'bytes32',\n                name: '',\n                type: 'bytes32',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'role',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n        ],\n        name: 'grantRole',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'role',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n        ],\n        name: 'hasRole',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'role',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n        ],\n        name: 'renounceRole',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes32',\n                name: 'role',\n                type: 'bytes32',\n            },\n            {\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n        ],\n        name: 'revokeRole',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes4',\n                name: 'interfaceId',\n                type: 'bytes4',\n            },\n        ],\n        name: 'supportsInterface',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'contractAddress',\n                type: 'address',\n            },\n            {\n                internalType: 'string',\n                name: 'name',\n                type: 'string',\n            },\n            {\n                internalType: 'string',\n                name: 'symbol',\n                type: 'string',\n            },\n            {\n                internalType: 'address',\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n        name: 'addCollection',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'getCollections',\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: 'address',\n                        name: 'contractAddress',\n                        type: 'address',\n                    },\n                    {\n                        internalType: 'string',\n                        name: 'name',\n                        type: 'string',\n                    },\n                    {\n                        internalType: 'string',\n                        name: 'symbol',\n                        type: 'string',\n                    },\n                    {\n                        internalType: 'address',\n                        name: 'minter',\n                        type: 'address',\n                    },\n                ],\n                internalType: 'struct Collections.Collection[]',\n                name: '',\n                type: 'tuple[]',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n];\nexports.default = CollectionsABI;\n//# sourceMappingURL=CollectionsABI.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RoyaltiesManagerABI = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'previousOwner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'newOwner',\n                type: 'address',\n            },\n        ],\n        name: 'OwnershipTransferred',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'collectionAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'receiver',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'feesPercentage',\n                type: 'uint256',\n            },\n        ],\n        name: 'RoyaltiesAddressSet',\n        type: 'event',\n    },\n    {\n        inputs: [],\n        name: 'ERC2981Support',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n        constant: true,\n    },\n    {\n        inputs: [],\n        name: 'owner',\n        outputs: [\n            {\n                internalType: 'address',\n                name: '',\n                type: 'address',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n        constant: true,\n    },\n    {\n        inputs: [],\n        name: 'renounceOwnership',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'newOwner',\n                type: 'address',\n            },\n        ],\n        name: 'transferOwnership',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'toggleERC2981Support',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'collectionAddress',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'receiver',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256',\n                name: 'feesPercentage',\n                type: 'uint256',\n            },\n        ],\n        name: 'setRoyaltiesAddress',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'collectionAddress',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256',\n                name: 'tokenId',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'salePrice',\n                type: 'uint256',\n            },\n        ],\n        name: 'getRoyalties',\n        outputs: [\n            {\n                internalType: 'address',\n                name: 'receiver',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256',\n                name: 'royaltyAmount',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n        constant: true,\n    },\n];\nexports.default = RoyaltiesManagerABI;\n//# sourceMappingURL=RoyaltiesManagerABI.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar emitter_1 = __importDefault(require(\"./emitter\"));\nvar send = function (method, options) { return new Promise(function (resolve, reject) { return __awaiter(void 0, void 0, void 0, function () {\n    var rejectIfUserRejected, _options, gas, error_1;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                rejectIfUserRejected = function (e) {\n                    var userRejected = e.code === 4001;\n                    if (userRejected) {\n                        console.log('user rejected');\n                        reject(e);\n                    }\n                    return userRejected;\n                };\n                _options = __assign({}, options);\n                _a.label = 1;\n            case 1:\n                _a.trys.push([1, 3, , 4]);\n                return [4 /*yield*/, method.estimateGas(options)];\n            case 2:\n                gas = _a.sent();\n                _options.gasLimit = gas * 3;\n                return [3 /*break*/, 4];\n            case 3:\n                error_1 = _a.sent();\n                console.error(error_1);\n                return [3 /*break*/, 4];\n            case 4:\n                console.log('normal transaction');\n                method.send(_options)\n                    .on('transactionHash', function (txHash) { emitter_1.default.emit('tnxHash', txHash); })\n                    .then(function (txHash) {\n                    emitter_1.default.emit('TransactionConfirmed', function () { });\n                    resolve(txHash);\n                })\n                    .catch(function (e) {\n                    if (!rejectIfUserRejected(e)) {\n                        console.log('0x2 transaction');\n                        method.send(__assign(__assign({}, options), { type: '0x2' }))\n                            .on('transactionHash', function (txHash) { emitter_1.default.emit('tnxHash', txHash); })\n                            .then(function (txHash) {\n                            emitter_1.default.emit('TransactionConfirmed', function () { });\n                            resolve(txHash);\n                        })\n                            .catch(function (e2) {\n                            if (!rejectIfUserRejected(e2)) {\n                                console.log('0x0 transaction');\n                                method.send(__assign(__assign({}, options), { type: '0x0', maxFeePerGas: null, maxPriorityFeePerGas: null }))\n                                    .on('transactionHash', function (txHash) { emitter_1.default.emit('tnxHash', txHash); })\n                                    .then(function (txHash) {\n                                    emitter_1.default.emit('TransactionConfirmed', function () { });\n                                    resolve(txHash);\n                                })\n                                    .catch(function (e3) { return reject(e3); });\n                            }\n                        });\n                    }\n                });\n                return [2 /*return*/];\n        }\n    });\n}); }); };\nexports.default = send;\n//# sourceMappingURL=send.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.destructOrder = exports.createOrder = exports.generatePseudoRandom256BitNumber = void 0;\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar addresses_1 = __importDefault(require(\"../addresses\"));\nvar constants_1 = require(\"../constants\");\nvar web3_1 = __importDefault(require(\"web3\"));\nvar generatePseudoRandom256BitNumber = function () {\n    var randomNumber = bignumber_js_1.default.random(constants_1.MAX_DIGITS_IN_UNSIGNED_256_INT);\n    var factor = new bignumber_js_1.default(10).pow(constants_1.MAX_DIGITS_IN_UNSIGNED_256_INT - 1);\n    var randomNumberScaledTo256Bits = randomNumber.times(factor).integerValue();\n    return randomNumberScaledTo256Bits;\n};\nexports.generatePseudoRandom256BitNumber = generatePseudoRandom256BitNumber;\nvar pick = function (obj, props) {\n    var picked = {};\n    props.forEach(function (prop) {\n        picked[prop] = obj[prop];\n    });\n    return picked;\n};\nvar createOrder = function (_a) {\n    var chainId = _a.chainId, makerAddress = _a.makerAddress, makerAssetAmount = _a.makerAssetAmount, takerAssetAmount = _a.takerAssetAmount, makerAssetData = _a.makerAssetData, takerAssetData = _a.takerAssetData, _b = _a.takerAddress, takerAddress = _b === void 0 ? constants_1.NULL_ADDRESS : _b, _c = _a.feeRecipientAddress, feeRecipientAddress = _c === void 0 ? constants_1.NULL_ADDRESS : _c, expirationTimeSeconds = _a.expirationTimeSeconds, _d = _a.makerFee, makerFee = _d === void 0 ? constants_1.ZERO : _d, _e = _a.takerFee, takerFee = _e === void 0 ? constants_1.ZERO : _e;\n    return ({\n        chainId: chainId,\n        exchangeAddress: addresses_1.default[chainId].Exchange,\n        makerAddress: makerAddress,\n        takerAddress: takerAddress,\n        senderAddress: constants_1.NULL_ADDRESS,\n        feeRecipientAddress: feeRecipientAddress,\n        expirationTimeSeconds: expirationTimeSeconds,\n        salt: web3_1.default.utils.randomHex(32),\n        makerAssetAmount: makerAssetAmount.toString(),\n        takerAssetAmount: takerAssetAmount.toString(),\n        makerAssetData: makerAssetData,\n        takerAssetData: takerAssetData,\n        makerFeeAssetData: makerAssetData,\n        takerFeeAssetData: takerAssetData,\n        makerFee: makerFee.toString(),\n        takerFee: takerFee.toString(),\n    });\n};\nexports.createOrder = createOrder;\nvar destructOrder = function (item) { return pick(item, [\n    'chainId',\n    'exchangeAddress',\n    'makerAddress',\n    'takerAddress',\n    'senderAddress',\n    'feeRecipientAddress',\n    'expirationTimeSeconds',\n    'salt',\n    'makerAssetAmount',\n    'takerAssetAmount',\n    'makerAssetData',\n    'takerAssetData',\n    'makerFeeAssetData',\n    'takerFeeAssetData',\n    'makerFee',\n    'takerFee',\n    'signature',\n]); };\nexports.destructOrder = destructOrder;\n//# sourceMappingURL=order.js.map"],"sourceRoot":""}